//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.math.BigDecimal;
import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}commonClusters" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}combinationChartTypes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}defaultChartMeasure" minOccurs="0"/>
 *         &lt;element name="toleranceMeasure" type="{http://developer.cognos.com/schemas/report/11.0/}ChartMeasureType" minOccurs="0"/>
 *         &lt;element name="targetMeasure" type="{http://developer.cognos.com/schemas/report/11.0/}ChartMeasureType" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}baselines" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartBody" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartFooter" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartPalette" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartSubTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}markers" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}notes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalRender" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalChartColors" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}legend" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}numericalAxisY1" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}ordinalAxis" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportDrills" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}masterDetailLinks" minOccurs="0"/>
 *         &lt;element name="targetLabel" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartContents" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="toleranceLabel" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartContents" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="diamondLabel" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartContents" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}noDataHandler" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartSuppress" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}alternateText" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appOnSelectSetVariableValues" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appDrills" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appContainerSelect" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appChartProperties" minOccurs="0"/>
 *       &lt;/all>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}StandardChartAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}VisualEffects"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}DisplayDataLocation"/>
 *       &lt;attribute name="toleranceColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="green" />
 *       &lt;attribute name="toleranceTransparency" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="targetRange" type="{http://www.w3.org/2001/XMLSchema}decimal" default="50" />
 *       &lt;attribute name="targetColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="#FFC800" />
 *       &lt;attribute name="targetTransparency" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="markerColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="green" />
 *       &lt;attribute name="markerTransparency" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="targetBorderColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
 *       &lt;attribute name="targetBorderTransparency" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="performancePattern" default="onTarget">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="onTarget"/>
 *             &lt;enumeration value="belowTarget"/>
 *             &lt;enumeration value="aboveTarget"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="skew" type="{http://www.w3.org/2001/XMLSchema}decimal" default="100" />
 *       &lt;attribute name="showTargetMarker" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="targetMarkerPosition" default="first">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="first"/>
 *             &lt;enumeration value="center"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "metricsChart")
public class MetricsChart {

    protected CommonClusters commonClusters;
    protected CombinationChartTypes combinationChartTypes;
    protected ChartMeasureType defaultChartMeasure;
    protected ChartMeasureType toleranceMeasure;
    protected ChartMeasureType targetMeasure;
    protected Baselines baselines;
    protected ChartBody chartBody;
    protected ChartFooter chartFooter;
    protected ChartPalette chartPalette;
    protected ChartSubTitle chartSubTitle;
    protected ChartTitle chartTitle;
    protected Markers markers;
    protected Notes notes;
    protected Style style;
    protected ConditionalStyles conditionalStyles;
    protected ConditionalStyleRefs conditionalStyleRefs;
    protected ConditionalRender conditionalRender;
    @XmlElement(name = "XMLAttributes")
    protected XMLAttributes xmlAttributes;
    protected ConditionalChartColors conditionalChartColors;
    protected Legend legend;
    protected NumericalAxisY1 numericalAxisY1;
    protected OrdinalAxisType ordinalAxis;
    protected ReportDrills reportDrills;
    protected MasterDetailLinks masterDetailLinks;
    protected MetricsChart.TargetLabel targetLabel;
    protected MetricsChart.ToleranceLabel toleranceLabel;
    protected MetricsChart.DiamondLabel diamondLabel;
    protected NoDataHandler noDataHandler;
    protected ChartSuppress chartSuppress;
    protected LocalizedTextType alternateText;
    protected AppOnSelectSetVariableValues appOnSelectSetVariableValues;
    protected AppDrills appDrills;
    protected AppContainerSelect appContainerSelect;
    protected AppChartProperties appChartProperties;
    @XmlAttribute(name = "toleranceColor")
    protected String toleranceColor;
    @XmlAttribute(name = "toleranceTransparency")
    protected BigDecimal toleranceTransparency;
    @XmlAttribute(name = "targetRange")
    protected BigDecimal targetRange;
    @XmlAttribute(name = "targetColor")
    protected String targetColor;
    @XmlAttribute(name = "targetTransparency")
    protected BigDecimal targetTransparency;
    @XmlAttribute(name = "markerColor")
    protected String markerColor;
    @XmlAttribute(name = "markerTransparency")
    protected BigDecimal markerTransparency;
    @XmlAttribute(name = "targetBorderColor")
    protected String targetBorderColor;
    @XmlAttribute(name = "targetBorderTransparency")
    protected BigDecimal targetBorderTransparency;
    @XmlAttribute(name = "performancePattern")
    protected String performancePattern;
    @XmlAttribute(name = "skew")
    protected BigDecimal skew;
    @XmlAttribute(name = "showTargetMarker")
    protected Boolean showTargetMarker;
    @XmlAttribute(name = "targetMarkerPosition")
    protected String targetMarkerPosition;
    @XmlAttribute(name = "refQuery", required = true)
    protected String refQuery;
    @XmlAttribute(name = "showTooltips")
    protected Boolean showTooltips;
    @XmlAttribute(name = "maxHotspots")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger maxHotspots;
    @XmlAttribute(name = "displayForOrientation")
    protected String displayForOrientation;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "repeatEveryPage")
    protected Boolean repeatEveryPage;
    @XmlAttribute(name = "renderPageWhenEmpty")
    protected Boolean renderPageWhenEmpty;
    @XmlAttribute(name = "depth")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger depth;
    @XmlAttribute(name = "visualAngle")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger visualAngle;
    @XmlAttribute(name = "displayDataLocation")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String displayDataLocation;

    /**
     * Gets the value of the commonClusters property.
     * 
     * @return
     *     possible object is
     *     {@link CommonClusters }
     *     
     */
    public CommonClusters getCommonClusters() {
        return commonClusters;
    }

    /**
     * Sets the value of the commonClusters property.
     * 
     * @param value
     *     allowed object is
     *     {@link CommonClusters }
     *     
     */
    public void setCommonClusters(CommonClusters value) {
        this.commonClusters = value;
    }

    /**
     * Gets the value of the combinationChartTypes property.
     * 
     * @return
     *     possible object is
     *     {@link CombinationChartTypes }
     *     
     */
    public CombinationChartTypes getCombinationChartTypes() {
        return combinationChartTypes;
    }

    /**
     * Sets the value of the combinationChartTypes property.
     * 
     * @param value
     *     allowed object is
     *     {@link CombinationChartTypes }
     *     
     */
    public void setCombinationChartTypes(CombinationChartTypes value) {
        this.combinationChartTypes = value;
    }

    /**
     * Gets the value of the defaultChartMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link ChartMeasureType }
     *     
     */
    public ChartMeasureType getDefaultChartMeasure() {
        return defaultChartMeasure;
    }

    /**
     * Sets the value of the defaultChartMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartMeasureType }
     *     
     */
    public void setDefaultChartMeasure(ChartMeasureType value) {
        this.defaultChartMeasure = value;
    }

    /**
     * Gets the value of the toleranceMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link ChartMeasureType }
     *     
     */
    public ChartMeasureType getToleranceMeasure() {
        return toleranceMeasure;
    }

    /**
     * Sets the value of the toleranceMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartMeasureType }
     *     
     */
    public void setToleranceMeasure(ChartMeasureType value) {
        this.toleranceMeasure = value;
    }

    /**
     * Gets the value of the targetMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link ChartMeasureType }
     *     
     */
    public ChartMeasureType getTargetMeasure() {
        return targetMeasure;
    }

    /**
     * Sets the value of the targetMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartMeasureType }
     *     
     */
    public void setTargetMeasure(ChartMeasureType value) {
        this.targetMeasure = value;
    }

    /**
     * Gets the value of the baselines property.
     * 
     * @return
     *     possible object is
     *     {@link Baselines }
     *     
     */
    public Baselines getBaselines() {
        return baselines;
    }

    /**
     * Sets the value of the baselines property.
     * 
     * @param value
     *     allowed object is
     *     {@link Baselines }
     *     
     */
    public void setBaselines(Baselines value) {
        this.baselines = value;
    }

    /**
     * Gets the value of the chartBody property.
     * 
     * @return
     *     possible object is
     *     {@link ChartBody }
     *     
     */
    public ChartBody getChartBody() {
        return chartBody;
    }

    /**
     * Sets the value of the chartBody property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartBody }
     *     
     */
    public void setChartBody(ChartBody value) {
        this.chartBody = value;
    }

    /**
     * Gets the value of the chartFooter property.
     * 
     * @return
     *     possible object is
     *     {@link ChartFooter }
     *     
     */
    public ChartFooter getChartFooter() {
        return chartFooter;
    }

    /**
     * Sets the value of the chartFooter property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartFooter }
     *     
     */
    public void setChartFooter(ChartFooter value) {
        this.chartFooter = value;
    }

    /**
     * Gets the value of the chartPalette property.
     * 
     * @return
     *     possible object is
     *     {@link ChartPalette }
     *     
     */
    public ChartPalette getChartPalette() {
        return chartPalette;
    }

    /**
     * Sets the value of the chartPalette property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartPalette }
     *     
     */
    public void setChartPalette(ChartPalette value) {
        this.chartPalette = value;
    }

    /**
     * Gets the value of the chartSubTitle property.
     * 
     * @return
     *     possible object is
     *     {@link ChartSubTitle }
     *     
     */
    public ChartSubTitle getChartSubTitle() {
        return chartSubTitle;
    }

    /**
     * Sets the value of the chartSubTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartSubTitle }
     *     
     */
    public void setChartSubTitle(ChartSubTitle value) {
        this.chartSubTitle = value;
    }

    /**
     * Gets the value of the chartTitle property.
     * 
     * @return
     *     possible object is
     *     {@link ChartTitle }
     *     
     */
    public ChartTitle getChartTitle() {
        return chartTitle;
    }

    /**
     * Sets the value of the chartTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartTitle }
     *     
     */
    public void setChartTitle(ChartTitle value) {
        this.chartTitle = value;
    }

    /**
     * Gets the value of the markers property.
     * 
     * @return
     *     possible object is
     *     {@link Markers }
     *     
     */
    public Markers getMarkers() {
        return markers;
    }

    /**
     * Sets the value of the markers property.
     * 
     * @param value
     *     allowed object is
     *     {@link Markers }
     *     
     */
    public void setMarkers(Markers value) {
        this.markers = value;
    }

    /**
     * Gets the value of the notes property.
     * 
     * @return
     *     possible object is
     *     {@link Notes }
     *     
     */
    public Notes getNotes() {
        return notes;
    }

    /**
     * Sets the value of the notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Notes }
     *     
     */
    public void setNotes(Notes value) {
        this.notes = value;
    }

    /**
     * Gets the value of the style property.
     * 
     * @return
     *     possible object is
     *     {@link Style }
     *     
     */
    public Style getStyle() {
        return style;
    }

    /**
     * Sets the value of the style property.
     * 
     * @param value
     *     allowed object is
     *     {@link Style }
     *     
     */
    public void setStyle(Style value) {
        this.style = value;
    }

    /**
     * Gets the value of the conditionalStyles property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalStyles }
     *     
     */
    public ConditionalStyles getConditionalStyles() {
        return conditionalStyles;
    }

    /**
     * Sets the value of the conditionalStyles property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalStyles }
     *     
     */
    public void setConditionalStyles(ConditionalStyles value) {
        this.conditionalStyles = value;
    }

    /**
     * Gets the value of the conditionalStyleRefs property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public ConditionalStyleRefs getConditionalStyleRefs() {
        return conditionalStyleRefs;
    }

    /**
     * Sets the value of the conditionalStyleRefs property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public void setConditionalStyleRefs(ConditionalStyleRefs value) {
        this.conditionalStyleRefs = value;
    }

    /**
     * Gets the value of the conditionalRender property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalRender }
     *     
     */
    public ConditionalRender getConditionalRender() {
        return conditionalRender;
    }

    /**
     * Sets the value of the conditionalRender property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalRender }
     *     
     */
    public void setConditionalRender(ConditionalRender value) {
        this.conditionalRender = value;
    }

    /**
     * Gets the value of the xmlAttributes property.
     * 
     * @return
     *     possible object is
     *     {@link XMLAttributes }
     *     
     */
    public XMLAttributes getXMLAttributes() {
        return xmlAttributes;
    }

    /**
     * Sets the value of the xmlAttributes property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLAttributes }
     *     
     */
    public void setXMLAttributes(XMLAttributes value) {
        this.xmlAttributes = value;
    }

    /**
     * Gets the value of the conditionalChartColors property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalChartColors }
     *     
     */
    public ConditionalChartColors getConditionalChartColors() {
        return conditionalChartColors;
    }

    /**
     * Sets the value of the conditionalChartColors property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalChartColors }
     *     
     */
    public void setConditionalChartColors(ConditionalChartColors value) {
        this.conditionalChartColors = value;
    }

    /**
     * Gets the value of the legend property.
     * 
     * @return
     *     possible object is
     *     {@link Legend }
     *     
     */
    public Legend getLegend() {
        return legend;
    }

    /**
     * Sets the value of the legend property.
     * 
     * @param value
     *     allowed object is
     *     {@link Legend }
     *     
     */
    public void setLegend(Legend value) {
        this.legend = value;
    }

    /**
     * Gets the value of the numericalAxisY1 property.
     * 
     * @return
     *     possible object is
     *     {@link NumericalAxisY1 }
     *     
     */
    public NumericalAxisY1 getNumericalAxisY1() {
        return numericalAxisY1;
    }

    /**
     * Sets the value of the numericalAxisY1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link NumericalAxisY1 }
     *     
     */
    public void setNumericalAxisY1(NumericalAxisY1 value) {
        this.numericalAxisY1 = value;
    }

    /**
     * Gets the value of the ordinalAxis property.
     * 
     * @return
     *     possible object is
     *     {@link OrdinalAxisType }
     *     
     */
    public OrdinalAxisType getOrdinalAxis() {
        return ordinalAxis;
    }

    /**
     * Sets the value of the ordinalAxis property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrdinalAxisType }
     *     
     */
    public void setOrdinalAxis(OrdinalAxisType value) {
        this.ordinalAxis = value;
    }

    /**
     * Gets the value of the reportDrills property.
     * 
     * @return
     *     possible object is
     *     {@link ReportDrills }
     *     
     */
    public ReportDrills getReportDrills() {
        return reportDrills;
    }

    /**
     * Sets the value of the reportDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReportDrills }
     *     
     */
    public void setReportDrills(ReportDrills value) {
        this.reportDrills = value;
    }

    /**
     * Gets the value of the masterDetailLinks property.
     * 
     * @return
     *     possible object is
     *     {@link MasterDetailLinks }
     *     
     */
    public MasterDetailLinks getMasterDetailLinks() {
        return masterDetailLinks;
    }

    /**
     * Sets the value of the masterDetailLinks property.
     * 
     * @param value
     *     allowed object is
     *     {@link MasterDetailLinks }
     *     
     */
    public void setMasterDetailLinks(MasterDetailLinks value) {
        this.masterDetailLinks = value;
    }

    /**
     * Gets the value of the targetLabel property.
     * 
     * @return
     *     possible object is
     *     {@link MetricsChart.TargetLabel }
     *     
     */
    public MetricsChart.TargetLabel getTargetLabel() {
        return targetLabel;
    }

    /**
     * Sets the value of the targetLabel property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetricsChart.TargetLabel }
     *     
     */
    public void setTargetLabel(MetricsChart.TargetLabel value) {
        this.targetLabel = value;
    }

    /**
     * Gets the value of the toleranceLabel property.
     * 
     * @return
     *     possible object is
     *     {@link MetricsChart.ToleranceLabel }
     *     
     */
    public MetricsChart.ToleranceLabel getToleranceLabel() {
        return toleranceLabel;
    }

    /**
     * Sets the value of the toleranceLabel property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetricsChart.ToleranceLabel }
     *     
     */
    public void setToleranceLabel(MetricsChart.ToleranceLabel value) {
        this.toleranceLabel = value;
    }

    /**
     * Gets the value of the diamondLabel property.
     * 
     * @return
     *     possible object is
     *     {@link MetricsChart.DiamondLabel }
     *     
     */
    public MetricsChart.DiamondLabel getDiamondLabel() {
        return diamondLabel;
    }

    /**
     * Sets the value of the diamondLabel property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetricsChart.DiamondLabel }
     *     
     */
    public void setDiamondLabel(MetricsChart.DiamondLabel value) {
        this.diamondLabel = value;
    }

    /**
     * Gets the value of the noDataHandler property.
     * 
     * @return
     *     possible object is
     *     {@link NoDataHandler }
     *     
     */
    public NoDataHandler getNoDataHandler() {
        return noDataHandler;
    }

    /**
     * Sets the value of the noDataHandler property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoDataHandler }
     *     
     */
    public void setNoDataHandler(NoDataHandler value) {
        this.noDataHandler = value;
    }

    /**
     * Gets the value of the chartSuppress property.
     * 
     * @return
     *     possible object is
     *     {@link ChartSuppress }
     *     
     */
    public ChartSuppress getChartSuppress() {
        return chartSuppress;
    }

    /**
     * Sets the value of the chartSuppress property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartSuppress }
     *     
     */
    public void setChartSuppress(ChartSuppress value) {
        this.chartSuppress = value;
    }

    /**
     * Gets the value of the alternateText property.
     * 
     * @return
     *     possible object is
     *     {@link LocalizedTextType }
     *     
     */
    public LocalizedTextType getAlternateText() {
        return alternateText;
    }

    /**
     * Sets the value of the alternateText property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalizedTextType }
     *     
     */
    public void setAlternateText(LocalizedTextType value) {
        this.alternateText = value;
    }

    /**
     * Gets the value of the appOnSelectSetVariableValues property.
     * 
     * @return
     *     possible object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public AppOnSelectSetVariableValues getAppOnSelectSetVariableValues() {
        return appOnSelectSetVariableValues;
    }

    /**
     * Sets the value of the appOnSelectSetVariableValues property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public void setAppOnSelectSetVariableValues(AppOnSelectSetVariableValues value) {
        this.appOnSelectSetVariableValues = value;
    }

    /**
     * Gets the value of the appDrills property.
     * 
     * @return
     *     possible object is
     *     {@link AppDrills }
     *     
     */
    public AppDrills getAppDrills() {
        return appDrills;
    }

    /**
     * Sets the value of the appDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppDrills }
     *     
     */
    public void setAppDrills(AppDrills value) {
        this.appDrills = value;
    }

    /**
     * Gets the value of the appContainerSelect property.
     * 
     * @return
     *     possible object is
     *     {@link AppContainerSelect }
     *     
     */
    public AppContainerSelect getAppContainerSelect() {
        return appContainerSelect;
    }

    /**
     * Sets the value of the appContainerSelect property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppContainerSelect }
     *     
     */
    public void setAppContainerSelect(AppContainerSelect value) {
        this.appContainerSelect = value;
    }

    /**
     * Gets the value of the appChartProperties property.
     * 
     * @return
     *     possible object is
     *     {@link AppChartProperties }
     *     
     */
    public AppChartProperties getAppChartProperties() {
        return appChartProperties;
    }

    /**
     * Sets the value of the appChartProperties property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppChartProperties }
     *     
     */
    public void setAppChartProperties(AppChartProperties value) {
        this.appChartProperties = value;
    }

    /**
     * Gets the value of the toleranceColor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToleranceColor() {
        if (toleranceColor == null) {
            return "green";
        } else {
            return toleranceColor;
        }
    }

    /**
     * Sets the value of the toleranceColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setToleranceColor(String value) {
        this.toleranceColor = value;
    }

    /**
     * Gets the value of the toleranceTransparency property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getToleranceTransparency() {
        if (toleranceTransparency == null) {
            return new BigDecimal("0");
        } else {
            return toleranceTransparency;
        }
    }

    /**
     * Sets the value of the toleranceTransparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setToleranceTransparency(BigDecimal value) {
        this.toleranceTransparency = value;
    }

    /**
     * Gets the value of the targetRange property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTargetRange() {
        if (targetRange == null) {
            return new BigDecimal("50");
        } else {
            return targetRange;
        }
    }

    /**
     * Sets the value of the targetRange property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTargetRange(BigDecimal value) {
        this.targetRange = value;
    }

    /**
     * Gets the value of the targetColor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTargetColor() {
        if (targetColor == null) {
            return "#FFC800";
        } else {
            return targetColor;
        }
    }

    /**
     * Sets the value of the targetColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTargetColor(String value) {
        this.targetColor = value;
    }

    /**
     * Gets the value of the targetTransparency property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTargetTransparency() {
        if (targetTransparency == null) {
            return new BigDecimal("0");
        } else {
            return targetTransparency;
        }
    }

    /**
     * Sets the value of the targetTransparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTargetTransparency(BigDecimal value) {
        this.targetTransparency = value;
    }

    /**
     * Gets the value of the markerColor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMarkerColor() {
        if (markerColor == null) {
            return "green";
        } else {
            return markerColor;
        }
    }

    /**
     * Sets the value of the markerColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMarkerColor(String value) {
        this.markerColor = value;
    }

    /**
     * Gets the value of the markerTransparency property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMarkerTransparency() {
        if (markerTransparency == null) {
            return new BigDecimal("0");
        } else {
            return markerTransparency;
        }
    }

    /**
     * Sets the value of the markerTransparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMarkerTransparency(BigDecimal value) {
        this.markerTransparency = value;
    }

    /**
     * Gets the value of the targetBorderColor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTargetBorderColor() {
        if (targetBorderColor == null) {
            return "black";
        } else {
            return targetBorderColor;
        }
    }

    /**
     * Sets the value of the targetBorderColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTargetBorderColor(String value) {
        this.targetBorderColor = value;
    }

    /**
     * Gets the value of the targetBorderTransparency property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTargetBorderTransparency() {
        if (targetBorderTransparency == null) {
            return new BigDecimal("0");
        } else {
            return targetBorderTransparency;
        }
    }

    /**
     * Sets the value of the targetBorderTransparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTargetBorderTransparency(BigDecimal value) {
        this.targetBorderTransparency = value;
    }

    /**
     * Gets the value of the performancePattern property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPerformancePattern() {
        if (performancePattern == null) {
            return "onTarget";
        } else {
            return performancePattern;
        }
    }

    /**
     * Sets the value of the performancePattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPerformancePattern(String value) {
        this.performancePattern = value;
    }

    /**
     * Gets the value of the skew property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getSkew() {
        if (skew == null) {
            return new BigDecimal("100");
        } else {
            return skew;
        }
    }

    /**
     * Sets the value of the skew property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setSkew(BigDecimal value) {
        this.skew = value;
    }

    /**
     * Gets the value of the showTargetMarker property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isShowTargetMarker() {
        if (showTargetMarker == null) {
            return true;
        } else {
            return showTargetMarker;
        }
    }

    /**
     * Sets the value of the showTargetMarker property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setShowTargetMarker(Boolean value) {
        this.showTargetMarker = value;
    }

    /**
     * Gets the value of the targetMarkerPosition property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTargetMarkerPosition() {
        if (targetMarkerPosition == null) {
            return "first";
        } else {
            return targetMarkerPosition;
        }
    }

    /**
     * Sets the value of the targetMarkerPosition property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTargetMarkerPosition(String value) {
        this.targetMarkerPosition = value;
    }

    /**
     * Gets the value of the refQuery property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefQuery() {
        return refQuery;
    }

    /**
     * Sets the value of the refQuery property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefQuery(String value) {
        this.refQuery = value;
    }

    /**
     * Gets the value of the showTooltips property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isShowTooltips() {
        if (showTooltips == null) {
            return false;
        } else {
            return showTooltips;
        }
    }

    /**
     * Sets the value of the showTooltips property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setShowTooltips(Boolean value) {
        this.showTooltips = value;
    }

    /**
     * Gets the value of the maxHotspots property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxHotspots() {
        return maxHotspots;
    }

    /**
     * Sets the value of the maxHotspots property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxHotspots(BigInteger value) {
        this.maxHotspots = value;
    }

    /**
     * Gets the value of the displayForOrientation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayForOrientation() {
        if (displayForOrientation == null) {
            return "both";
        } else {
            return displayForOrientation;
        }
    }

    /**
     * Sets the value of the displayForOrientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayForOrientation(String value) {
        this.displayForOrientation = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the repeatEveryPage property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRepeatEveryPage() {
        if (repeatEveryPage == null) {
            return false;
        } else {
            return repeatEveryPage;
        }
    }

    /**
     * Sets the value of the repeatEveryPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRepeatEveryPage(Boolean value) {
        this.repeatEveryPage = value;
    }

    /**
     * Gets the value of the renderPageWhenEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRenderPageWhenEmpty() {
        if (renderPageWhenEmpty == null) {
            return true;
        } else {
            return renderPageWhenEmpty;
        }
    }

    /**
     * Sets the value of the renderPageWhenEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRenderPageWhenEmpty(Boolean value) {
        this.renderPageWhenEmpty = value;
    }

    /**
     * Gets the value of the depth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDepth() {
        if (depth == null) {
            return new BigInteger("0");
        } else {
            return depth;
        }
    }

    /**
     * Sets the value of the depth property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDepth(BigInteger value) {
        this.depth = value;
    }

    /**
     * Gets the value of the visualAngle property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getVisualAngle() {
        if (visualAngle == null) {
            return new BigInteger("45");
        } else {
            return visualAngle;
        }
    }

    /**
     * Sets the value of the visualAngle property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setVisualAngle(BigInteger value) {
        this.visualAngle = value;
    }

    /**
     * Gets the value of the displayDataLocation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayDataLocation() {
        if (displayDataLocation == null) {
            return "centered";
        } else {
            return displayDataLocation;
        }
    }

    /**
     * Sets the value of the displayDataLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayDataLocation(String value) {
        this.displayDataLocation = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartContents" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class DiamondLabel {

        protected ChartContents chartContents;
        protected PropertyList propertyList;

        /**
         * Gets the value of the chartContents property.
         * 
         * @return
         *     possible object is
         *     {@link ChartContents }
         *     
         */
        public ChartContents getChartContents() {
            return chartContents;
        }

        /**
         * Sets the value of the chartContents property.
         * 
         * @param value
         *     allowed object is
         *     {@link ChartContents }
         *     
         */
        public void setChartContents(ChartContents value) {
            this.chartContents = value;
        }

        /**
         * Gets the value of the propertyList property.
         * 
         * @return
         *     possible object is
         *     {@link PropertyList }
         *     
         */
        public PropertyList getPropertyList() {
            return propertyList;
        }

        /**
         * Sets the value of the propertyList property.
         * 
         * @param value
         *     allowed object is
         *     {@link PropertyList }
         *     
         */
        public void setPropertyList(PropertyList value) {
            this.propertyList = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartContents" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class TargetLabel {

        protected ChartContents chartContents;
        protected PropertyList propertyList;

        /**
         * Gets the value of the chartContents property.
         * 
         * @return
         *     possible object is
         *     {@link ChartContents }
         *     
         */
        public ChartContents getChartContents() {
            return chartContents;
        }

        /**
         * Sets the value of the chartContents property.
         * 
         * @param value
         *     allowed object is
         *     {@link ChartContents }
         *     
         */
        public void setChartContents(ChartContents value) {
            this.chartContents = value;
        }

        /**
         * Gets the value of the propertyList property.
         * 
         * @return
         *     possible object is
         *     {@link PropertyList }
         *     
         */
        public PropertyList getPropertyList() {
            return propertyList;
        }

        /**
         * Sets the value of the propertyList property.
         * 
         * @param value
         *     allowed object is
         *     {@link PropertyList }
         *     
         */
        public void setPropertyList(PropertyList value) {
            this.propertyList = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartContents" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class ToleranceLabel {

        protected ChartContents chartContents;
        protected PropertyList propertyList;

        /**
         * Gets the value of the chartContents property.
         * 
         * @return
         *     possible object is
         *     {@link ChartContents }
         *     
         */
        public ChartContents getChartContents() {
            return chartContents;
        }

        /**
         * Sets the value of the chartContents property.
         * 
         * @param value
         *     allowed object is
         *     {@link ChartContents }
         *     
         */
        public void setChartContents(ChartContents value) {
            this.chartContents = value;
        }

        /**
         * Gets the value of the propertyList property.
         * 
         * @return
         *     possible object is
         *     {@link PropertyList }
         *     
         */
        public PropertyList getPropertyList() {
            return propertyList;
        }

        /**
         * Sets the value of the propertyList property.
         * 
         * @param value
         *     allowed object is
         *     {@link PropertyList }
         *     
         */
        public void setPropertyList(PropertyList value) {
            this.propertyList = value;
        }

    }

}
