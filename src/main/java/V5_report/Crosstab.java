//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element name="crosstabColumns" type="{http://developer.cognos.com/schemas/report/11.0/}CrosstabNodeListType" minOccurs="0"/>
 *         &lt;element name="crosstabRows" type="{http://developer.cognos.com/schemas/report/11.0/}CrosstabNodeListType" minOccurs="0"/>
 *         &lt;element name="crosstabFactCell" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabFactCellProperties" minOccurs="0"/>
 *                 &lt;/all>
 *                 &lt;attribute name="applySingleDefaultStyle" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *                 &lt;attribute name="template" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}defaultMeasure" minOccurs="0"/>
 *         &lt;element name="crosstabCorner" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{http://developer.cognos.com/schemas/report/11.0/}GenericContainerSubElementType">
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="crosstabIntersections" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="crosstabIntersection" maxOccurs="unbounded">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;all>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents" minOccurs="0"/>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabIntersectionProperties" minOccurs="0"/>
 *                           &lt;/all>
 *                           &lt;attribute name="row" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                           &lt;attribute name="column" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="crosstabRowNodeStyle" type="{http://developer.cognos.com/schemas/report/11.0/}GenericLayoutStyleType" minOccurs="0"/>
 *         &lt;element name="crosstabColumnNodeStyle" type="{http://developer.cognos.com/schemas/report/11.0/}GenericLayoutStyleType" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}masterDetailLinks" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalRender" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}noDataHandler" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}containerDropShadow" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}crosstabSuppress" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}summaryText" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appContainerFilter" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appContainerSelect" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appOnSelectSetVariableValues" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appDrills" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabProperties" minOccurs="0"/>
 *       &lt;/all>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}NoPageWhenNoDataAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}AppOrientationControlAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CommonLayoutAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}HorizontalPaginationAttributes"/>
 *       &lt;attribute name="refQuery" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="rowsPerPage" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
 *       &lt;attribute name="factCellStylePrecedence" default="rows">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="rows"/>
 *             &lt;enumeration value="columns"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="pageBreakText" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "crosstab")
public class Crosstab {

    protected CrosstabNodeListType crosstabColumns;
    protected CrosstabNodeListType crosstabRows;
    protected Crosstab.CrosstabFactCell crosstabFactCell;
    protected DefaultMeasure defaultMeasure;
    protected Crosstab.CrosstabCorner crosstabCorner;
    protected Crosstab.CrosstabIntersections crosstabIntersections;
    protected GenericLayoutStyleType crosstabRowNodeStyle;
    protected GenericLayoutStyleType crosstabColumnNodeStyle;
    protected MasterDetailLinks masterDetailLinks;
    protected Style style;
    protected ConditionalStyles conditionalStyles;
    protected ConditionalStyleRefs conditionalStyleRefs;
    protected ConditionalRender conditionalRender;
    @XmlElement(name = "XMLAttributes")
    protected XMLAttributes xmlAttributes;
    protected NoDataHandler noDataHandler;
    protected ContainerDropShadow containerDropShadow;
    protected CrosstabSuppress crosstabSuppress;
    protected LocalizedTextType summaryText;
    protected AppContainerFilter appContainerFilter;
    protected AppContainerSelect appContainerSelect;
    protected AppOnSelectSetVariableValues appOnSelectSetVariableValues;
    protected AppDrills appDrills;
    protected AppCrosstabProperties appCrosstabProperties;
    @XmlAttribute(name = "refQuery", required = true)
    protected String refQuery;
    @XmlAttribute(name = "rowsPerPage")
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger rowsPerPage;
    @XmlAttribute(name = "factCellStylePrecedence")
    protected String factCellStylePrecedence;
    @XmlAttribute(name = "pageBreakText")
    protected Boolean pageBreakText;
    @XmlAttribute(name = "renderPageWhenEmpty")
    protected Boolean renderPageWhenEmpty;
    @XmlAttribute(name = "displayForOrientation")
    protected String displayForOrientation;
    @XmlAttribute(name = "repeatEveryPage")
    protected Boolean repeatEveryPage;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "horizontalPagination")
    protected Boolean horizontalPagination;

    /**
     * Gets the value of the crosstabColumns property.
     * 
     * @return
     *     possible object is
     *     {@link CrosstabNodeListType }
     *     
     */
    public CrosstabNodeListType getCrosstabColumns() {
        return crosstabColumns;
    }

    /**
     * Sets the value of the crosstabColumns property.
     * 
     * @param value
     *     allowed object is
     *     {@link CrosstabNodeListType }
     *     
     */
    public void setCrosstabColumns(CrosstabNodeListType value) {
        this.crosstabColumns = value;
    }

    /**
     * Gets the value of the crosstabRows property.
     * 
     * @return
     *     possible object is
     *     {@link CrosstabNodeListType }
     *     
     */
    public CrosstabNodeListType getCrosstabRows() {
        return crosstabRows;
    }

    /**
     * Sets the value of the crosstabRows property.
     * 
     * @param value
     *     allowed object is
     *     {@link CrosstabNodeListType }
     *     
     */
    public void setCrosstabRows(CrosstabNodeListType value) {
        this.crosstabRows = value;
    }

    /**
     * Gets the value of the crosstabFactCell property.
     * 
     * @return
     *     possible object is
     *     {@link Crosstab.CrosstabFactCell }
     *     
     */
    public Crosstab.CrosstabFactCell getCrosstabFactCell() {
        return crosstabFactCell;
    }

    /**
     * Sets the value of the crosstabFactCell property.
     * 
     * @param value
     *     allowed object is
     *     {@link Crosstab.CrosstabFactCell }
     *     
     */
    public void setCrosstabFactCell(Crosstab.CrosstabFactCell value) {
        this.crosstabFactCell = value;
    }

    /**
     * Gets the value of the defaultMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link DefaultMeasure }
     *     
     */
    public DefaultMeasure getDefaultMeasure() {
        return defaultMeasure;
    }

    /**
     * Sets the value of the defaultMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link DefaultMeasure }
     *     
     */
    public void setDefaultMeasure(DefaultMeasure value) {
        this.defaultMeasure = value;
    }

    /**
     * Gets the value of the crosstabCorner property.
     * 
     * @return
     *     possible object is
     *     {@link Crosstab.CrosstabCorner }
     *     
     */
    public Crosstab.CrosstabCorner getCrosstabCorner() {
        return crosstabCorner;
    }

    /**
     * Sets the value of the crosstabCorner property.
     * 
     * @param value
     *     allowed object is
     *     {@link Crosstab.CrosstabCorner }
     *     
     */
    public void setCrosstabCorner(Crosstab.CrosstabCorner value) {
        this.crosstabCorner = value;
    }

    /**
     * Gets the value of the crosstabIntersections property.
     * 
     * @return
     *     possible object is
     *     {@link Crosstab.CrosstabIntersections }
     *     
     */
    public Crosstab.CrosstabIntersections getCrosstabIntersections() {
        return crosstabIntersections;
    }

    /**
     * Sets the value of the crosstabIntersections property.
     * 
     * @param value
     *     allowed object is
     *     {@link Crosstab.CrosstabIntersections }
     *     
     */
    public void setCrosstabIntersections(Crosstab.CrosstabIntersections value) {
        this.crosstabIntersections = value;
    }

    /**
     * Gets the value of the crosstabRowNodeStyle property.
     * 
     * @return
     *     possible object is
     *     {@link GenericLayoutStyleType }
     *     
     */
    public GenericLayoutStyleType getCrosstabRowNodeStyle() {
        return crosstabRowNodeStyle;
    }

    /**
     * Sets the value of the crosstabRowNodeStyle property.
     * 
     * @param value
     *     allowed object is
     *     {@link GenericLayoutStyleType }
     *     
     */
    public void setCrosstabRowNodeStyle(GenericLayoutStyleType value) {
        this.crosstabRowNodeStyle = value;
    }

    /**
     * Gets the value of the crosstabColumnNodeStyle property.
     * 
     * @return
     *     possible object is
     *     {@link GenericLayoutStyleType }
     *     
     */
    public GenericLayoutStyleType getCrosstabColumnNodeStyle() {
        return crosstabColumnNodeStyle;
    }

    /**
     * Sets the value of the crosstabColumnNodeStyle property.
     * 
     * @param value
     *     allowed object is
     *     {@link GenericLayoutStyleType }
     *     
     */
    public void setCrosstabColumnNodeStyle(GenericLayoutStyleType value) {
        this.crosstabColumnNodeStyle = value;
    }

    /**
     * Gets the value of the masterDetailLinks property.
     * 
     * @return
     *     possible object is
     *     {@link MasterDetailLinks }
     *     
     */
    public MasterDetailLinks getMasterDetailLinks() {
        return masterDetailLinks;
    }

    /**
     * Sets the value of the masterDetailLinks property.
     * 
     * @param value
     *     allowed object is
     *     {@link MasterDetailLinks }
     *     
     */
    public void setMasterDetailLinks(MasterDetailLinks value) {
        this.masterDetailLinks = value;
    }

    /**
     * Gets the value of the style property.
     * 
     * @return
     *     possible object is
     *     {@link Style }
     *     
     */
    public Style getStyle() {
        return style;
    }

    /**
     * Sets the value of the style property.
     * 
     * @param value
     *     allowed object is
     *     {@link Style }
     *     
     */
    public void setStyle(Style value) {
        this.style = value;
    }

    /**
     * Gets the value of the conditionalStyles property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalStyles }
     *     
     */
    public ConditionalStyles getConditionalStyles() {
        return conditionalStyles;
    }

    /**
     * Sets the value of the conditionalStyles property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalStyles }
     *     
     */
    public void setConditionalStyles(ConditionalStyles value) {
        this.conditionalStyles = value;
    }

    /**
     * Gets the value of the conditionalStyleRefs property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public ConditionalStyleRefs getConditionalStyleRefs() {
        return conditionalStyleRefs;
    }

    /**
     * Sets the value of the conditionalStyleRefs property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public void setConditionalStyleRefs(ConditionalStyleRefs value) {
        this.conditionalStyleRefs = value;
    }

    /**
     * Gets the value of the conditionalRender property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalRender }
     *     
     */
    public ConditionalRender getConditionalRender() {
        return conditionalRender;
    }

    /**
     * Sets the value of the conditionalRender property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalRender }
     *     
     */
    public void setConditionalRender(ConditionalRender value) {
        this.conditionalRender = value;
    }

    /**
     * Gets the value of the xmlAttributes property.
     * 
     * @return
     *     possible object is
     *     {@link XMLAttributes }
     *     
     */
    public XMLAttributes getXMLAttributes() {
        return xmlAttributes;
    }

    /**
     * Sets the value of the xmlAttributes property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLAttributes }
     *     
     */
    public void setXMLAttributes(XMLAttributes value) {
        this.xmlAttributes = value;
    }

    /**
     * Gets the value of the noDataHandler property.
     * 
     * @return
     *     possible object is
     *     {@link NoDataHandler }
     *     
     */
    public NoDataHandler getNoDataHandler() {
        return noDataHandler;
    }

    /**
     * Sets the value of the noDataHandler property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoDataHandler }
     *     
     */
    public void setNoDataHandler(NoDataHandler value) {
        this.noDataHandler = value;
    }

    /**
     * Gets the value of the containerDropShadow property.
     * 
     * @return
     *     possible object is
     *     {@link ContainerDropShadow }
     *     
     */
    public ContainerDropShadow getContainerDropShadow() {
        return containerDropShadow;
    }

    /**
     * Sets the value of the containerDropShadow property.
     * 
     * @param value
     *     allowed object is
     *     {@link ContainerDropShadow }
     *     
     */
    public void setContainerDropShadow(ContainerDropShadow value) {
        this.containerDropShadow = value;
    }

    /**
     * Gets the value of the crosstabSuppress property.
     * 
     * @return
     *     possible object is
     *     {@link CrosstabSuppress }
     *     
     */
    public CrosstabSuppress getCrosstabSuppress() {
        return crosstabSuppress;
    }

    /**
     * Sets the value of the crosstabSuppress property.
     * 
     * @param value
     *     allowed object is
     *     {@link CrosstabSuppress }
     *     
     */
    public void setCrosstabSuppress(CrosstabSuppress value) {
        this.crosstabSuppress = value;
    }

    /**
     * Gets the value of the summaryText property.
     * 
     * @return
     *     possible object is
     *     {@link LocalizedTextType }
     *     
     */
    public LocalizedTextType getSummaryText() {
        return summaryText;
    }

    /**
     * Sets the value of the summaryText property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalizedTextType }
     *     
     */
    public void setSummaryText(LocalizedTextType value) {
        this.summaryText = value;
    }

    /**
     * Gets the value of the appContainerFilter property.
     * 
     * @return
     *     possible object is
     *     {@link AppContainerFilter }
     *     
     */
    public AppContainerFilter getAppContainerFilter() {
        return appContainerFilter;
    }

    /**
     * Sets the value of the appContainerFilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppContainerFilter }
     *     
     */
    public void setAppContainerFilter(AppContainerFilter value) {
        this.appContainerFilter = value;
    }

    /**
     * Gets the value of the appContainerSelect property.
     * 
     * @return
     *     possible object is
     *     {@link AppContainerSelect }
     *     
     */
    public AppContainerSelect getAppContainerSelect() {
        return appContainerSelect;
    }

    /**
     * Sets the value of the appContainerSelect property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppContainerSelect }
     *     
     */
    public void setAppContainerSelect(AppContainerSelect value) {
        this.appContainerSelect = value;
    }

    /**
     * Gets the value of the appOnSelectSetVariableValues property.
     * 
     * @return
     *     possible object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public AppOnSelectSetVariableValues getAppOnSelectSetVariableValues() {
        return appOnSelectSetVariableValues;
    }

    /**
     * Sets the value of the appOnSelectSetVariableValues property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public void setAppOnSelectSetVariableValues(AppOnSelectSetVariableValues value) {
        this.appOnSelectSetVariableValues = value;
    }

    /**
     * Gets the value of the appDrills property.
     * 
     * @return
     *     possible object is
     *     {@link AppDrills }
     *     
     */
    public AppDrills getAppDrills() {
        return appDrills;
    }

    /**
     * Sets the value of the appDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppDrills }
     *     
     */
    public void setAppDrills(AppDrills value) {
        this.appDrills = value;
    }

    /**
     * Gets the value of the appCrosstabProperties property.
     * 
     * @return
     *     possible object is
     *     {@link AppCrosstabProperties }
     *     
     */
    public AppCrosstabProperties getAppCrosstabProperties() {
        return appCrosstabProperties;
    }

    /**
     * Sets the value of the appCrosstabProperties property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCrosstabProperties }
     *     
     */
    public void setAppCrosstabProperties(AppCrosstabProperties value) {
        this.appCrosstabProperties = value;
    }

    /**
     * Gets the value of the refQuery property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefQuery() {
        return refQuery;
    }

    /**
     * Sets the value of the refQuery property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefQuery(String value) {
        this.refQuery = value;
    }

    /**
     * Gets the value of the rowsPerPage property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getRowsPerPage() {
        return rowsPerPage;
    }

    /**
     * Sets the value of the rowsPerPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setRowsPerPage(BigInteger value) {
        this.rowsPerPage = value;
    }

    /**
     * Gets the value of the factCellStylePrecedence property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFactCellStylePrecedence() {
        if (factCellStylePrecedence == null) {
            return "rows";
        } else {
            return factCellStylePrecedence;
        }
    }

    /**
     * Sets the value of the factCellStylePrecedence property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFactCellStylePrecedence(String value) {
        this.factCellStylePrecedence = value;
    }

    /**
     * Gets the value of the pageBreakText property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isPageBreakText() {
        if (pageBreakText == null) {
            return true;
        } else {
            return pageBreakText;
        }
    }

    /**
     * Sets the value of the pageBreakText property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPageBreakText(Boolean value) {
        this.pageBreakText = value;
    }

    /**
     * Gets the value of the renderPageWhenEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRenderPageWhenEmpty() {
        if (renderPageWhenEmpty == null) {
            return true;
        } else {
            return renderPageWhenEmpty;
        }
    }

    /**
     * Sets the value of the renderPageWhenEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRenderPageWhenEmpty(Boolean value) {
        this.renderPageWhenEmpty = value;
    }

    /**
     * Gets the value of the displayForOrientation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayForOrientation() {
        if (displayForOrientation == null) {
            return "both";
        } else {
            return displayForOrientation;
        }
    }

    /**
     * Sets the value of the displayForOrientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayForOrientation(String value) {
        this.displayForOrientation = value;
    }

    /**
     * Gets the value of the repeatEveryPage property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRepeatEveryPage() {
        if (repeatEveryPage == null) {
            return false;
        } else {
            return repeatEveryPage;
        }
    }

    /**
     * Sets the value of the repeatEveryPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRepeatEveryPage(Boolean value) {
        this.repeatEveryPage = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the horizontalPagination property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isHorizontalPagination() {
        if (horizontalPagination == null) {
            return false;
        } else {
            return horizontalPagination;
        }
    }

    /**
     * Sets the value of the horizontalPagination property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHorizontalPagination(Boolean value) {
        this.horizontalPagination = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{http://developer.cognos.com/schemas/report/11.0/}GenericContainerSubElementType">
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class CrosstabCorner
        extends GenericContainerSubElementType
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabFactCellProperties" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attribute name="applySingleDefaultStyle" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
     *       &lt;attribute name="template" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class CrosstabFactCell {

        @XmlElement(required = true)
        protected Contents contents;
        protected Style style;
        protected ConditionalStyles conditionalStyles;
        protected ConditionalStyleRefs conditionalStyleRefs;
        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        protected AppCrosstabFactCellProperties appCrosstabFactCellProperties;
        @XmlAttribute(name = "applySingleDefaultStyle")
        protected Boolean applySingleDefaultStyle;
        @XmlAttribute(name = "template")
        protected Boolean template;

        /**
         * Gets the value of the contents property.
         * 
         * @return
         *     possible object is
         *     {@link Contents }
         *     
         */
        public Contents getContents() {
            return contents;
        }

        /**
         * Sets the value of the contents property.
         * 
         * @param value
         *     allowed object is
         *     {@link Contents }
         *     
         */
        public void setContents(Contents value) {
            this.contents = value;
        }

        /**
         * Gets the value of the style property.
         * 
         * @return
         *     possible object is
         *     {@link Style }
         *     
         */
        public Style getStyle() {
            return style;
        }

        /**
         * Sets the value of the style property.
         * 
         * @param value
         *     allowed object is
         *     {@link Style }
         *     
         */
        public void setStyle(Style value) {
            this.style = value;
        }

        /**
         * Gets the value of the conditionalStyles property.
         * 
         * @return
         *     possible object is
         *     {@link ConditionalStyles }
         *     
         */
        public ConditionalStyles getConditionalStyles() {
            return conditionalStyles;
        }

        /**
         * Sets the value of the conditionalStyles property.
         * 
         * @param value
         *     allowed object is
         *     {@link ConditionalStyles }
         *     
         */
        public void setConditionalStyles(ConditionalStyles value) {
            this.conditionalStyles = value;
        }

        /**
         * Gets the value of the conditionalStyleRefs property.
         * 
         * @return
         *     possible object is
         *     {@link ConditionalStyleRefs }
         *     
         */
        public ConditionalStyleRefs getConditionalStyleRefs() {
            return conditionalStyleRefs;
        }

        /**
         * Sets the value of the conditionalStyleRefs property.
         * 
         * @param value
         *     allowed object is
         *     {@link ConditionalStyleRefs }
         *     
         */
        public void setConditionalStyleRefs(ConditionalStyleRefs value) {
            this.conditionalStyleRefs = value;
        }

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the appCrosstabFactCellProperties property.
         * 
         * @return
         *     possible object is
         *     {@link AppCrosstabFactCellProperties }
         *     
         */
        public AppCrosstabFactCellProperties getAppCrosstabFactCellProperties() {
            return appCrosstabFactCellProperties;
        }

        /**
         * Sets the value of the appCrosstabFactCellProperties property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCrosstabFactCellProperties }
         *     
         */
        public void setAppCrosstabFactCellProperties(AppCrosstabFactCellProperties value) {
            this.appCrosstabFactCellProperties = value;
        }

        /**
         * Gets the value of the applySingleDefaultStyle property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isApplySingleDefaultStyle() {
            if (applySingleDefaultStyle == null) {
                return false;
            } else {
                return applySingleDefaultStyle;
            }
        }

        /**
         * Sets the value of the applySingleDefaultStyle property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setApplySingleDefaultStyle(Boolean value) {
            this.applySingleDefaultStyle = value;
        }

        /**
         * Gets the value of the template property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isTemplate() {
            if (template == null) {
                return false;
            } else {
                return template;
            }
        }

        /**
         * Sets the value of the template property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setTemplate(Boolean value) {
            this.template = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="crosstabIntersection" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;all>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents" minOccurs="0"/>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabIntersectionProperties" minOccurs="0"/>
     *                 &lt;/all>
     *                 &lt;attribute name="row" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                 &lt;attribute name="column" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "crosstabIntersection"
    })
    public static class CrosstabIntersections {

        @XmlElement(required = true)
        protected List<Crosstab.CrosstabIntersections.CrosstabIntersection> crosstabIntersection;

        /**
         * Gets the value of the crosstabIntersection property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the crosstabIntersection property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCrosstabIntersection().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Crosstab.CrosstabIntersections.CrosstabIntersection }
         * 
         * 
         */
        public List<Crosstab.CrosstabIntersections.CrosstabIntersection> getCrosstabIntersection() {
            if (crosstabIntersection == null) {
                crosstabIntersection = new ArrayList<Crosstab.CrosstabIntersections.CrosstabIntersection>();
            }
            return this.crosstabIntersection;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;all>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents" minOccurs="0"/>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabIntersectionProperties" minOccurs="0"/>
         *       &lt;/all>
         *       &lt;attribute name="row" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
         *       &lt;attribute name="column" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {

        })
        public static class CrosstabIntersection {

            protected Contents contents;
            protected Style style;
            protected ConditionalStyles conditionalStyles;
            protected ConditionalStyleRefs conditionalStyleRefs;
            @XmlElement(name = "XMLAttributes")
            protected XMLAttributes xmlAttributes;
            protected AppCrosstabIntersectionProperties appCrosstabIntersectionProperties;
            @XmlAttribute(name = "row", required = true)
            protected String row;
            @XmlAttribute(name = "column", required = true)
            protected String column;

            /**
             * Gets the value of the contents property.
             * 
             * @return
             *     possible object is
             *     {@link Contents }
             *     
             */
            public Contents getContents() {
                return contents;
            }

            /**
             * Sets the value of the contents property.
             * 
             * @param value
             *     allowed object is
             *     {@link Contents }
             *     
             */
            public void setContents(Contents value) {
                this.contents = value;
            }

            /**
             * Gets the value of the style property.
             * 
             * @return
             *     possible object is
             *     {@link Style }
             *     
             */
            public Style getStyle() {
                return style;
            }

            /**
             * Sets the value of the style property.
             * 
             * @param value
             *     allowed object is
             *     {@link Style }
             *     
             */
            public void setStyle(Style value) {
                this.style = value;
            }

            /**
             * Gets the value of the conditionalStyles property.
             * 
             * @return
             *     possible object is
             *     {@link ConditionalStyles }
             *     
             */
            public ConditionalStyles getConditionalStyles() {
                return conditionalStyles;
            }

            /**
             * Sets the value of the conditionalStyles property.
             * 
             * @param value
             *     allowed object is
             *     {@link ConditionalStyles }
             *     
             */
            public void setConditionalStyles(ConditionalStyles value) {
                this.conditionalStyles = value;
            }

            /**
             * Gets the value of the conditionalStyleRefs property.
             * 
             * @return
             *     possible object is
             *     {@link ConditionalStyleRefs }
             *     
             */
            public ConditionalStyleRefs getConditionalStyleRefs() {
                return conditionalStyleRefs;
            }

            /**
             * Sets the value of the conditionalStyleRefs property.
             * 
             * @param value
             *     allowed object is
             *     {@link ConditionalStyleRefs }
             *     
             */
            public void setConditionalStyleRefs(ConditionalStyleRefs value) {
                this.conditionalStyleRefs = value;
            }

            /**
             * Gets the value of the xmlAttributes property.
             * 
             * @return
             *     possible object is
             *     {@link XMLAttributes }
             *     
             */
            public XMLAttributes getXMLAttributes() {
                return xmlAttributes;
            }

            /**
             * Sets the value of the xmlAttributes property.
             * 
             * @param value
             *     allowed object is
             *     {@link XMLAttributes }
             *     
             */
            public void setXMLAttributes(XMLAttributes value) {
                this.xmlAttributes = value;
            }

            /**
             * Gets the value of the appCrosstabIntersectionProperties property.
             * 
             * @return
             *     possible object is
             *     {@link AppCrosstabIntersectionProperties }
             *     
             */
            public AppCrosstabIntersectionProperties getAppCrosstabIntersectionProperties() {
                return appCrosstabIntersectionProperties;
            }

            /**
             * Sets the value of the appCrosstabIntersectionProperties property.
             * 
             * @param value
             *     allowed object is
             *     {@link AppCrosstabIntersectionProperties }
             *     
             */
            public void setAppCrosstabIntersectionProperties(AppCrosstabIntersectionProperties value) {
                this.appCrosstabIntersectionProperties = value;
            }

            /**
             * Gets the value of the row property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getRow() {
                return row;
            }

            /**
             * Sets the value of the row property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setRow(String value) {
                this.row = value;
            }

            /**
             * Gets the value of the column property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getColumn() {
                return column;
            }

            /**
             * Sets the value of the column property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setColumn(String value) {
                this.column = value;
            }

        }

    }

}
