//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;group ref="{http://developer.cognos.com/schemas/report/11.0/}appConditionElement"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "appConditionAnd",
    "appConditionOr",
    "appConditionNot",
    "appConditionDataItemComparison",
    "appConditionConstantComparison",
    "appConditionIsVariableEmpty",
    "appConditionIsDataItemEmpty",
    "appConditionDataItemConstantComparison"
})
@XmlRootElement(name = "appCondition")
public class AppCondition {

    protected AppCondition.AppConditionAnd appConditionAnd;
    protected AppCondition.AppConditionOr appConditionOr;
    protected AppCondition.AppConditionNot appConditionNot;
    protected AppCondition.AppConditionDataItemComparison appConditionDataItemComparison;
    protected AppCondition.AppConditionConstantComparison appConditionConstantComparison;
    protected AppCondition.AppConditionIsVariableEmpty appConditionIsVariableEmpty;
    protected AppCondition.AppConditionIsDataItemEmpty appConditionIsDataItemEmpty;
    protected AppCondition.AppConditionDataItemConstantComparison appConditionDataItemConstantComparison;

    /**
     * Gets the value of the appConditionAnd property.
     * 
     * @return
     *     possible object is
     *     {@link AppCondition.AppConditionAnd }
     *     
     */
    public AppCondition.AppConditionAnd getAppConditionAnd() {
        return appConditionAnd;
    }

    /**
     * Sets the value of the appConditionAnd property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCondition.AppConditionAnd }
     *     
     */
    public void setAppConditionAnd(AppCondition.AppConditionAnd value) {
        this.appConditionAnd = value;
    }

    /**
     * Gets the value of the appConditionOr property.
     * 
     * @return
     *     possible object is
     *     {@link AppCondition.AppConditionOr }
     *     
     */
    public AppCondition.AppConditionOr getAppConditionOr() {
        return appConditionOr;
    }

    /**
     * Sets the value of the appConditionOr property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCondition.AppConditionOr }
     *     
     */
    public void setAppConditionOr(AppCondition.AppConditionOr value) {
        this.appConditionOr = value;
    }

    /**
     * Gets the value of the appConditionNot property.
     * 
     * @return
     *     possible object is
     *     {@link AppCondition.AppConditionNot }
     *     
     */
    public AppCondition.AppConditionNot getAppConditionNot() {
        return appConditionNot;
    }

    /**
     * Sets the value of the appConditionNot property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCondition.AppConditionNot }
     *     
     */
    public void setAppConditionNot(AppCondition.AppConditionNot value) {
        this.appConditionNot = value;
    }

    /**
     * Gets the value of the appConditionDataItemComparison property.
     * 
     * @return
     *     possible object is
     *     {@link AppCondition.AppConditionDataItemComparison }
     *     
     */
    public AppCondition.AppConditionDataItemComparison getAppConditionDataItemComparison() {
        return appConditionDataItemComparison;
    }

    /**
     * Sets the value of the appConditionDataItemComparison property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCondition.AppConditionDataItemComparison }
     *     
     */
    public void setAppConditionDataItemComparison(AppCondition.AppConditionDataItemComparison value) {
        this.appConditionDataItemComparison = value;
    }

    /**
     * Gets the value of the appConditionConstantComparison property.
     * 
     * @return
     *     possible object is
     *     {@link AppCondition.AppConditionConstantComparison }
     *     
     */
    public AppCondition.AppConditionConstantComparison getAppConditionConstantComparison() {
        return appConditionConstantComparison;
    }

    /**
     * Sets the value of the appConditionConstantComparison property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCondition.AppConditionConstantComparison }
     *     
     */
    public void setAppConditionConstantComparison(AppCondition.AppConditionConstantComparison value) {
        this.appConditionConstantComparison = value;
    }

    /**
     * Gets the value of the appConditionIsVariableEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link AppCondition.AppConditionIsVariableEmpty }
     *     
     */
    public AppCondition.AppConditionIsVariableEmpty getAppConditionIsVariableEmpty() {
        return appConditionIsVariableEmpty;
    }

    /**
     * Sets the value of the appConditionIsVariableEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCondition.AppConditionIsVariableEmpty }
     *     
     */
    public void setAppConditionIsVariableEmpty(AppCondition.AppConditionIsVariableEmpty value) {
        this.appConditionIsVariableEmpty = value;
    }

    /**
     * Gets the value of the appConditionIsDataItemEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link AppCondition.AppConditionIsDataItemEmpty }
     *     
     */
    public AppCondition.AppConditionIsDataItemEmpty getAppConditionIsDataItemEmpty() {
        return appConditionIsDataItemEmpty;
    }

    /**
     * Sets the value of the appConditionIsDataItemEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCondition.AppConditionIsDataItemEmpty }
     *     
     */
    public void setAppConditionIsDataItemEmpty(AppCondition.AppConditionIsDataItemEmpty value) {
        this.appConditionIsDataItemEmpty = value;
    }

    /**
     * Gets the value of the appConditionDataItemConstantComparison property.
     * 
     * @return
     *     possible object is
     *     {@link AppCondition.AppConditionDataItemConstantComparison }
     *     
     */
    public AppCondition.AppConditionDataItemConstantComparison getAppConditionDataItemConstantComparison() {
        return appConditionDataItemConstantComparison;
    }

    /**
     * Sets the value of the appConditionDataItemConstantComparison property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppCondition.AppConditionDataItemConstantComparison }
     *     
     */
    public void setAppConditionDataItemConstantComparison(AppCondition.AppConditionDataItemConstantComparison value) {
        this.appConditionDataItemConstantComparison = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;group ref="{http://developer.cognos.com/schemas/report/11.0/}appConditionElement" maxOccurs="unbounded" minOccurs="2"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "appConditionElement"
    })
    public static class AppConditionAnd {

        @XmlElements({
            @XmlElement(name = "appConditionAnd", type = AppCondition.AppConditionAnd.class),
            @XmlElement(name = "appConditionOr", type = AppCondition.AppConditionOr.class),
            @XmlElement(name = "appConditionNot", type = AppCondition.AppConditionNot.class),
            @XmlElement(name = "appConditionDataItemComparison", type = AppCondition.AppConditionDataItemComparison.class),
            @XmlElement(name = "appConditionConstantComparison", type = AppCondition.AppConditionConstantComparison.class),
            @XmlElement(name = "appConditionIsVariableEmpty", type = AppCondition.AppConditionIsVariableEmpty.class),
            @XmlElement(name = "appConditionIsDataItemEmpty", type = AppCondition.AppConditionIsDataItemEmpty.class),
            @XmlElement(name = "appConditionDataItemConstantComparison", type = AppCondition.AppConditionDataItemConstantComparison.class)
        })
        protected List<Object> appConditionElement;

        /**
         * Gets the value of the appConditionElement property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the appConditionElement property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAppConditionElement().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AppCondition.AppConditionAnd }
         * {@link AppCondition.AppConditionOr }
         * {@link AppCondition.AppConditionNot }
         * {@link AppCondition.AppConditionDataItemComparison }
         * {@link AppCondition.AppConditionConstantComparison }
         * {@link AppCondition.AppConditionIsVariableEmpty }
         * {@link AppCondition.AppConditionIsDataItemEmpty }
         * {@link AppCondition.AppConditionDataItemConstantComparison }
         * 
         * 
         */
        public List<Object> getAppConditionElement() {
            if (appConditionElement == null) {
                appConditionElement = new ArrayList<Object>();
            }
            return this.appConditionElement;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appVariableValue"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}AppVariableDataTypes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}AppConditionOperator"/>
     *       &lt;attribute name="refAppVariable" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="dropIfValueIsEmpty" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class AppConditionConstantComparison {

        @XmlElement(required = true)
        protected AppVariableValue appVariableValue;
        @XmlAttribute(name = "refAppVariable", required = true)
        protected String refAppVariable;
        @XmlAttribute(name = "dropIfValueIsEmpty")
        protected Boolean dropIfValueIsEmpty;
        @XmlAttribute(name = "dataType")
        protected String dataType;
        @XmlAttribute(name = "operator", required = true)
        protected String operator;

        /**
         * Gets the value of the appVariableValue property.
         * 
         * @return
         *     possible object is
         *     {@link AppVariableValue }
         *     
         */
        public AppVariableValue getAppVariableValue() {
            return appVariableValue;
        }

        /**
         * Sets the value of the appVariableValue property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppVariableValue }
         *     
         */
        public void setAppVariableValue(AppVariableValue value) {
            this.appVariableValue = value;
        }

        /**
         * Gets the value of the refAppVariable property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefAppVariable() {
            return refAppVariable;
        }

        /**
         * Sets the value of the refAppVariable property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefAppVariable(String value) {
            this.refAppVariable = value;
        }

        /**
         * Gets the value of the dropIfValueIsEmpty property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isDropIfValueIsEmpty() {
            if (dropIfValueIsEmpty == null) {
                return true;
            } else {
                return dropIfValueIsEmpty;
            }
        }

        /**
         * Sets the value of the dropIfValueIsEmpty property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setDropIfValueIsEmpty(Boolean value) {
            this.dropIfValueIsEmpty = value;
        }

        /**
         * Gets the value of the dataType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDataType() {
            if (dataType == null) {
                return "string";
            } else {
                return dataType;
            }
        }

        /**
         * Sets the value of the dataType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDataType(String value) {
            this.dataType = value;
        }

        /**
         * Gets the value of the operator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getOperator() {
            return operator;
        }

        /**
         * Sets the value of the operator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setOperator(String value) {
            this.operator = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}AppConditionOperator"/>
     *       &lt;attribute name="refAppVariable" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="refDataItem" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="dropIfValueIsEmpty" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class AppConditionDataItemComparison {

        @XmlAttribute(name = "refAppVariable", required = true)
        protected String refAppVariable;
        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;
        @XmlAttribute(name = "dropIfValueIsEmpty")
        protected Boolean dropIfValueIsEmpty;
        @XmlAttribute(name = "operator", required = true)
        protected String operator;

        /**
         * Gets the value of the refAppVariable property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefAppVariable() {
            return refAppVariable;
        }

        /**
         * Sets the value of the refAppVariable property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefAppVariable(String value) {
            this.refAppVariable = value;
        }

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

        /**
         * Gets the value of the dropIfValueIsEmpty property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isDropIfValueIsEmpty() {
            if (dropIfValueIsEmpty == null) {
                return true;
            } else {
                return dropIfValueIsEmpty;
            }
        }

        /**
         * Sets the value of the dropIfValueIsEmpty property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setDropIfValueIsEmpty(Boolean value) {
            this.dropIfValueIsEmpty = value;
        }

        /**
         * Gets the value of the operator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getOperator() {
            return operator;
        }

        /**
         * Sets the value of the operator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setOperator(String value) {
            this.operator = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appVariableValue"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}AppVariableDataTypes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}AppConditionOperator"/>
     *       &lt;attribute name="refDataItem" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class AppConditionDataItemConstantComparison {

        @XmlElement(required = true)
        protected AppVariableValue appVariableValue;
        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;
        @XmlAttribute(name = "dataType")
        protected String dataType;
        @XmlAttribute(name = "operator", required = true)
        protected String operator;

        /**
         * Gets the value of the appVariableValue property.
         * 
         * @return
         *     possible object is
         *     {@link AppVariableValue }
         *     
         */
        public AppVariableValue getAppVariableValue() {
            return appVariableValue;
        }

        /**
         * Sets the value of the appVariableValue property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppVariableValue }
         *     
         */
        public void setAppVariableValue(AppVariableValue value) {
            this.appVariableValue = value;
        }

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

        /**
         * Gets the value of the dataType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDataType() {
            if (dataType == null) {
                return "string";
            } else {
                return dataType;
            }
        }

        /**
         * Sets the value of the dataType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDataType(String value) {
            this.dataType = value;
        }

        /**
         * Gets the value of the operator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getOperator() {
            return operator;
        }

        /**
         * Sets the value of the operator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setOperator(String value) {
            this.operator = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;attribute name="refDataItem" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class AppConditionIsDataItemEmpty {

        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;attribute name="refAppVariable" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class AppConditionIsVariableEmpty {

        @XmlAttribute(name = "refAppVariable", required = true)
        protected String refAppVariable;

        /**
         * Gets the value of the refAppVariable property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefAppVariable() {
            return refAppVariable;
        }

        /**
         * Sets the value of the refAppVariable property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefAppVariable(String value) {
            this.refAppVariable = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;group ref="{http://developer.cognos.com/schemas/report/11.0/}appConditionElement"/>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "appConditionAnd",
        "appConditionOr",
        "appConditionNot",
        "appConditionDataItemComparison",
        "appConditionConstantComparison",
        "appConditionIsVariableEmpty",
        "appConditionIsDataItemEmpty",
        "appConditionDataItemConstantComparison"
    })
    public static class AppConditionNot {

        protected AppCondition.AppConditionAnd appConditionAnd;
        protected AppCondition.AppConditionOr appConditionOr;
        protected AppCondition.AppConditionNot appConditionNot;
        protected AppCondition.AppConditionDataItemComparison appConditionDataItemComparison;
        protected AppCondition.AppConditionConstantComparison appConditionConstantComparison;
        protected AppCondition.AppConditionIsVariableEmpty appConditionIsVariableEmpty;
        protected AppCondition.AppConditionIsDataItemEmpty appConditionIsDataItemEmpty;
        protected AppCondition.AppConditionDataItemConstantComparison appConditionDataItemConstantComparison;

        /**
         * Gets the value of the appConditionAnd property.
         * 
         * @return
         *     possible object is
         *     {@link AppCondition.AppConditionAnd }
         *     
         */
        public AppCondition.AppConditionAnd getAppConditionAnd() {
            return appConditionAnd;
        }

        /**
         * Sets the value of the appConditionAnd property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCondition.AppConditionAnd }
         *     
         */
        public void setAppConditionAnd(AppCondition.AppConditionAnd value) {
            this.appConditionAnd = value;
        }

        /**
         * Gets the value of the appConditionOr property.
         * 
         * @return
         *     possible object is
         *     {@link AppCondition.AppConditionOr }
         *     
         */
        public AppCondition.AppConditionOr getAppConditionOr() {
            return appConditionOr;
        }

        /**
         * Sets the value of the appConditionOr property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCondition.AppConditionOr }
         *     
         */
        public void setAppConditionOr(AppCondition.AppConditionOr value) {
            this.appConditionOr = value;
        }

        /**
         * Gets the value of the appConditionNot property.
         * 
         * @return
         *     possible object is
         *     {@link AppCondition.AppConditionNot }
         *     
         */
        public AppCondition.AppConditionNot getAppConditionNot() {
            return appConditionNot;
        }

        /**
         * Sets the value of the appConditionNot property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCondition.AppConditionNot }
         *     
         */
        public void setAppConditionNot(AppCondition.AppConditionNot value) {
            this.appConditionNot = value;
        }

        /**
         * Gets the value of the appConditionDataItemComparison property.
         * 
         * @return
         *     possible object is
         *     {@link AppCondition.AppConditionDataItemComparison }
         *     
         */
        public AppCondition.AppConditionDataItemComparison getAppConditionDataItemComparison() {
            return appConditionDataItemComparison;
        }

        /**
         * Sets the value of the appConditionDataItemComparison property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCondition.AppConditionDataItemComparison }
         *     
         */
        public void setAppConditionDataItemComparison(AppCondition.AppConditionDataItemComparison value) {
            this.appConditionDataItemComparison = value;
        }

        /**
         * Gets the value of the appConditionConstantComparison property.
         * 
         * @return
         *     possible object is
         *     {@link AppCondition.AppConditionConstantComparison }
         *     
         */
        public AppCondition.AppConditionConstantComparison getAppConditionConstantComparison() {
            return appConditionConstantComparison;
        }

        /**
         * Sets the value of the appConditionConstantComparison property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCondition.AppConditionConstantComparison }
         *     
         */
        public void setAppConditionConstantComparison(AppCondition.AppConditionConstantComparison value) {
            this.appConditionConstantComparison = value;
        }

        /**
         * Gets the value of the appConditionIsVariableEmpty property.
         * 
         * @return
         *     possible object is
         *     {@link AppCondition.AppConditionIsVariableEmpty }
         *     
         */
        public AppCondition.AppConditionIsVariableEmpty getAppConditionIsVariableEmpty() {
            return appConditionIsVariableEmpty;
        }

        /**
         * Sets the value of the appConditionIsVariableEmpty property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCondition.AppConditionIsVariableEmpty }
         *     
         */
        public void setAppConditionIsVariableEmpty(AppCondition.AppConditionIsVariableEmpty value) {
            this.appConditionIsVariableEmpty = value;
        }

        /**
         * Gets the value of the appConditionIsDataItemEmpty property.
         * 
         * @return
         *     possible object is
         *     {@link AppCondition.AppConditionIsDataItemEmpty }
         *     
         */
        public AppCondition.AppConditionIsDataItemEmpty getAppConditionIsDataItemEmpty() {
            return appConditionIsDataItemEmpty;
        }

        /**
         * Sets the value of the appConditionIsDataItemEmpty property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCondition.AppConditionIsDataItemEmpty }
         *     
         */
        public void setAppConditionIsDataItemEmpty(AppCondition.AppConditionIsDataItemEmpty value) {
            this.appConditionIsDataItemEmpty = value;
        }

        /**
         * Gets the value of the appConditionDataItemConstantComparison property.
         * 
         * @return
         *     possible object is
         *     {@link AppCondition.AppConditionDataItemConstantComparison }
         *     
         */
        public AppCondition.AppConditionDataItemConstantComparison getAppConditionDataItemConstantComparison() {
            return appConditionDataItemConstantComparison;
        }

        /**
         * Sets the value of the appConditionDataItemConstantComparison property.
         * 
         * @param value
         *     allowed object is
         *     {@link AppCondition.AppConditionDataItemConstantComparison }
         *     
         */
        public void setAppConditionDataItemConstantComparison(AppCondition.AppConditionDataItemConstantComparison value) {
            this.appConditionDataItemConstantComparison = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;group ref="{http://developer.cognos.com/schemas/report/11.0/}appConditionElement" maxOccurs="unbounded" minOccurs="2"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "appConditionElement"
    })
    public static class AppConditionOr {

        @XmlElements({
            @XmlElement(name = "appConditionAnd", type = AppCondition.AppConditionAnd.class),
            @XmlElement(name = "appConditionOr", type = AppCondition.AppConditionOr.class),
            @XmlElement(name = "appConditionNot", type = AppCondition.AppConditionNot.class),
            @XmlElement(name = "appConditionDataItemComparison", type = AppCondition.AppConditionDataItemComparison.class),
            @XmlElement(name = "appConditionConstantComparison", type = AppCondition.AppConditionConstantComparison.class),
            @XmlElement(name = "appConditionIsVariableEmpty", type = AppCondition.AppConditionIsVariableEmpty.class),
            @XmlElement(name = "appConditionIsDataItemEmpty", type = AppCondition.AppConditionIsDataItemEmpty.class),
            @XmlElement(name = "appConditionDataItemConstantComparison", type = AppCondition.AppConditionDataItemConstantComparison.class)
        })
        protected List<Object> appConditionElement;

        /**
         * Gets the value of the appConditionElement property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the appConditionElement property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAppConditionElement().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AppCondition.AppConditionAnd }
         * {@link AppCondition.AppConditionOr }
         * {@link AppCondition.AppConditionNot }
         * {@link AppCondition.AppConditionDataItemComparison }
         * {@link AppCondition.AppConditionConstantComparison }
         * {@link AppCondition.AppConditionIsVariableEmpty }
         * {@link AppCondition.AppConditionIsDataItemEmpty }
         * {@link AppCondition.AppConditionDataItemConstantComparison }
         * 
         * 
         */
        public List<Object> getAppConditionElement() {
            if (appConditionElement == null) {
                appConditionElement = new ArrayList<Object>();
            }
            return this.appConditionElement;
        }

    }

}
