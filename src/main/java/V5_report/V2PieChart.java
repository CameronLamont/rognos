//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *         &lt;element name="v2_pieSlices" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes" minOccurs="0"/>
 *                   &lt;element name="v2_pieDataLabels" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="pieLabelStyle" default="radial">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                 &lt;enumeration value="radial"/>
 *                                 &lt;enumeration value="stack"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="pieLabels" default="hide">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                 &lt;enumeration value="hide"/>
 *                                 &lt;enumeration value="show"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="pieValues" default="hide">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                 &lt;enumeration value="hide"/>
 *                                 &lt;enumeration value="absolute"/>
 *                                 &lt;enumeration value="percentage"/>
 *                                 &lt;enumeration value="both"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="pieLabelCollisionMode" default="none">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                 &lt;enumeration value="none"/>
 *                                 &lt;enumeration value="normal"/>
 *                                 &lt;enumeration value="coarse_stagger"/>
 *                                 &lt;enumeration value="fine_stagger"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="pieLabelLeaders" default="show">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                 &lt;enumeration value="show"/>
 *                                 &lt;enumeration value="hide"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_conditionalSolidPalette" minOccurs="0"/>
 *                   &lt;element name="v2_explodedSlices" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="v2_explodedSlice" maxOccurs="unbounded">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;choice>
 *                                       &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_ordinalIndex"/>
 *                                       &lt;element name="v2_calculatedSlice">
 *                                         &lt;complexType>
 *                                           &lt;complexContent>
 *                                             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                               &lt;all>
 *                                                 &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportExpression"/>
 *                                               &lt;/all>
 *                                             &lt;/restriction>
 *                                           &lt;/complexContent>
 *                                         &lt;/complexType>
 *                                       &lt;/element>
 *                                     &lt;/choice>
 *                                     &lt;attribute name="explosionValue" default="0">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
 *                                           &lt;minInclusive value="0"/>
 *                                           &lt;maxInclusive value="100"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_solidPalette" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_maxItems" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *                 &lt;/all>
 *                 &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}MaterialEffects"/>
 *                 &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}BorderDefinition2"/>
 *                 &lt;attribute name="sliceDirection" default="clockwise">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                       &lt;enumeration value="clockwise"/>
 *                       &lt;enumeration value="counterclockwise"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_legend" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_defaultChartMeasure" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartSubTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartFooter" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalRender" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartBody" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_notes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportDrills" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_dropShadow" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartSuppress" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}noDataHandler" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}masterDetailLinks" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}alternateText" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_matrix" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_category" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *         &lt;element name="v2_pieTooltips" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="pieTooltipValueType" default="absolute">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                       &lt;enumeration value="absolute"/>
 *                       &lt;enumeration value="percentage"/>
 *                       &lt;enumeration value="both"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appOnSelectSetVariableValues" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appDrills" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appContainerSelect" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appChartProperties" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartTextStyle" minOccurs="0"/>
 *       &lt;/all>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}Depth2"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CommonChartAttributes2"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}BevelType2"/>
 *       &lt;attribute name="holeSize" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" default="0" />
 *       &lt;attribute name="sliceStartAngle" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="360"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "v2_pieChart")
public class V2PieChart {

    protected Style style;
    @XmlElement(name = "v2_pieSlices")
    protected V2PieChart.V2PieSlices v2PieSlices;
    @XmlElement(name = "v2_axisTitle")
    protected V2AxisTitle v2AxisTitle;
    @XmlElement(name = "v2_legend")
    protected V2Legend v2Legend;
    @XmlElement(name = "v2_defaultChartMeasure")
    protected ChartMeasureType2 v2DefaultChartMeasure;
    @XmlElement(name = "v2_chartTitle")
    protected ChartText2 v2ChartTitle;
    @XmlElement(name = "v2_chartSubTitle")
    protected ChartText2 v2ChartSubTitle;
    @XmlElement(name = "v2_chartFooter")
    protected ChartText2 v2ChartFooter;
    protected ConditionalRender conditionalRender;
    @XmlElement(name = "v2_chartBody")
    protected V2ChartBody v2ChartBody;
    @XmlElement(name = "v2_notes")
    protected V2Notes v2Notes;
    protected ReportDrills reportDrills;
    @XmlElement(name = "v2_dropShadow")
    protected V2DropShadow v2DropShadow;
    protected ChartSuppress chartSuppress;
    protected NoDataHandler noDataHandler;
    protected MasterDetailLinks masterDetailLinks;
    protected ConditionalStyleRefs conditionalStyleRefs;
    protected LocalizedTextType alternateText;
    @XmlElement(name = "v2_matrix")
    protected V2Matrix v2Matrix;
    @XmlElement(name = "v2_category")
    protected V2Category v2Category;
    @XmlElement(name = "XMLAttributes")
    protected XMLAttributes xmlAttributes;
    @XmlElement(name = "v2_pieTooltips")
    protected V2PieChart.V2PieTooltips v2PieTooltips;
    protected AppOnSelectSetVariableValues appOnSelectSetVariableValues;
    protected AppDrills appDrills;
    protected AppContainerSelect appContainerSelect;
    protected AppChartProperties appChartProperties;
    @XmlElement(name = "v2_chartTextStyle")
    protected V2ChartTextStyle v2ChartTextStyle;
    @XmlAttribute(name = "holeSize")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger holeSize;
    @XmlAttribute(name = "sliceStartAngle")
    protected Integer sliceStartAngle;
    @XmlAttribute(name = "depth")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger depth;
    @XmlAttribute(name = "refQuery", required = true)
    protected String refQuery;
    @XmlAttribute(name = "maxHotspots")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger maxHotspots;
    @XmlAttribute(name = "renderPageWhenEmpty")
    protected Boolean renderPageWhenEmpty;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "repeatEveryPage")
    protected Boolean repeatEveryPage;
    @XmlAttribute(name = "displayForOrientation")
    protected String displayForOrientation;
    @XmlAttribute(name = "bevel")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String bevel;

    /**
     * Gets the value of the style property.
     * 
     * @return
     *     possible object is
     *     {@link Style }
     *     
     */
    public Style getStyle() {
        return style;
    }

    /**
     * Sets the value of the style property.
     * 
     * @param value
     *     allowed object is
     *     {@link Style }
     *     
     */
    public void setStyle(Style value) {
        this.style = value;
    }

    /**
     * Gets the value of the v2PieSlices property.
     * 
     * @return
     *     possible object is
     *     {@link V2PieChart.V2PieSlices }
     *     
     */
    public V2PieChart.V2PieSlices getV2PieSlices() {
        return v2PieSlices;
    }

    /**
     * Sets the value of the v2PieSlices property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2PieChart.V2PieSlices }
     *     
     */
    public void setV2PieSlices(V2PieChart.V2PieSlices value) {
        this.v2PieSlices = value;
    }

    /**
     * Gets the value of the v2AxisTitle property.
     * 
     * @return
     *     possible object is
     *     {@link V2AxisTitle }
     *     
     */
    public V2AxisTitle getV2AxisTitle() {
        return v2AxisTitle;
    }

    /**
     * Sets the value of the v2AxisTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2AxisTitle }
     *     
     */
    public void setV2AxisTitle(V2AxisTitle value) {
        this.v2AxisTitle = value;
    }

    /**
     * Defines the legend.  STYLE:  The legend will support font, color, background color, background image, generated background and padding.
     * 
     * @return
     *     possible object is
     *     {@link V2Legend }
     *     
     */
    public V2Legend getV2Legend() {
        return v2Legend;
    }

    /**
     * Sets the value of the v2Legend property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2Legend }
     *     
     */
    public void setV2Legend(V2Legend value) {
        this.v2Legend = value;
    }

    /**
     * Gets the value of the v2DefaultChartMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link ChartMeasureType2 }
     *     
     */
    public ChartMeasureType2 getV2DefaultChartMeasure() {
        return v2DefaultChartMeasure;
    }

    /**
     * Sets the value of the v2DefaultChartMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartMeasureType2 }
     *     
     */
    public void setV2DefaultChartMeasure(ChartMeasureType2 value) {
        this.v2DefaultChartMeasure = value;
    }

    /**
     * Gets the value of the v2ChartTitle property.
     * 
     * @return
     *     possible object is
     *     {@link ChartText2 }
     *     
     */
    public ChartText2 getV2ChartTitle() {
        return v2ChartTitle;
    }

    /**
     * Sets the value of the v2ChartTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartText2 }
     *     
     */
    public void setV2ChartTitle(ChartText2 value) {
        this.v2ChartTitle = value;
    }

    /**
     * Gets the value of the v2ChartSubTitle property.
     * 
     * @return
     *     possible object is
     *     {@link ChartText2 }
     *     
     */
    public ChartText2 getV2ChartSubTitle() {
        return v2ChartSubTitle;
    }

    /**
     * Sets the value of the v2ChartSubTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartText2 }
     *     
     */
    public void setV2ChartSubTitle(ChartText2 value) {
        this.v2ChartSubTitle = value;
    }

    /**
     * Gets the value of the v2ChartFooter property.
     * 
     * @return
     *     possible object is
     *     {@link ChartText2 }
     *     
     */
    public ChartText2 getV2ChartFooter() {
        return v2ChartFooter;
    }

    /**
     * Sets the value of the v2ChartFooter property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartText2 }
     *     
     */
    public void setV2ChartFooter(ChartText2 value) {
        this.v2ChartFooter = value;
    }

    /**
     * Gets the value of the conditionalRender property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalRender }
     *     
     */
    public ConditionalRender getConditionalRender() {
        return conditionalRender;
    }

    /**
     * Sets the value of the conditionalRender property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalRender }
     *     
     */
    public void setConditionalRender(ConditionalRender value) {
        this.conditionalRender = value;
    }

    /**
     * Used to style the chart body or plot area.  In CGS lingo, this is the chart.  STYLE:  Only the following styles are allowed on the chartBody: background color, background image, generated background.
     * 
     * @return
     *     possible object is
     *     {@link V2ChartBody }
     *     
     */
    public V2ChartBody getV2ChartBody() {
        return v2ChartBody;
    }

    /**
     * Sets the value of the v2ChartBody property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2ChartBody }
     *     
     */
    public void setV2ChartBody(V2ChartBody value) {
        this.v2ChartBody = value;
    }

    /**
     * Gets the value of the v2Notes property.
     * 
     * @return
     *     possible object is
     *     {@link V2Notes }
     *     
     */
    public V2Notes getV2Notes() {
        return v2Notes;
    }

    /**
     * Sets the value of the v2Notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2Notes }
     *     
     */
    public void setV2Notes(V2Notes value) {
        this.v2Notes = value;
    }

    /**
     * Gets the value of the reportDrills property.
     * 
     * @return
     *     possible object is
     *     {@link ReportDrills }
     *     
     */
    public ReportDrills getReportDrills() {
        return reportDrills;
    }

    /**
     * Sets the value of the reportDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReportDrills }
     *     
     */
    public void setReportDrills(ReportDrills value) {
        this.reportDrills = value;
    }

    /**
     * Gets the value of the v2DropShadow property.
     * 
     * @return
     *     possible object is
     *     {@link V2DropShadow }
     *     
     */
    public V2DropShadow getV2DropShadow() {
        return v2DropShadow;
    }

    /**
     * Sets the value of the v2DropShadow property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2DropShadow }
     *     
     */
    public void setV2DropShadow(V2DropShadow value) {
        this.v2DropShadow = value;
    }

    /**
     * Gets the value of the chartSuppress property.
     * 
     * @return
     *     possible object is
     *     {@link ChartSuppress }
     *     
     */
    public ChartSuppress getChartSuppress() {
        return chartSuppress;
    }

    /**
     * Sets the value of the chartSuppress property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartSuppress }
     *     
     */
    public void setChartSuppress(ChartSuppress value) {
        this.chartSuppress = value;
    }

    /**
     * Gets the value of the noDataHandler property.
     * 
     * @return
     *     possible object is
     *     {@link NoDataHandler }
     *     
     */
    public NoDataHandler getNoDataHandler() {
        return noDataHandler;
    }

    /**
     * Sets the value of the noDataHandler property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoDataHandler }
     *     
     */
    public void setNoDataHandler(NoDataHandler value) {
        this.noDataHandler = value;
    }

    /**
     * Gets the value of the masterDetailLinks property.
     * 
     * @return
     *     possible object is
     *     {@link MasterDetailLinks }
     *     
     */
    public MasterDetailLinks getMasterDetailLinks() {
        return masterDetailLinks;
    }

    /**
     * Sets the value of the masterDetailLinks property.
     * 
     * @param value
     *     allowed object is
     *     {@link MasterDetailLinks }
     *     
     */
    public void setMasterDetailLinks(MasterDetailLinks value) {
        this.masterDetailLinks = value;
    }

    /**
     * Gets the value of the conditionalStyleRefs property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public ConditionalStyleRefs getConditionalStyleRefs() {
        return conditionalStyleRefs;
    }

    /**
     * Sets the value of the conditionalStyleRefs property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public void setConditionalStyleRefs(ConditionalStyleRefs value) {
        this.conditionalStyleRefs = value;
    }

    /**
     * Gets the value of the alternateText property.
     * 
     * @return
     *     possible object is
     *     {@link LocalizedTextType }
     *     
     */
    public LocalizedTextType getAlternateText() {
        return alternateText;
    }

    /**
     * Sets the value of the alternateText property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalizedTextType }
     *     
     */
    public void setAlternateText(LocalizedTextType value) {
        this.alternateText = value;
    }

    /**
     * Gets the value of the v2Matrix property.
     * 
     * @return
     *     possible object is
     *     {@link V2Matrix }
     *     
     */
    public V2Matrix getV2Matrix() {
        return v2Matrix;
    }

    /**
     * Sets the value of the v2Matrix property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2Matrix }
     *     
     */
    public void setV2Matrix(V2Matrix value) {
        this.v2Matrix = value;
    }

    /**
     * Gets the value of the v2Category property.
     * 
     * @return
     *     possible object is
     *     {@link V2Category }
     *     
     */
    public V2Category getV2Category() {
        return v2Category;
    }

    /**
     * Sets the value of the v2Category property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2Category }
     *     
     */
    public void setV2Category(V2Category value) {
        this.v2Category = value;
    }

    /**
     * Gets the value of the xmlAttributes property.
     * 
     * @return
     *     possible object is
     *     {@link XMLAttributes }
     *     
     */
    public XMLAttributes getXMLAttributes() {
        return xmlAttributes;
    }

    /**
     * Sets the value of the xmlAttributes property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLAttributes }
     *     
     */
    public void setXMLAttributes(XMLAttributes value) {
        this.xmlAttributes = value;
    }

    /**
     * Gets the value of the v2PieTooltips property.
     * 
     * @return
     *     possible object is
     *     {@link V2PieChart.V2PieTooltips }
     *     
     */
    public V2PieChart.V2PieTooltips getV2PieTooltips() {
        return v2PieTooltips;
    }

    /**
     * Sets the value of the v2PieTooltips property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2PieChart.V2PieTooltips }
     *     
     */
    public void setV2PieTooltips(V2PieChart.V2PieTooltips value) {
        this.v2PieTooltips = value;
    }

    /**
     * Gets the value of the appOnSelectSetVariableValues property.
     * 
     * @return
     *     possible object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public AppOnSelectSetVariableValues getAppOnSelectSetVariableValues() {
        return appOnSelectSetVariableValues;
    }

    /**
     * Sets the value of the appOnSelectSetVariableValues property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public void setAppOnSelectSetVariableValues(AppOnSelectSetVariableValues value) {
        this.appOnSelectSetVariableValues = value;
    }

    /**
     * Gets the value of the appDrills property.
     * 
     * @return
     *     possible object is
     *     {@link AppDrills }
     *     
     */
    public AppDrills getAppDrills() {
        return appDrills;
    }

    /**
     * Sets the value of the appDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppDrills }
     *     
     */
    public void setAppDrills(AppDrills value) {
        this.appDrills = value;
    }

    /**
     * Gets the value of the appContainerSelect property.
     * 
     * @return
     *     possible object is
     *     {@link AppContainerSelect }
     *     
     */
    public AppContainerSelect getAppContainerSelect() {
        return appContainerSelect;
    }

    /**
     * Sets the value of the appContainerSelect property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppContainerSelect }
     *     
     */
    public void setAppContainerSelect(AppContainerSelect value) {
        this.appContainerSelect = value;
    }

    /**
     * Gets the value of the appChartProperties property.
     * 
     * @return
     *     possible object is
     *     {@link AppChartProperties }
     *     
     */
    public AppChartProperties getAppChartProperties() {
        return appChartProperties;
    }

    /**
     * Sets the value of the appChartProperties property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppChartProperties }
     *     
     */
    public void setAppChartProperties(AppChartProperties value) {
        this.appChartProperties = value;
    }

    /**
     * Gets the value of the v2ChartTextStyle property.
     * 
     * @return
     *     possible object is
     *     {@link V2ChartTextStyle }
     *     
     */
    public V2ChartTextStyle getV2ChartTextStyle() {
        return v2ChartTextStyle;
    }

    /**
     * Sets the value of the v2ChartTextStyle property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2ChartTextStyle }
     *     
     */
    public void setV2ChartTextStyle(V2ChartTextStyle value) {
        this.v2ChartTextStyle = value;
    }

    /**
     * Gets the value of the holeSize property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getHoleSize() {
        if (holeSize == null) {
            return new BigInteger("0");
        } else {
            return holeSize;
        }
    }

    /**
     * Sets the value of the holeSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setHoleSize(BigInteger value) {
        this.holeSize = value;
    }

    /**
     * Gets the value of the sliceStartAngle property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getSliceStartAngle() {
        if (sliceStartAngle == null) {
            return  0;
        } else {
            return sliceStartAngle;
        }
    }

    /**
     * Sets the value of the sliceStartAngle property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setSliceStartAngle(Integer value) {
        this.sliceStartAngle = value;
    }

    /**
     * Gets the value of the depth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDepth() {
        if (depth == null) {
            return new BigInteger("0");
        } else {
            return depth;
        }
    }

    /**
     * Sets the value of the depth property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDepth(BigInteger value) {
        this.depth = value;
    }

    /**
     * Gets the value of the refQuery property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefQuery() {
        return refQuery;
    }

    /**
     * Sets the value of the refQuery property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefQuery(String value) {
        this.refQuery = value;
    }

    /**
     * Gets the value of the maxHotspots property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxHotspots() {
        return maxHotspots;
    }

    /**
     * Sets the value of the maxHotspots property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxHotspots(BigInteger value) {
        this.maxHotspots = value;
    }

    /**
     * Gets the value of the renderPageWhenEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRenderPageWhenEmpty() {
        if (renderPageWhenEmpty == null) {
            return true;
        } else {
            return renderPageWhenEmpty;
        }
    }

    /**
     * Sets the value of the renderPageWhenEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRenderPageWhenEmpty(Boolean value) {
        this.renderPageWhenEmpty = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the repeatEveryPage property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRepeatEveryPage() {
        if (repeatEveryPage == null) {
            return false;
        } else {
            return repeatEveryPage;
        }
    }

    /**
     * Sets the value of the repeatEveryPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRepeatEveryPage(Boolean value) {
        this.repeatEveryPage = value;
    }

    /**
     * Gets the value of the displayForOrientation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayForOrientation() {
        if (displayForOrientation == null) {
            return "both";
        } else {
            return displayForOrientation;
        }
    }

    /**
     * Sets the value of the displayForOrientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayForOrientation(String value) {
        this.displayForOrientation = value;
    }

    /**
     * Gets the value of the bevel property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBevel() {
        if (bevel == null) {
            return "none";
        } else {
            return bevel;
        }
    }

    /**
     * Sets the value of the bevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBevel(String value) {
        this.bevel = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes" minOccurs="0"/>
     *         &lt;element name="v2_pieDataLabels" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;attribute name="pieLabelStyle" default="radial">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                       &lt;enumeration value="radial"/>
     *                       &lt;enumeration value="stack"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="pieLabels" default="hide">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                       &lt;enumeration value="hide"/>
     *                       &lt;enumeration value="show"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="pieValues" default="hide">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                       &lt;enumeration value="hide"/>
     *                       &lt;enumeration value="absolute"/>
     *                       &lt;enumeration value="percentage"/>
     *                       &lt;enumeration value="both"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="pieLabelCollisionMode" default="none">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                       &lt;enumeration value="none"/>
     *                       &lt;enumeration value="normal"/>
     *                       &lt;enumeration value="coarse_stagger"/>
     *                       &lt;enumeration value="fine_stagger"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="pieLabelLeaders" default="show">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                       &lt;enumeration value="show"/>
     *                       &lt;enumeration value="hide"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_conditionalSolidPalette" minOccurs="0"/>
     *         &lt;element name="v2_explodedSlices" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="v2_explodedSlice" maxOccurs="unbounded">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;choice>
     *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_ordinalIndex"/>
     *                             &lt;element name="v2_calculatedSlice">
     *                               &lt;complexType>
     *                                 &lt;complexContent>
     *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                                     &lt;all>
     *                                       &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportExpression"/>
     *                                     &lt;/all>
     *                                   &lt;/restriction>
     *                                 &lt;/complexContent>
     *                               &lt;/complexType>
     *                             &lt;/element>
     *                           &lt;/choice>
     *                           &lt;attribute name="explosionValue" default="0">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
     *                                 &lt;minInclusive value="0"/>
     *                                 &lt;maxInclusive value="100"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_solidPalette" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_maxItems" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}MaterialEffects"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}BorderDefinition2"/>
     *       &lt;attribute name="sliceDirection" default="clockwise">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *             &lt;enumeration value="clockwise"/>
     *             &lt;enumeration value="counterclockwise"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class V2PieSlices {

        protected ChartNodes chartNodes;
        @XmlElement(name = "v2_pieDataLabels")
        protected V2PieChart.V2PieSlices.V2PieDataLabels v2PieDataLabels;
        @XmlElement(name = "v2_conditionalSolidPalette")
        protected V2ConditionalSolidPalette v2ConditionalSolidPalette;
        @XmlElement(name = "v2_explodedSlices")
        protected V2PieChart.V2PieSlices.V2ExplodedSlices v2ExplodedSlices;
        @XmlElement(name = "v2_solidPalette")
        protected V2SolidPalette v2SolidPalette;
        @XmlElement(name = "v2_maxItems")
        protected V2MaxItems v2MaxItems;
        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        @XmlAttribute(name = "sliceDirection")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String sliceDirection;
        @XmlAttribute(name = "materialEffects")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String materialEffects;
        @XmlAttribute(name = "borders")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String borders;
        @XmlAttribute(name = "borderColor")
        protected String borderColor;

        /**
         * Gets the value of the chartNodes property.
         * 
         * @return
         *     possible object is
         *     {@link ChartNodes }
         *     
         */
        public ChartNodes getChartNodes() {
            return chartNodes;
        }

        /**
         * Sets the value of the chartNodes property.
         * 
         * @param value
         *     allowed object is
         *     {@link ChartNodes }
         *     
         */
        public void setChartNodes(ChartNodes value) {
            this.chartNodes = value;
        }

        /**
         * Gets the value of the v2PieDataLabels property.
         * 
         * @return
         *     possible object is
         *     {@link V2PieChart.V2PieSlices.V2PieDataLabels }
         *     
         */
        public V2PieChart.V2PieSlices.V2PieDataLabels getV2PieDataLabels() {
            return v2PieDataLabels;
        }

        /**
         * Sets the value of the v2PieDataLabels property.
         * 
         * @param value
         *     allowed object is
         *     {@link V2PieChart.V2PieSlices.V2PieDataLabels }
         *     
         */
        public void setV2PieDataLabels(V2PieChart.V2PieSlices.V2PieDataLabels value) {
            this.v2PieDataLabels = value;
        }

        /**
         * Gets the value of the v2ConditionalSolidPalette property.
         * 
         * @return
         *     possible object is
         *     {@link V2ConditionalSolidPalette }
         *     
         */
        public V2ConditionalSolidPalette getV2ConditionalSolidPalette() {
            return v2ConditionalSolidPalette;
        }

        /**
         * Sets the value of the v2ConditionalSolidPalette property.
         * 
         * @param value
         *     allowed object is
         *     {@link V2ConditionalSolidPalette }
         *     
         */
        public void setV2ConditionalSolidPalette(V2ConditionalSolidPalette value) {
            this.v2ConditionalSolidPalette = value;
        }

        /**
         * Gets the value of the v2ExplodedSlices property.
         * 
         * @return
         *     possible object is
         *     {@link V2PieChart.V2PieSlices.V2ExplodedSlices }
         *     
         */
        public V2PieChart.V2PieSlices.V2ExplodedSlices getV2ExplodedSlices() {
            return v2ExplodedSlices;
        }

        /**
         * Sets the value of the v2ExplodedSlices property.
         * 
         * @param value
         *     allowed object is
         *     {@link V2PieChart.V2PieSlices.V2ExplodedSlices }
         *     
         */
        public void setV2ExplodedSlices(V2PieChart.V2PieSlices.V2ExplodedSlices value) {
            this.v2ExplodedSlices = value;
        }

        /**
         * Gets the value of the v2SolidPalette property.
         * 
         * @return
         *     possible object is
         *     {@link V2SolidPalette }
         *     
         */
        public V2SolidPalette getV2SolidPalette() {
            return v2SolidPalette;
        }

        /**
         * Sets the value of the v2SolidPalette property.
         * 
         * @param value
         *     allowed object is
         *     {@link V2SolidPalette }
         *     
         */
        public void setV2SolidPalette(V2SolidPalette value) {
            this.v2SolidPalette = value;
        }

        /**
         * Gets the value of the v2MaxItems property.
         * 
         * @return
         *     possible object is
         *     {@link V2MaxItems }
         *     
         */
        public V2MaxItems getV2MaxItems() {
            return v2MaxItems;
        }

        /**
         * Sets the value of the v2MaxItems property.
         * 
         * @param value
         *     allowed object is
         *     {@link V2MaxItems }
         *     
         */
        public void setV2MaxItems(V2MaxItems value) {
            this.v2MaxItems = value;
        }

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the sliceDirection property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getSliceDirection() {
            if (sliceDirection == null) {
                return "clockwise";
            } else {
                return sliceDirection;
            }
        }

        /**
         * Sets the value of the sliceDirection property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSliceDirection(String value) {
            this.sliceDirection = value;
        }

        /**
         * Gets the value of the materialEffects property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMaterialEffects() {
            if (materialEffects == null) {
                return "none";
            } else {
                return materialEffects;
            }
        }

        /**
         * Sets the value of the materialEffects property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setMaterialEffects(String value) {
            this.materialEffects = value;
        }

        /**
         * Gets the value of the borders property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getBorders() {
            if (borders == null) {
                return "hide";
            } else {
                return borders;
            }
        }

        /**
         * Sets the value of the borders property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setBorders(String value) {
            this.borders = value;
        }

        /**
         * Gets the value of the borderColor property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getBorderColor() {
            if (borderColor == null) {
                return "black";
            } else {
                return borderColor;
            }
        }

        /**
         * Sets the value of the borderColor property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setBorderColor(String value) {
            this.borderColor = value;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="v2_explodedSlice" maxOccurs="unbounded">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;choice>
         *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_ordinalIndex"/>
         *                   &lt;element name="v2_calculatedSlice">
         *                     &lt;complexType>
         *                       &lt;complexContent>
         *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                           &lt;all>
         *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportExpression"/>
         *                           &lt;/all>
         *                         &lt;/restriction>
         *                       &lt;/complexContent>
         *                     &lt;/complexType>
         *                   &lt;/element>
         *                 &lt;/choice>
         *                 &lt;attribute name="explosionValue" default="0">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
         *                       &lt;minInclusive value="0"/>
         *                       &lt;maxInclusive value="100"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "v2ExplodedSlice"
        })
        public static class V2ExplodedSlices {

            @XmlElement(name = "v2_explodedSlice", required = true)
            protected List<V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice> v2ExplodedSlice;

            /**
             * Gets the value of the v2ExplodedSlice property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the v2ExplodedSlice property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getV2ExplodedSlice().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice }
             * 
             * 
             */
            public List<V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice> getV2ExplodedSlice() {
                if (v2ExplodedSlice == null) {
                    v2ExplodedSlice = new ArrayList<V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice>();
                }
                return this.v2ExplodedSlice;
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;choice>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_ordinalIndex"/>
             *         &lt;element name="v2_calculatedSlice">
             *           &lt;complexType>
             *             &lt;complexContent>
             *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *                 &lt;all>
             *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportExpression"/>
             *                 &lt;/all>
             *               &lt;/restriction>
             *             &lt;/complexContent>
             *           &lt;/complexType>
             *         &lt;/element>
             *       &lt;/choice>
             *       &lt;attribute name="explosionValue" default="0">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
             *             &lt;minInclusive value="0"/>
             *             &lt;maxInclusive value="100"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "v2OrdinalIndex",
                "v2CalculatedSlice"
            })
            public static class V2ExplodedSlice {

                @XmlElement(name = "v2_ordinalIndex")
                protected V2OrdinalIndex v2OrdinalIndex;
                @XmlElement(name = "v2_calculatedSlice")
                protected V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice.V2CalculatedSlice v2CalculatedSlice;
                @XmlAttribute(name = "explosionValue")
                protected Integer explosionValue;

                /**
                 * Gets the value of the v2OrdinalIndex property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link V2OrdinalIndex }
                 *     
                 */
                public V2OrdinalIndex getV2OrdinalIndex() {
                    return v2OrdinalIndex;
                }

                /**
                 * Sets the value of the v2OrdinalIndex property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link V2OrdinalIndex }
                 *     
                 */
                public void setV2OrdinalIndex(V2OrdinalIndex value) {
                    this.v2OrdinalIndex = value;
                }

                /**
                 * Gets the value of the v2CalculatedSlice property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice.V2CalculatedSlice }
                 *     
                 */
                public V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice.V2CalculatedSlice getV2CalculatedSlice() {
                    return v2CalculatedSlice;
                }

                /**
                 * Sets the value of the v2CalculatedSlice property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice.V2CalculatedSlice }
                 *     
                 */
                public void setV2CalculatedSlice(V2PieChart.V2PieSlices.V2ExplodedSlices.V2ExplodedSlice.V2CalculatedSlice value) {
                    this.v2CalculatedSlice = value;
                }

                /**
                 * Gets the value of the explosionValue property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Integer }
                 *     
                 */
                public int getExplosionValue() {
                    if (explosionValue == null) {
                        return  0;
                    } else {
                        return explosionValue;
                    }
                }

                /**
                 * Sets the value of the explosionValue property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Integer }
                 *     
                 */
                public void setExplosionValue(Integer value) {
                    this.explosionValue = value;
                }


                /**
                 * <p>Java class for anonymous complex type.
                 * 
                 * <p>The following schema fragment specifies the expected content contained within this class.
                 * 
                 * <pre>
                 * &lt;complexType>
                 *   &lt;complexContent>
                 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
                 *       &lt;all>
                 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportExpression"/>
                 *       &lt;/all>
                 *     &lt;/restriction>
                 *   &lt;/complexContent>
                 * &lt;/complexType>
                 * </pre>
                 * 
                 * 
                 */
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {

                })
                public static class V2CalculatedSlice {

                    @XmlElement(required = true)
                    protected String reportExpression;

                    /**
                     * Gets the value of the reportExpression property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link String }
                     *     
                     */
                    public String getReportExpression() {
                        return reportExpression;
                    }

                    /**
                     * Sets the value of the reportExpression property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link String }
                     *     
                     */
                    public void setReportExpression(String value) {
                        this.reportExpression = value;
                    }

                }

            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;attribute name="pieLabelStyle" default="radial">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *             &lt;enumeration value="radial"/>
         *             &lt;enumeration value="stack"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="pieLabels" default="hide">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *             &lt;enumeration value="hide"/>
         *             &lt;enumeration value="show"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="pieValues" default="hide">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *             &lt;enumeration value="hide"/>
         *             &lt;enumeration value="absolute"/>
         *             &lt;enumeration value="percentage"/>
         *             &lt;enumeration value="both"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="pieLabelCollisionMode" default="none">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *             &lt;enumeration value="none"/>
         *             &lt;enumeration value="normal"/>
         *             &lt;enumeration value="coarse_stagger"/>
         *             &lt;enumeration value="fine_stagger"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="pieLabelLeaders" default="show">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *             &lt;enumeration value="show"/>
         *             &lt;enumeration value="hide"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class V2PieDataLabels {

            @XmlAttribute(name = "pieLabelStyle")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String pieLabelStyle;
            @XmlAttribute(name = "pieLabels")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String pieLabels;
            @XmlAttribute(name = "pieValues")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String pieValues;
            @XmlAttribute(name = "pieLabelCollisionMode")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String pieLabelCollisionMode;
            @XmlAttribute(name = "pieLabelLeaders")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String pieLabelLeaders;

            /**
             * Gets the value of the pieLabelStyle property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPieLabelStyle() {
                if (pieLabelStyle == null) {
                    return "radial";
                } else {
                    return pieLabelStyle;
                }
            }

            /**
             * Sets the value of the pieLabelStyle property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setPieLabelStyle(String value) {
                this.pieLabelStyle = value;
            }

            /**
             * Gets the value of the pieLabels property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPieLabels() {
                if (pieLabels == null) {
                    return "hide";
                } else {
                    return pieLabels;
                }
            }

            /**
             * Sets the value of the pieLabels property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setPieLabels(String value) {
                this.pieLabels = value;
            }

            /**
             * Gets the value of the pieValues property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPieValues() {
                if (pieValues == null) {
                    return "hide";
                } else {
                    return pieValues;
                }
            }

            /**
             * Sets the value of the pieValues property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setPieValues(String value) {
                this.pieValues = value;
            }

            /**
             * Gets the value of the pieLabelCollisionMode property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPieLabelCollisionMode() {
                if (pieLabelCollisionMode == null) {
                    return "none";
                } else {
                    return pieLabelCollisionMode;
                }
            }

            /**
             * Sets the value of the pieLabelCollisionMode property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setPieLabelCollisionMode(String value) {
                this.pieLabelCollisionMode = value;
            }

            /**
             * Gets the value of the pieLabelLeaders property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPieLabelLeaders() {
                if (pieLabelLeaders == null) {
                    return "show";
                } else {
                    return pieLabelLeaders;
                }
            }

            /**
             * Sets the value of the pieLabelLeaders property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setPieLabelLeaders(String value) {
                this.pieLabelLeaders = value;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;attribute name="pieTooltipValueType" default="absolute">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *             &lt;enumeration value="absolute"/>
     *             &lt;enumeration value="percentage"/>
     *             &lt;enumeration value="both"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class V2PieTooltips {

        @XmlAttribute(name = "pieTooltipValueType")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String pieTooltipValueType;

        /**
         * Gets the value of the pieTooltipValueType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPieTooltipValueType() {
            if (pieTooltipValueType == null) {
                return "absolute";
            } else {
                return pieTooltipValueType;
            }
        }

        /**
         * Sets the value of the pieTooltipValueType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPieTooltipValueType(String value) {
            this.pieTooltipValueType = value;
        }

    }

}
