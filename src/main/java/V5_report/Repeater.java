//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}repeaterGroups" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}sortList" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalRender" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}masterDetailLinks" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}noDataHandler" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}listSuppress" minOccurs="0"/>
 *       &lt;/all>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}NameLayoutAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}NoPageWhenNoDataAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}ShareResultSet"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}AppOrientationControlAttributes"/>
 *       &lt;attribute name="refQuery" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="rowsPerPage" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "repeater")
public class Repeater {

    @XmlElement(required = true)
    protected Contents contents;
    protected RepeaterGroups repeaterGroups;
    protected PropertyList propertyList;
    protected SortList sortList;
    protected ConditionalRender conditionalRender;
    @XmlElement(name = "XMLAttributes")
    protected XMLAttributes xmlAttributes;
    protected MasterDetailLinks masterDetailLinks;
    protected NoDataHandler noDataHandler;
    protected ListSuppress listSuppress;
    @XmlAttribute(name = "refQuery", required = true)
    protected String refQuery;
    @XmlAttribute(name = "rowsPerPage")
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger rowsPerPage;
    @XmlAttribute(name = "repeatEveryPage")
    protected Boolean repeatEveryPage;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "renderPageWhenEmpty")
    protected Boolean renderPageWhenEmpty;
    @XmlAttribute(name = "shareResultSet")
    protected Boolean shareResultSet;
    @XmlAttribute(name = "displayForOrientation")
    protected String displayForOrientation;

    /**
     * Gets the value of the contents property.
     * 
     * @return
     *     possible object is
     *     {@link Contents }
     *     
     */
    public Contents getContents() {
        return contents;
    }

    /**
     * Sets the value of the contents property.
     * 
     * @param value
     *     allowed object is
     *     {@link Contents }
     *     
     */
    public void setContents(Contents value) {
        this.contents = value;
    }

    /**
     * Gets the value of the repeaterGroups property.
     * 
     * @return
     *     possible object is
     *     {@link RepeaterGroups }
     *     
     */
    public RepeaterGroups getRepeaterGroups() {
        return repeaterGroups;
    }

    /**
     * Sets the value of the repeaterGroups property.
     * 
     * @param value
     *     allowed object is
     *     {@link RepeaterGroups }
     *     
     */
    public void setRepeaterGroups(RepeaterGroups value) {
        this.repeaterGroups = value;
    }

    /**
     * Gets the value of the propertyList property.
     * 
     * @return
     *     possible object is
     *     {@link PropertyList }
     *     
     */
    public PropertyList getPropertyList() {
        return propertyList;
    }

    /**
     * Sets the value of the propertyList property.
     * 
     * @param value
     *     allowed object is
     *     {@link PropertyList }
     *     
     */
    public void setPropertyList(PropertyList value) {
        this.propertyList = value;
    }

    /**
     * Gets the value of the sortList property.
     * 
     * @return
     *     possible object is
     *     {@link SortList }
     *     
     */
    public SortList getSortList() {
        return sortList;
    }

    /**
     * Sets the value of the sortList property.
     * 
     * @param value
     *     allowed object is
     *     {@link SortList }
     *     
     */
    public void setSortList(SortList value) {
        this.sortList = value;
    }

    /**
     * Gets the value of the conditionalRender property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalRender }
     *     
     */
    public ConditionalRender getConditionalRender() {
        return conditionalRender;
    }

    /**
     * Sets the value of the conditionalRender property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalRender }
     *     
     */
    public void setConditionalRender(ConditionalRender value) {
        this.conditionalRender = value;
    }

    /**
     * Gets the value of the xmlAttributes property.
     * 
     * @return
     *     possible object is
     *     {@link XMLAttributes }
     *     
     */
    public XMLAttributes getXMLAttributes() {
        return xmlAttributes;
    }

    /**
     * Sets the value of the xmlAttributes property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLAttributes }
     *     
     */
    public void setXMLAttributes(XMLAttributes value) {
        this.xmlAttributes = value;
    }

    /**
     * Gets the value of the masterDetailLinks property.
     * 
     * @return
     *     possible object is
     *     {@link MasterDetailLinks }
     *     
     */
    public MasterDetailLinks getMasterDetailLinks() {
        return masterDetailLinks;
    }

    /**
     * Sets the value of the masterDetailLinks property.
     * 
     * @param value
     *     allowed object is
     *     {@link MasterDetailLinks }
     *     
     */
    public void setMasterDetailLinks(MasterDetailLinks value) {
        this.masterDetailLinks = value;
    }

    /**
     * Gets the value of the noDataHandler property.
     * 
     * @return
     *     possible object is
     *     {@link NoDataHandler }
     *     
     */
    public NoDataHandler getNoDataHandler() {
        return noDataHandler;
    }

    /**
     * Sets the value of the noDataHandler property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoDataHandler }
     *     
     */
    public void setNoDataHandler(NoDataHandler value) {
        this.noDataHandler = value;
    }

    /**
     * Gets the value of the listSuppress property.
     * 
     * @return
     *     possible object is
     *     {@link ListSuppress }
     *     
     */
    public ListSuppress getListSuppress() {
        return listSuppress;
    }

    /**
     * Sets the value of the listSuppress property.
     * 
     * @param value
     *     allowed object is
     *     {@link ListSuppress }
     *     
     */
    public void setListSuppress(ListSuppress value) {
        this.listSuppress = value;
    }

    /**
     * Gets the value of the refQuery property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefQuery() {
        return refQuery;
    }

    /**
     * Sets the value of the refQuery property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefQuery(String value) {
        this.refQuery = value;
    }

    /**
     * Gets the value of the rowsPerPage property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getRowsPerPage() {
        return rowsPerPage;
    }

    /**
     * Sets the value of the rowsPerPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setRowsPerPage(BigInteger value) {
        this.rowsPerPage = value;
    }

    /**
     * Gets the value of the repeatEveryPage property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRepeatEveryPage() {
        if (repeatEveryPage == null) {
            return false;
        } else {
            return repeatEveryPage;
        }
    }

    /**
     * Sets the value of the repeatEveryPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRepeatEveryPage(Boolean value) {
        this.repeatEveryPage = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the renderPageWhenEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRenderPageWhenEmpty() {
        if (renderPageWhenEmpty == null) {
            return true;
        } else {
            return renderPageWhenEmpty;
        }
    }

    /**
     * Sets the value of the renderPageWhenEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRenderPageWhenEmpty(Boolean value) {
        this.renderPageWhenEmpty = value;
    }

    /**
     * Gets the value of the shareResultSet property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isShareResultSet() {
        if (shareResultSet == null) {
            return false;
        } else {
            return shareResultSet;
        }
    }

    /**
     * Sets the value of the shareResultSet property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setShareResultSet(Boolean value) {
        this.shareResultSet = value;
    }

    /**
     * Gets the value of the displayForOrientation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayForOrientation() {
        if (displayForOrientation == null) {
            return "both";
        } else {
            return displayForOrientation;
        }
    }

    /**
     * Sets the value of the displayForOrientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayForOrientation(String value) {
        this.displayForOrientation = value;
    }

}
