//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;group ref="{http://developer.cognos.com/schemas/report/11.0/}filterElement"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "filterAnd",
    "filterOr",
    "filterNot",
    "filterInMembers",
    "filterInValues",
    "filterCompare",
    "filterStringCompare",
    "filterRange",
    "filterNulls"
})
@XmlRootElement(name = "filterDefinition")
public class FilterDefinition {

    protected FilterDefinition.FilterAnd filterAnd;
    protected FilterDefinition.FilterOr filterOr;
    protected FilterDefinition.FilterNot filterNot;
    protected FilterDefinition.FilterInMembers filterInMembers;
    protected FilterDefinition.FilterInValues filterInValues;
    protected FilterDefinition.FilterCompare filterCompare;
    protected FilterDefinition.FilterStringCompare filterStringCompare;
    protected FilterDefinition.FilterRange filterRange;
    protected FilterDefinition.FilterNulls filterNulls;

    /**
     * Gets the value of the filterAnd property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterAnd }
     *     
     */
    public FilterDefinition.FilterAnd getFilterAnd() {
        return filterAnd;
    }

    /**
     * Sets the value of the filterAnd property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterAnd }
     *     
     */
    public void setFilterAnd(FilterDefinition.FilterAnd value) {
        this.filterAnd = value;
    }

    /**
     * Gets the value of the filterOr property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterOr }
     *     
     */
    public FilterDefinition.FilterOr getFilterOr() {
        return filterOr;
    }

    /**
     * Sets the value of the filterOr property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterOr }
     *     
     */
    public void setFilterOr(FilterDefinition.FilterOr value) {
        this.filterOr = value;
    }

    /**
     * Gets the value of the filterNot property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterNot }
     *     
     */
    public FilterDefinition.FilterNot getFilterNot() {
        return filterNot;
    }

    /**
     * Sets the value of the filterNot property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterNot }
     *     
     */
    public void setFilterNot(FilterDefinition.FilterNot value) {
        this.filterNot = value;
    }

    /**
     * Gets the value of the filterInMembers property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterInMembers }
     *     
     */
    public FilterDefinition.FilterInMembers getFilterInMembers() {
        return filterInMembers;
    }

    /**
     * Sets the value of the filterInMembers property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterInMembers }
     *     
     */
    public void setFilterInMembers(FilterDefinition.FilterInMembers value) {
        this.filterInMembers = value;
    }

    /**
     * Gets the value of the filterInValues property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterInValues }
     *     
     */
    public FilterDefinition.FilterInValues getFilterInValues() {
        return filterInValues;
    }

    /**
     * Sets the value of the filterInValues property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterInValues }
     *     
     */
    public void setFilterInValues(FilterDefinition.FilterInValues value) {
        this.filterInValues = value;
    }

    /**
     * Gets the value of the filterCompare property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterCompare }
     *     
     */
    public FilterDefinition.FilterCompare getFilterCompare() {
        return filterCompare;
    }

    /**
     * Sets the value of the filterCompare property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterCompare }
     *     
     */
    public void setFilterCompare(FilterDefinition.FilterCompare value) {
        this.filterCompare = value;
    }

    /**
     * Gets the value of the filterStringCompare property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterStringCompare }
     *     
     */
    public FilterDefinition.FilterStringCompare getFilterStringCompare() {
        return filterStringCompare;
    }

    /**
     * Sets the value of the filterStringCompare property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterStringCompare }
     *     
     */
    public void setFilterStringCompare(FilterDefinition.FilterStringCompare value) {
        this.filterStringCompare = value;
    }

    /**
     * Gets the value of the filterRange property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterRange }
     *     
     */
    public FilterDefinition.FilterRange getFilterRange() {
        return filterRange;
    }

    /**
     * Sets the value of the filterRange property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterRange }
     *     
     */
    public void setFilterRange(FilterDefinition.FilterRange value) {
        this.filterRange = value;
    }

    /**
     * Gets the value of the filterNulls property.
     * 
     * @return
     *     possible object is
     *     {@link FilterDefinition.FilterNulls }
     *     
     */
    public FilterDefinition.FilterNulls getFilterNulls() {
        return filterNulls;
    }

    /**
     * Sets the value of the filterNulls property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterDefinition.FilterNulls }
     *     
     */
    public void setFilterNulls(FilterDefinition.FilterNulls value) {
        this.filterNulls = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence maxOccurs="unbounded" minOccurs="2">
     *         &lt;group ref="{http://developer.cognos.com/schemas/report/11.0/}filterElement"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "filterAndOrFilterOrOrFilterNot"
    })
    public static class FilterAnd {

        @XmlElements({
            @XmlElement(name = "filterAnd", type = FilterDefinition.FilterAnd.class),
            @XmlElement(name = "filterOr", type = FilterDefinition.FilterOr.class),
            @XmlElement(name = "filterNot", type = FilterDefinition.FilterNot.class),
            @XmlElement(name = "filterInMembers", type = FilterDefinition.FilterInMembers.class),
            @XmlElement(name = "filterInValues", type = FilterDefinition.FilterInValues.class),
            @XmlElement(name = "filterCompare", type = FilterDefinition.FilterCompare.class),
            @XmlElement(name = "filterStringCompare", type = FilterDefinition.FilterStringCompare.class),
            @XmlElement(name = "filterRange", type = FilterDefinition.FilterRange.class),
            @XmlElement(name = "filterNulls", type = FilterDefinition.FilterNulls.class)
        })
        protected List<Object> filterAndOrFilterOrOrFilterNot;

        /**
         * Gets the value of the filterAndOrFilterOrOrFilterNot property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the filterAndOrFilterOrOrFilterNot property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getFilterAndOrFilterOrOrFilterNot().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FilterDefinition.FilterAnd }
         * {@link FilterDefinition.FilterOr }
         * {@link FilterDefinition.FilterNot }
         * {@link FilterDefinition.FilterInMembers }
         * {@link FilterDefinition.FilterInValues }
         * {@link FilterDefinition.FilterCompare }
         * {@link FilterDefinition.FilterStringCompare }
         * {@link FilterDefinition.FilterRange }
         * {@link FilterDefinition.FilterNulls }
         * 
         * 
         */
        public List<Object> getFilterAndOrFilterOrOrFilterNot() {
            if (filterAndOrFilterOrOrFilterNot == null) {
                filterAndOrFilterOrOrFilterNot = new ArrayList<Object>();
            }
            return this.filterAndOrFilterOrOrFilterNot;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}filterValue"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementCommonAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementComparableDataTypeAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementParameterAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementIncludeNullAttributes"/>
     *       &lt;attribute name="operator" use="required">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *             &lt;enumeration value="greaterThan"/>
     *             &lt;enumeration value="greaterThanEqual"/>
     *             &lt;enumeration value="lessThan"/>
     *             &lt;enumeration value="lessThanEqual"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class FilterCompare {

        @XmlElement(required = true)
        protected String filterValue;
        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        @XmlAttribute(name = "operator", required = true)
        protected String operator;
        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;
        @XmlAttribute(name = "not")
        protected Boolean not;
        @XmlAttribute(name = "dataType", required = true)
        protected String dataType;
        @XmlAttribute(name = "parameterized")
        protected Boolean parameterized;
        @XmlAttribute(name = "parameterName")
        protected String parameterName;
        @XmlAttribute(name = "includeNulls")
        protected Boolean includeNulls;

        /**
         * Gets the value of the filterValue property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getFilterValue() {
            return filterValue;
        }

        /**
         * Sets the value of the filterValue property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFilterValue(String value) {
            this.filterValue = value;
        }

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the operator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getOperator() {
            return operator;
        }

        /**
         * Sets the value of the operator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setOperator(String value) {
            this.operator = value;
        }

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

        /**
         * Gets the value of the not property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isNot() {
            if (not == null) {
                return false;
            } else {
                return not;
            }
        }

        /**
         * Sets the value of the not property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setNot(Boolean value) {
            this.not = value;
        }

        /**
         * Gets the value of the dataType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDataType() {
            return dataType;
        }

        /**
         * Sets the value of the dataType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDataType(String value) {
            this.dataType = value;
        }

        /**
         * Gets the value of the parameterized property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isParameterized() {
            if (parameterized == null) {
                return false;
            } else {
                return parameterized;
            }
        }

        /**
         * Sets the value of the parameterized property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setParameterized(Boolean value) {
            this.parameterized = value;
        }

        /**
         * Gets the value of the parameterName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getParameterName() {
            return parameterName;
        }

        /**
         * Sets the value of the parameterName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setParameterName(String value) {
            this.parameterName = value;
        }

        /**
         * Gets the value of the includeNulls property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isIncludeNulls() {
            if (includeNulls == null) {
                return false;
            } else {
                return includeNulls;
            }
        }

        /**
         * Sets the value of the includeNulls property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setIncludeNulls(Boolean value) {
            this.includeNulls = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}dmMembers" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}dmDimension"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}dmHierarchy"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementParameterAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementCommonAttributes"/>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class FilterInMembers {

        protected DmMembers dmMembers;
        @XmlElement(required = true)
        protected DmDimension dmDimension;
        @XmlElement(required = true)
        protected DmHierarchy dmHierarchy;
        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        @XmlAttribute(name = "parameterized")
        protected Boolean parameterized;
        @XmlAttribute(name = "parameterName")
        protected String parameterName;
        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;
        @XmlAttribute(name = "not")
        protected Boolean not;

        /**
         * Gets the value of the dmMembers property.
         * 
         * @return
         *     possible object is
         *     {@link DmMembers }
         *     
         */
        public DmMembers getDmMembers() {
            return dmMembers;
        }

        /**
         * Sets the value of the dmMembers property.
         * 
         * @param value
         *     allowed object is
         *     {@link DmMembers }
         *     
         */
        public void setDmMembers(DmMembers value) {
            this.dmMembers = value;
        }

        /**
         * Gets the value of the dmDimension property.
         * 
         * @return
         *     possible object is
         *     {@link DmDimension }
         *     
         */
        public DmDimension getDmDimension() {
            return dmDimension;
        }

        /**
         * Sets the value of the dmDimension property.
         * 
         * @param value
         *     allowed object is
         *     {@link DmDimension }
         *     
         */
        public void setDmDimension(DmDimension value) {
            this.dmDimension = value;
        }

        /**
         * Gets the value of the dmHierarchy property.
         * 
         * @return
         *     possible object is
         *     {@link DmHierarchy }
         *     
         */
        public DmHierarchy getDmHierarchy() {
            return dmHierarchy;
        }

        /**
         * Sets the value of the dmHierarchy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DmHierarchy }
         *     
         */
        public void setDmHierarchy(DmHierarchy value) {
            this.dmHierarchy = value;
        }

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the parameterized property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isParameterized() {
            if (parameterized == null) {
                return false;
            } else {
                return parameterized;
            }
        }

        /**
         * Sets the value of the parameterized property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setParameterized(Boolean value) {
            this.parameterized = value;
        }

        /**
         * Gets the value of the parameterName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getParameterName() {
            return parameterName;
        }

        /**
         * Sets the value of the parameterName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setParameterName(String value) {
            this.parameterName = value;
        }

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

        /**
         * Gets the value of the not property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isNot() {
            if (not == null) {
                return false;
            } else {
                return not;
            }
        }

        /**
         * Sets the value of the not property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setNot(Boolean value) {
            this.not = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element name="filterValues" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}filterValue" maxOccurs="unbounded"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementAllDataTypeAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementParameterAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementCommonAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementIncludeNullAttributes"/>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class FilterInValues {

        protected FilterDefinition.FilterInValues.FilterValues filterValues;
        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        @XmlAttribute(name = "dataType", required = true)
        protected String dataType;
        @XmlAttribute(name = "parameterized")
        protected Boolean parameterized;
        @XmlAttribute(name = "parameterName")
        protected String parameterName;
        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;
        @XmlAttribute(name = "not")
        protected Boolean not;
        @XmlAttribute(name = "includeNulls")
        protected Boolean includeNulls;

        /**
         * Gets the value of the filterValues property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterInValues.FilterValues }
         *     
         */
        public FilterDefinition.FilterInValues.FilterValues getFilterValues() {
            return filterValues;
        }

        /**
         * Sets the value of the filterValues property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterInValues.FilterValues }
         *     
         */
        public void setFilterValues(FilterDefinition.FilterInValues.FilterValues value) {
            this.filterValues = value;
        }

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the dataType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDataType() {
            return dataType;
        }

        /**
         * Sets the value of the dataType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDataType(String value) {
            this.dataType = value;
        }

        /**
         * Gets the value of the parameterized property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isParameterized() {
            if (parameterized == null) {
                return false;
            } else {
                return parameterized;
            }
        }

        /**
         * Sets the value of the parameterized property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setParameterized(Boolean value) {
            this.parameterized = value;
        }

        /**
         * Gets the value of the parameterName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getParameterName() {
            return parameterName;
        }

        /**
         * Sets the value of the parameterName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setParameterName(String value) {
            this.parameterName = value;
        }

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

        /**
         * Gets the value of the not property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isNot() {
            if (not == null) {
                return false;
            } else {
                return not;
            }
        }

        /**
         * Sets the value of the not property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setNot(Boolean value) {
            this.not = value;
        }

        /**
         * Gets the value of the includeNulls property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isIncludeNulls() {
            if (includeNulls == null) {
                return false;
            } else {
                return includeNulls;
            }
        }

        /**
         * Sets the value of the includeNulls property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setIncludeNulls(Boolean value) {
            this.includeNulls = value;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}filterValue" maxOccurs="unbounded"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "filterValue"
        })
        public static class FilterValues {

            @XmlElement(required = true)
            protected List<String> filterValue;

            /**
             * Gets the value of the filterValue property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the filterValue property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getFilterValue().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link String }
             * 
             * 
             */
            public List<String> getFilterValue() {
                if (filterValue == null) {
                    filterValue = new ArrayList<String>();
                }
                return this.filterValue;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;group ref="{http://developer.cognos.com/schemas/report/11.0/}filterElement"/>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "filterAnd",
        "filterOr",
        "filterNot",
        "filterInMembers",
        "filterInValues",
        "filterCompare",
        "filterStringCompare",
        "filterRange",
        "filterNulls"
    })
    public static class FilterNot {

        protected FilterDefinition.FilterAnd filterAnd;
        protected FilterDefinition.FilterOr filterOr;
        protected FilterDefinition.FilterNot filterNot;
        protected FilterDefinition.FilterInMembers filterInMembers;
        protected FilterDefinition.FilterInValues filterInValues;
        protected FilterDefinition.FilterCompare filterCompare;
        protected FilterDefinition.FilterStringCompare filterStringCompare;
        protected FilterDefinition.FilterRange filterRange;
        protected FilterDefinition.FilterNulls filterNulls;

        /**
         * Gets the value of the filterAnd property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterAnd }
         *     
         */
        public FilterDefinition.FilterAnd getFilterAnd() {
            return filterAnd;
        }

        /**
         * Sets the value of the filterAnd property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterAnd }
         *     
         */
        public void setFilterAnd(FilterDefinition.FilterAnd value) {
            this.filterAnd = value;
        }

        /**
         * Gets the value of the filterOr property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterOr }
         *     
         */
        public FilterDefinition.FilterOr getFilterOr() {
            return filterOr;
        }

        /**
         * Sets the value of the filterOr property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterOr }
         *     
         */
        public void setFilterOr(FilterDefinition.FilterOr value) {
            this.filterOr = value;
        }

        /**
         * Gets the value of the filterNot property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterNot }
         *     
         */
        public FilterDefinition.FilterNot getFilterNot() {
            return filterNot;
        }

        /**
         * Sets the value of the filterNot property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterNot }
         *     
         */
        public void setFilterNot(FilterDefinition.FilterNot value) {
            this.filterNot = value;
        }

        /**
         * Gets the value of the filterInMembers property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterInMembers }
         *     
         */
        public FilterDefinition.FilterInMembers getFilterInMembers() {
            return filterInMembers;
        }

        /**
         * Sets the value of the filterInMembers property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterInMembers }
         *     
         */
        public void setFilterInMembers(FilterDefinition.FilterInMembers value) {
            this.filterInMembers = value;
        }

        /**
         * Gets the value of the filterInValues property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterInValues }
         *     
         */
        public FilterDefinition.FilterInValues getFilterInValues() {
            return filterInValues;
        }

        /**
         * Sets the value of the filterInValues property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterInValues }
         *     
         */
        public void setFilterInValues(FilterDefinition.FilterInValues value) {
            this.filterInValues = value;
        }

        /**
         * Gets the value of the filterCompare property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterCompare }
         *     
         */
        public FilterDefinition.FilterCompare getFilterCompare() {
            return filterCompare;
        }

        /**
         * Sets the value of the filterCompare property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterCompare }
         *     
         */
        public void setFilterCompare(FilterDefinition.FilterCompare value) {
            this.filterCompare = value;
        }

        /**
         * Gets the value of the filterStringCompare property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterStringCompare }
         *     
         */
        public FilterDefinition.FilterStringCompare getFilterStringCompare() {
            return filterStringCompare;
        }

        /**
         * Sets the value of the filterStringCompare property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterStringCompare }
         *     
         */
        public void setFilterStringCompare(FilterDefinition.FilterStringCompare value) {
            this.filterStringCompare = value;
        }

        /**
         * Gets the value of the filterRange property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterRange }
         *     
         */
        public FilterDefinition.FilterRange getFilterRange() {
            return filterRange;
        }

        /**
         * Sets the value of the filterRange property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterRange }
         *     
         */
        public void setFilterRange(FilterDefinition.FilterRange value) {
            this.filterRange = value;
        }

        /**
         * Gets the value of the filterNulls property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterNulls }
         *     
         */
        public FilterDefinition.FilterNulls getFilterNulls() {
            return filterNulls;
        }

        /**
         * Sets the value of the filterNulls property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterNulls }
         *     
         */
        public void setFilterNulls(FilterDefinition.FilterNulls value) {
            this.filterNulls = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementCommonAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementAllDataTypeAttributes"/>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class FilterNulls {

        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;
        @XmlAttribute(name = "not")
        protected Boolean not;
        @XmlAttribute(name = "dataType", required = true)
        protected String dataType;

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

        /**
         * Gets the value of the not property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isNot() {
            if (not == null) {
                return false;
            } else {
                return not;
            }
        }

        /**
         * Sets the value of the not property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setNot(Boolean value) {
            this.not = value;
        }

        /**
         * Gets the value of the dataType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDataType() {
            return dataType;
        }

        /**
         * Sets the value of the dataType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDataType(String value) {
            this.dataType = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence maxOccurs="unbounded" minOccurs="2">
     *         &lt;group ref="{http://developer.cognos.com/schemas/report/11.0/}filterElement"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "filterAndOrFilterOrOrFilterNot"
    })
    public static class FilterOr {

        @XmlElements({
            @XmlElement(name = "filterAnd", type = FilterDefinition.FilterAnd.class),
            @XmlElement(name = "filterOr", type = FilterDefinition.FilterOr.class),
            @XmlElement(name = "filterNot", type = FilterDefinition.FilterNot.class),
            @XmlElement(name = "filterInMembers", type = FilterDefinition.FilterInMembers.class),
            @XmlElement(name = "filterInValues", type = FilterDefinition.FilterInValues.class),
            @XmlElement(name = "filterCompare", type = FilterDefinition.FilterCompare.class),
            @XmlElement(name = "filterStringCompare", type = FilterDefinition.FilterStringCompare.class),
            @XmlElement(name = "filterRange", type = FilterDefinition.FilterRange.class),
            @XmlElement(name = "filterNulls", type = FilterDefinition.FilterNulls.class)
        })
        protected List<Object> filterAndOrFilterOrOrFilterNot;

        /**
         * Gets the value of the filterAndOrFilterOrOrFilterNot property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the filterAndOrFilterOrOrFilterNot property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getFilterAndOrFilterOrOrFilterNot().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FilterDefinition.FilterAnd }
         * {@link FilterDefinition.FilterOr }
         * {@link FilterDefinition.FilterNot }
         * {@link FilterDefinition.FilterInMembers }
         * {@link FilterDefinition.FilterInValues }
         * {@link FilterDefinition.FilterCompare }
         * {@link FilterDefinition.FilterStringCompare }
         * {@link FilterDefinition.FilterRange }
         * {@link FilterDefinition.FilterNulls }
         * 
         * 
         */
        public List<Object> getFilterAndOrFilterOrOrFilterNot() {
            if (filterAndOrFilterOrOrFilterNot == null) {
                filterAndOrFilterOrOrFilterNot = new ArrayList<Object>();
            }
            return this.filterAndOrFilterOrOrFilterNot;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element name="filterFrom" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://developer.cognos.com/schemas/report/11.0/>TextType">
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="filterTo" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://developer.cognos.com/schemas/report/11.0/>TextType">
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementIncludeNullAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementComparableDataTypeAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementCommonAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementParameterAttributes"/>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class FilterRange {

        protected FilterDefinition.FilterRange.FilterFrom filterFrom;
        protected FilterDefinition.FilterRange.FilterTo filterTo;
        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        @XmlAttribute(name = "includeNulls")
        protected Boolean includeNulls;
        @XmlAttribute(name = "dataType", required = true)
        protected String dataType;
        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;
        @XmlAttribute(name = "not")
        protected Boolean not;
        @XmlAttribute(name = "parameterized")
        protected Boolean parameterized;
        @XmlAttribute(name = "parameterName")
        protected String parameterName;

        /**
         * Gets the value of the filterFrom property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterRange.FilterFrom }
         *     
         */
        public FilterDefinition.FilterRange.FilterFrom getFilterFrom() {
            return filterFrom;
        }

        /**
         * Sets the value of the filterFrom property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterRange.FilterFrom }
         *     
         */
        public void setFilterFrom(FilterDefinition.FilterRange.FilterFrom value) {
            this.filterFrom = value;
        }

        /**
         * Gets the value of the filterTo property.
         * 
         * @return
         *     possible object is
         *     {@link FilterDefinition.FilterRange.FilterTo }
         *     
         */
        public FilterDefinition.FilterRange.FilterTo getFilterTo() {
            return filterTo;
        }

        /**
         * Sets the value of the filterTo property.
         * 
         * @param value
         *     allowed object is
         *     {@link FilterDefinition.FilterRange.FilterTo }
         *     
         */
        public void setFilterTo(FilterDefinition.FilterRange.FilterTo value) {
            this.filterTo = value;
        }

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the includeNulls property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isIncludeNulls() {
            if (includeNulls == null) {
                return false;
            } else {
                return includeNulls;
            }
        }

        /**
         * Sets the value of the includeNulls property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setIncludeNulls(Boolean value) {
            this.includeNulls = value;
        }

        /**
         * Gets the value of the dataType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDataType() {
            return dataType;
        }

        /**
         * Sets the value of the dataType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDataType(String value) {
            this.dataType = value;
        }

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

        /**
         * Gets the value of the not property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isNot() {
            if (not == null) {
                return false;
            } else {
                return not;
            }
        }

        /**
         * Sets the value of the not property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setNot(Boolean value) {
            this.not = value;
        }

        /**
         * Gets the value of the parameterized property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isParameterized() {
            if (parameterized == null) {
                return false;
            } else {
                return parameterized;
            }
        }

        /**
         * Sets the value of the parameterized property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setParameterized(Boolean value) {
            this.parameterized = value;
        }

        /**
         * Gets the value of the parameterName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getParameterName() {
            return parameterName;
        }

        /**
         * Sets the value of the parameterName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setParameterName(String value) {
            this.parameterName = value;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://developer.cognos.com/schemas/report/11.0/>TextType">
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class FilterFrom {

            @XmlValue
            protected String value;

            /**
             * A simple text type that preserves whitespace
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://developer.cognos.com/schemas/report/11.0/>TextType">
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class FilterTo {

            @XmlValue
            protected String value;

            /**
             * A simple text type that preserves whitespace
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}filterValue"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementCommonAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementParameterAttributes"/>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}FilterElementIncludeNullAttributes"/>
     *       &lt;attribute name="operator" use="required">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *             &lt;enumeration value="contains"/>
     *             &lt;enumeration value="beginsWith"/>
     *             &lt;enumeration value="endsWith"/>
     *             &lt;enumeration value="like"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="caseInsensitive" default="dataSource">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *             &lt;enumeration value="yes"/>
     *             &lt;enumeration value="dataSource"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="escapeCharacter" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class FilterStringCompare {

        @XmlElement(required = true)
        protected String filterValue;
        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        @XmlAttribute(name = "operator", required = true)
        protected String operator;
        @XmlAttribute(name = "caseInsensitive")
        protected String caseInsensitive;
        @XmlAttribute(name = "escapeCharacter")
        protected String escapeCharacter;
        @XmlAttribute(name = "refDataItem", required = true)
        protected String refDataItem;
        @XmlAttribute(name = "not")
        protected Boolean not;
        @XmlAttribute(name = "parameterized")
        protected Boolean parameterized;
        @XmlAttribute(name = "parameterName")
        protected String parameterName;
        @XmlAttribute(name = "includeNulls")
        protected Boolean includeNulls;

        /**
         * Gets the value of the filterValue property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getFilterValue() {
            return filterValue;
        }

        /**
         * Sets the value of the filterValue property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFilterValue(String value) {
            this.filterValue = value;
        }

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the operator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getOperator() {
            return operator;
        }

        /**
         * Sets the value of the operator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setOperator(String value) {
            this.operator = value;
        }

        /**
         * Gets the value of the caseInsensitive property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCaseInsensitive() {
            if (caseInsensitive == null) {
                return "dataSource";
            } else {
                return caseInsensitive;
            }
        }

        /**
         * Sets the value of the caseInsensitive property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCaseInsensitive(String value) {
            this.caseInsensitive = value;
        }

        /**
         * Gets the value of the escapeCharacter property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getEscapeCharacter() {
            return escapeCharacter;
        }

        /**
         * Sets the value of the escapeCharacter property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setEscapeCharacter(String value) {
            this.escapeCharacter = value;
        }

        /**
         * Gets the value of the refDataItem property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefDataItem() {
            return refDataItem;
        }

        /**
         * Sets the value of the refDataItem property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefDataItem(String value) {
            this.refDataItem = value;
        }

        /**
         * Gets the value of the not property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isNot() {
            if (not == null) {
                return false;
            } else {
                return not;
            }
        }

        /**
         * Sets the value of the not property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setNot(Boolean value) {
            this.not = value;
        }

        /**
         * Gets the value of the parameterized property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isParameterized() {
            if (parameterized == null) {
                return false;
            } else {
                return parameterized;
            }
        }

        /**
         * Sets the value of the parameterized property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setParameterized(Boolean value) {
            this.parameterized = value;
        }

        /**
         * Gets the value of the parameterName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getParameterName() {
            return parameterName;
        }

        /**
         * Sets the value of the parameterName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setParameterName(String value) {
            this.parameterName = value;
        }

        /**
         * Gets the value of the includeNulls property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isIncludeNulls() {
            if (includeNulls == null) {
                return false;
            } else {
                return includeNulls;
            }
        }

        /**
         * Sets the value of the includeNulls property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setIncludeNulls(Boolean value) {
            this.includeNulls = value;
        }

    }

}
