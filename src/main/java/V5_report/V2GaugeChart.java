//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *         &lt;element name="v2_pivot" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="pivotColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
 *                 &lt;attribute name="pivotBevelStyle" default="round">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                       &lt;enumeration value="round"/>
 *                       &lt;enumeration value="flat"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="pivotHeight" default="20">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                       &lt;minInclusive value="0"/>
 *                       &lt;maxInclusive value="100"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="pivotRadius" default="10">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                       &lt;minInclusive value="0"/>
 *                       &lt;maxInclusive value="100"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="pivotBevelRadius" default="10">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                       &lt;minInclusive value="0"/>
 *                       &lt;maxInclusive value="100"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="pivotPaddingNonFullCircle" default="25">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                       &lt;minInclusive value="0"/>
 *                       &lt;maxInclusive value="100"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="v2_dialBorder" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="gaugeBorderHeight" default="10">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                       &lt;minInclusive value="0"/>
 *                       &lt;maxInclusive value="100"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="gaugeBorderWidthStyle" default="deep">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                       &lt;enumeration value="deep"/>
 *                       &lt;enumeration value="shallow"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="gaugeBorderColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
 *                 &lt;attribute name="gaugeBorderBevel" default="round">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                       &lt;enumeration value="round"/>
 *                       &lt;enumeration value="flat"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="gaugeBorderRadius" default="50">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                       &lt;minInclusive value="0"/>
 *                       &lt;maxInclusive value="100"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="v2_gaugeAxes" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="v2_gaugeAxis" maxOccurs="unbounded">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;all>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisRange"/>
 *                             &lt;element name="v2_gaugeAxisLine" minOccurs="0">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}LineStyleAndColorAttributes2"/>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisTitle" minOccurs="0"/>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisColors" minOccurs="0"/>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisLabels" minOccurs="0"/>
 *                             &lt;element name="v2_gaugeNeedle" minOccurs="0">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;all>
 *                                       &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_solidPalette" minOccurs="0"/>
 *                                       &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_conditionalSolidPalette" minOccurs="0"/>
 *                                       &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes" minOccurs="0"/>
 *                                       &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *                                     &lt;/all>
 *                                     &lt;attribute name="needleHeight" default="40">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                           &lt;maxInclusive value="100"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needleHeadLength" default="90">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                           &lt;maxInclusive value="100"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needleHeadWidth" default="10">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                           &lt;maxInclusive value="100"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needlePivotWidth" default="10">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                           &lt;maxInclusive value="100"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needleTailWidth" default="10">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                           &lt;maxInclusive value="100"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needleTailLength" default="20">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                           &lt;maxInclusive value="100"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needleHeadStyle" default="round">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                           &lt;enumeration value="round"/>
 *                                           &lt;enumeration value="flat"/>
 *                                           &lt;enumeration value="triangular"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needleTailStyle" default="round">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                           &lt;enumeration value="round"/>
 *                                           &lt;enumeration value="flat"/>
 *                                           &lt;enumeration value="triangular"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needleBevelRadius" default="100">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                           &lt;maxInclusive value="100"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                     &lt;attribute name="needleBevelStyle" default="round">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                           &lt;enumeration value="round"/>
 *                                           &lt;enumeration value="flat"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element name="v2_gaugeAxisMajorGridlines" minOccurs="0">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;attribute name="gridlineLength" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="5pt" />
 *                                     &lt;attribute name="gridlineStyle" type="{http://developer.cognos.com/schemas/report/11.0/}LineStyleType2" default="solid" />
 *                                     &lt;attribute name="gridlineWeight" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="1px" />
 *                                     &lt;attribute name="gridlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element name="v2_gaugeAxisMinorGridlines" minOccurs="0">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;attribute name="gridlineLength" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="5pt" />
 *                                     &lt;attribute name="gridlineStyle" type="{http://developer.cognos.com/schemas/report/11.0/}LineStyleType2" default="solid" />
 *                                     &lt;attribute name="gridlineWeight" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="1px" />
 *                                     &lt;attribute name="gridlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *                           &lt;/all>
 *                           &lt;attribute name="numberOfMinorIntervals" default="2">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
 *                                 &lt;minInclusive value="2"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="gaugeAxisStartAngle" default="10">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                 &lt;minInclusive value="0"/>
 *                                 &lt;maxInclusive value="360"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="gaugeAxisEndAngle" default="360">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                 &lt;minInclusive value="0"/>
 *                                 &lt;maxInclusive value="360"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="gaugeAxisDirection" default="clockwise">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                 &lt;enumeration value="clockwise"/>
 *                                 &lt;enumeration value="counterclockwise"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="gaugeAxisJustification" default="inside">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                 &lt;enumeration value="inside"/>
 *                                 &lt;enumeration value="outside"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="gaugeAxisInnerRadius" default="75">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                 &lt;minInclusive value="0"/>
 *                                 &lt;maxInclusive value="100"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="gaugeAxisOuterRadius" default="95">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                 &lt;minInclusive value="0"/>
 *                                 &lt;maxInclusive value="100"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="gaugeAxisTextOrientation" default="upright">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                                 &lt;enumeration value="perpendicularInward"/>
 *                                 &lt;enumeration value="perpendicularOutward"/>
 *                                 &lt;enumeration value="upright"/>
 *                                 &lt;enumeration value="tangentialClockwise"/>
 *                                 &lt;enumeration value="tangentialCounterClockwise"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_legend" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_defaultChartMeasure" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartSubTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartFooter" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalRender" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartBody" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_notes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportDrills" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_dropShadow" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartSuppress" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}noDataHandler" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}masterDetailLinks" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}alternateText" minOccurs="0"/>
 *         &lt;element name="v2_dialFace" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_fillEffect"/>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_matrix" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_category" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_basicTooltips" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appOnSelectSetVariableValues" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appDrills" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appContainerSelect" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appChartProperties" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_chartTextStyle" minOccurs="0"/>
 *       &lt;/all>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CommonChartAttributes2"/>
 *       &lt;attribute name="gaugeStartAngle" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="360"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="gaugeEndAngle" default="360">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="360"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "v2_gaugeChart")
public class V2GaugeChart {

    protected Style style;
    @XmlElement(name = "v2_pivot")
    protected V2GaugeChart.V2Pivot v2Pivot;
    @XmlElement(name = "v2_dialBorder")
    protected V2GaugeChart.V2DialBorder v2DialBorder;
    @XmlElement(name = "v2_gaugeAxes")
    protected V2GaugeChart.V2GaugeAxes v2GaugeAxes;
    @XmlElement(name = "v2_legend")
    protected V2Legend v2Legend;
    @XmlElement(name = "v2_defaultChartMeasure")
    protected ChartMeasureType2 v2DefaultChartMeasure;
    @XmlElement(name = "v2_chartTitle")
    protected ChartText2 v2ChartTitle;
    @XmlElement(name = "v2_chartSubTitle")
    protected ChartText2 v2ChartSubTitle;
    @XmlElement(name = "v2_chartFooter")
    protected ChartText2 v2ChartFooter;
    protected ConditionalRender conditionalRender;
    @XmlElement(name = "v2_chartBody")
    protected V2ChartBody v2ChartBody;
    @XmlElement(name = "v2_notes")
    protected V2Notes v2Notes;
    protected ReportDrills reportDrills;
    @XmlElement(name = "v2_dropShadow")
    protected V2DropShadow v2DropShadow;
    protected ChartSuppress chartSuppress;
    protected NoDataHandler noDataHandler;
    protected MasterDetailLinks masterDetailLinks;
    protected ConditionalStyleRefs conditionalStyleRefs;
    protected LocalizedTextType alternateText;
    @XmlElement(name = "v2_dialFace")
    protected V2GaugeChart.V2DialFace v2DialFace;
    @XmlElement(name = "v2_matrix")
    protected V2Matrix v2Matrix;
    @XmlElement(name = "v2_category")
    protected V2Category v2Category;
    @XmlElement(name = "v2_basicTooltips")
    protected V2BasicTooltips v2BasicTooltips;
    @XmlElement(name = "XMLAttributes")
    protected XMLAttributes xmlAttributes;
    protected AppOnSelectSetVariableValues appOnSelectSetVariableValues;
    protected AppDrills appDrills;
    protected AppContainerSelect appContainerSelect;
    protected AppChartProperties appChartProperties;
    @XmlElement(name = "v2_chartTextStyle")
    protected V2ChartTextStyle v2ChartTextStyle;
    @XmlAttribute(name = "gaugeStartAngle")
    protected Float gaugeStartAngle;
    @XmlAttribute(name = "gaugeEndAngle")
    protected Float gaugeEndAngle;
    @XmlAttribute(name = "refQuery", required = true)
    protected String refQuery;
    @XmlAttribute(name = "maxHotspots")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger maxHotspots;
    @XmlAttribute(name = "renderPageWhenEmpty")
    protected Boolean renderPageWhenEmpty;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "repeatEveryPage")
    protected Boolean repeatEveryPage;
    @XmlAttribute(name = "displayForOrientation")
    protected String displayForOrientation;

    /**
     * Gets the value of the style property.
     * 
     * @return
     *     possible object is
     *     {@link Style }
     *     
     */
    public Style getStyle() {
        return style;
    }

    /**
     * Sets the value of the style property.
     * 
     * @param value
     *     allowed object is
     *     {@link Style }
     *     
     */
    public void setStyle(Style value) {
        this.style = value;
    }

    /**
     * Gets the value of the v2Pivot property.
     * 
     * @return
     *     possible object is
     *     {@link V2GaugeChart.V2Pivot }
     *     
     */
    public V2GaugeChart.V2Pivot getV2Pivot() {
        return v2Pivot;
    }

    /**
     * Sets the value of the v2Pivot property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2GaugeChart.V2Pivot }
     *     
     */
    public void setV2Pivot(V2GaugeChart.V2Pivot value) {
        this.v2Pivot = value;
    }

    /**
     * Gets the value of the v2DialBorder property.
     * 
     * @return
     *     possible object is
     *     {@link V2GaugeChart.V2DialBorder }
     *     
     */
    public V2GaugeChart.V2DialBorder getV2DialBorder() {
        return v2DialBorder;
    }

    /**
     * Sets the value of the v2DialBorder property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2GaugeChart.V2DialBorder }
     *     
     */
    public void setV2DialBorder(V2GaugeChart.V2DialBorder value) {
        this.v2DialBorder = value;
    }

    /**
     * Gets the value of the v2GaugeAxes property.
     * 
     * @return
     *     possible object is
     *     {@link V2GaugeChart.V2GaugeAxes }
     *     
     */
    public V2GaugeChart.V2GaugeAxes getV2GaugeAxes() {
        return v2GaugeAxes;
    }

    /**
     * Sets the value of the v2GaugeAxes property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2GaugeChart.V2GaugeAxes }
     *     
     */
    public void setV2GaugeAxes(V2GaugeChart.V2GaugeAxes value) {
        this.v2GaugeAxes = value;
    }

    /**
     * Defines the legend.  STYLE:  The legend will support font, color, background color, background image, generated background and padding.
     * 
     * @return
     *     possible object is
     *     {@link V2Legend }
     *     
     */
    public V2Legend getV2Legend() {
        return v2Legend;
    }

    /**
     * Sets the value of the v2Legend property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2Legend }
     *     
     */
    public void setV2Legend(V2Legend value) {
        this.v2Legend = value;
    }

    /**
     * Gets the value of the v2DefaultChartMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link ChartMeasureType2 }
     *     
     */
    public ChartMeasureType2 getV2DefaultChartMeasure() {
        return v2DefaultChartMeasure;
    }

    /**
     * Sets the value of the v2DefaultChartMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartMeasureType2 }
     *     
     */
    public void setV2DefaultChartMeasure(ChartMeasureType2 value) {
        this.v2DefaultChartMeasure = value;
    }

    /**
     * Gets the value of the v2ChartTitle property.
     * 
     * @return
     *     possible object is
     *     {@link ChartText2 }
     *     
     */
    public ChartText2 getV2ChartTitle() {
        return v2ChartTitle;
    }

    /**
     * Sets the value of the v2ChartTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartText2 }
     *     
     */
    public void setV2ChartTitle(ChartText2 value) {
        this.v2ChartTitle = value;
    }

    /**
     * Gets the value of the v2ChartSubTitle property.
     * 
     * @return
     *     possible object is
     *     {@link ChartText2 }
     *     
     */
    public ChartText2 getV2ChartSubTitle() {
        return v2ChartSubTitle;
    }

    /**
     * Sets the value of the v2ChartSubTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartText2 }
     *     
     */
    public void setV2ChartSubTitle(ChartText2 value) {
        this.v2ChartSubTitle = value;
    }

    /**
     * Gets the value of the v2ChartFooter property.
     * 
     * @return
     *     possible object is
     *     {@link ChartText2 }
     *     
     */
    public ChartText2 getV2ChartFooter() {
        return v2ChartFooter;
    }

    /**
     * Sets the value of the v2ChartFooter property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartText2 }
     *     
     */
    public void setV2ChartFooter(ChartText2 value) {
        this.v2ChartFooter = value;
    }

    /**
     * Gets the value of the conditionalRender property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalRender }
     *     
     */
    public ConditionalRender getConditionalRender() {
        return conditionalRender;
    }

    /**
     * Sets the value of the conditionalRender property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalRender }
     *     
     */
    public void setConditionalRender(ConditionalRender value) {
        this.conditionalRender = value;
    }

    /**
     * Used to style the chart body or plot area.  In CGS lingo, this is the chart.  STYLE:  Only the following styles are allowed on the chartBody: background color, background image, generated background.
     * 
     * @return
     *     possible object is
     *     {@link V2ChartBody }
     *     
     */
    public V2ChartBody getV2ChartBody() {
        return v2ChartBody;
    }

    /**
     * Sets the value of the v2ChartBody property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2ChartBody }
     *     
     */
    public void setV2ChartBody(V2ChartBody value) {
        this.v2ChartBody = value;
    }

    /**
     * Gets the value of the v2Notes property.
     * 
     * @return
     *     possible object is
     *     {@link V2Notes }
     *     
     */
    public V2Notes getV2Notes() {
        return v2Notes;
    }

    /**
     * Sets the value of the v2Notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2Notes }
     *     
     */
    public void setV2Notes(V2Notes value) {
        this.v2Notes = value;
    }

    /**
     * Gets the value of the reportDrills property.
     * 
     * @return
     *     possible object is
     *     {@link ReportDrills }
     *     
     */
    public ReportDrills getReportDrills() {
        return reportDrills;
    }

    /**
     * Sets the value of the reportDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReportDrills }
     *     
     */
    public void setReportDrills(ReportDrills value) {
        this.reportDrills = value;
    }

    /**
     * Gets the value of the v2DropShadow property.
     * 
     * @return
     *     possible object is
     *     {@link V2DropShadow }
     *     
     */
    public V2DropShadow getV2DropShadow() {
        return v2DropShadow;
    }

    /**
     * Sets the value of the v2DropShadow property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2DropShadow }
     *     
     */
    public void setV2DropShadow(V2DropShadow value) {
        this.v2DropShadow = value;
    }

    /**
     * Gets the value of the chartSuppress property.
     * 
     * @return
     *     possible object is
     *     {@link ChartSuppress }
     *     
     */
    public ChartSuppress getChartSuppress() {
        return chartSuppress;
    }

    /**
     * Sets the value of the chartSuppress property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartSuppress }
     *     
     */
    public void setChartSuppress(ChartSuppress value) {
        this.chartSuppress = value;
    }

    /**
     * Gets the value of the noDataHandler property.
     * 
     * @return
     *     possible object is
     *     {@link NoDataHandler }
     *     
     */
    public NoDataHandler getNoDataHandler() {
        return noDataHandler;
    }

    /**
     * Sets the value of the noDataHandler property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoDataHandler }
     *     
     */
    public void setNoDataHandler(NoDataHandler value) {
        this.noDataHandler = value;
    }

    /**
     * Gets the value of the masterDetailLinks property.
     * 
     * @return
     *     possible object is
     *     {@link MasterDetailLinks }
     *     
     */
    public MasterDetailLinks getMasterDetailLinks() {
        return masterDetailLinks;
    }

    /**
     * Sets the value of the masterDetailLinks property.
     * 
     * @param value
     *     allowed object is
     *     {@link MasterDetailLinks }
     *     
     */
    public void setMasterDetailLinks(MasterDetailLinks value) {
        this.masterDetailLinks = value;
    }

    /**
     * Gets the value of the conditionalStyleRefs property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public ConditionalStyleRefs getConditionalStyleRefs() {
        return conditionalStyleRefs;
    }

    /**
     * Sets the value of the conditionalStyleRefs property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public void setConditionalStyleRefs(ConditionalStyleRefs value) {
        this.conditionalStyleRefs = value;
    }

    /**
     * Gets the value of the alternateText property.
     * 
     * @return
     *     possible object is
     *     {@link LocalizedTextType }
     *     
     */
    public LocalizedTextType getAlternateText() {
        return alternateText;
    }

    /**
     * Sets the value of the alternateText property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalizedTextType }
     *     
     */
    public void setAlternateText(LocalizedTextType value) {
        this.alternateText = value;
    }

    /**
     * Gets the value of the v2DialFace property.
     * 
     * @return
     *     possible object is
     *     {@link V2GaugeChart.V2DialFace }
     *     
     */
    public V2GaugeChart.V2DialFace getV2DialFace() {
        return v2DialFace;
    }

    /**
     * Sets the value of the v2DialFace property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2GaugeChart.V2DialFace }
     *     
     */
    public void setV2DialFace(V2GaugeChart.V2DialFace value) {
        this.v2DialFace = value;
    }

    /**
     * Gets the value of the v2Matrix property.
     * 
     * @return
     *     possible object is
     *     {@link V2Matrix }
     *     
     */
    public V2Matrix getV2Matrix() {
        return v2Matrix;
    }

    /**
     * Sets the value of the v2Matrix property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2Matrix }
     *     
     */
    public void setV2Matrix(V2Matrix value) {
        this.v2Matrix = value;
    }

    /**
     * Gets the value of the v2Category property.
     * 
     * @return
     *     possible object is
     *     {@link V2Category }
     *     
     */
    public V2Category getV2Category() {
        return v2Category;
    }

    /**
     * Sets the value of the v2Category property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2Category }
     *     
     */
    public void setV2Category(V2Category value) {
        this.v2Category = value;
    }

    /**
     * Gets the value of the v2BasicTooltips property.
     * 
     * @return
     *     possible object is
     *     {@link V2BasicTooltips }
     *     
     */
    public V2BasicTooltips getV2BasicTooltips() {
        return v2BasicTooltips;
    }

    /**
     * Sets the value of the v2BasicTooltips property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2BasicTooltips }
     *     
     */
    public void setV2BasicTooltips(V2BasicTooltips value) {
        this.v2BasicTooltips = value;
    }

    /**
     * Gets the value of the xmlAttributes property.
     * 
     * @return
     *     possible object is
     *     {@link XMLAttributes }
     *     
     */
    public XMLAttributes getXMLAttributes() {
        return xmlAttributes;
    }

    /**
     * Sets the value of the xmlAttributes property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLAttributes }
     *     
     */
    public void setXMLAttributes(XMLAttributes value) {
        this.xmlAttributes = value;
    }

    /**
     * Gets the value of the appOnSelectSetVariableValues property.
     * 
     * @return
     *     possible object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public AppOnSelectSetVariableValues getAppOnSelectSetVariableValues() {
        return appOnSelectSetVariableValues;
    }

    /**
     * Sets the value of the appOnSelectSetVariableValues property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public void setAppOnSelectSetVariableValues(AppOnSelectSetVariableValues value) {
        this.appOnSelectSetVariableValues = value;
    }

    /**
     * Gets the value of the appDrills property.
     * 
     * @return
     *     possible object is
     *     {@link AppDrills }
     *     
     */
    public AppDrills getAppDrills() {
        return appDrills;
    }

    /**
     * Sets the value of the appDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppDrills }
     *     
     */
    public void setAppDrills(AppDrills value) {
        this.appDrills = value;
    }

    /**
     * Gets the value of the appContainerSelect property.
     * 
     * @return
     *     possible object is
     *     {@link AppContainerSelect }
     *     
     */
    public AppContainerSelect getAppContainerSelect() {
        return appContainerSelect;
    }

    /**
     * Sets the value of the appContainerSelect property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppContainerSelect }
     *     
     */
    public void setAppContainerSelect(AppContainerSelect value) {
        this.appContainerSelect = value;
    }

    /**
     * Gets the value of the appChartProperties property.
     * 
     * @return
     *     possible object is
     *     {@link AppChartProperties }
     *     
     */
    public AppChartProperties getAppChartProperties() {
        return appChartProperties;
    }

    /**
     * Sets the value of the appChartProperties property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppChartProperties }
     *     
     */
    public void setAppChartProperties(AppChartProperties value) {
        this.appChartProperties = value;
    }

    /**
     * Gets the value of the v2ChartTextStyle property.
     * 
     * @return
     *     possible object is
     *     {@link V2ChartTextStyle }
     *     
     */
    public V2ChartTextStyle getV2ChartTextStyle() {
        return v2ChartTextStyle;
    }

    /**
     * Sets the value of the v2ChartTextStyle property.
     * 
     * @param value
     *     allowed object is
     *     {@link V2ChartTextStyle }
     *     
     */
    public void setV2ChartTextStyle(V2ChartTextStyle value) {
        this.v2ChartTextStyle = value;
    }

    /**
     * Gets the value of the gaugeStartAngle property.
     * 
     * @return
     *     possible object is
     *     {@link Float }
     *     
     */
    public float getGaugeStartAngle() {
        if (gaugeStartAngle == null) {
            return  0.0F;
        } else {
            return gaugeStartAngle;
        }
    }

    /**
     * Sets the value of the gaugeStartAngle property.
     * 
     * @param value
     *     allowed object is
     *     {@link Float }
     *     
     */
    public void setGaugeStartAngle(Float value) {
        this.gaugeStartAngle = value;
    }

    /**
     * Gets the value of the gaugeEndAngle property.
     * 
     * @return
     *     possible object is
     *     {@link Float }
     *     
     */
    public float getGaugeEndAngle() {
        if (gaugeEndAngle == null) {
            return  360.0F;
        } else {
            return gaugeEndAngle;
        }
    }

    /**
     * Sets the value of the gaugeEndAngle property.
     * 
     * @param value
     *     allowed object is
     *     {@link Float }
     *     
     */
    public void setGaugeEndAngle(Float value) {
        this.gaugeEndAngle = value;
    }

    /**
     * Gets the value of the refQuery property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefQuery() {
        return refQuery;
    }

    /**
     * Sets the value of the refQuery property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefQuery(String value) {
        this.refQuery = value;
    }

    /**
     * Gets the value of the maxHotspots property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxHotspots() {
        return maxHotspots;
    }

    /**
     * Sets the value of the maxHotspots property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxHotspots(BigInteger value) {
        this.maxHotspots = value;
    }

    /**
     * Gets the value of the renderPageWhenEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRenderPageWhenEmpty() {
        if (renderPageWhenEmpty == null) {
            return true;
        } else {
            return renderPageWhenEmpty;
        }
    }

    /**
     * Sets the value of the renderPageWhenEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRenderPageWhenEmpty(Boolean value) {
        this.renderPageWhenEmpty = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the repeatEveryPage property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRepeatEveryPage() {
        if (repeatEveryPage == null) {
            return false;
        } else {
            return repeatEveryPage;
        }
    }

    /**
     * Sets the value of the repeatEveryPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRepeatEveryPage(Boolean value) {
        this.repeatEveryPage = value;
    }

    /**
     * Gets the value of the displayForOrientation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayForOrientation() {
        if (displayForOrientation == null) {
            return "both";
        } else {
            return displayForOrientation;
        }
    }

    /**
     * Sets the value of the displayForOrientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayForOrientation(String value) {
        this.displayForOrientation = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;attribute name="gaugeBorderHeight" default="10">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *             &lt;minInclusive value="0"/>
     *             &lt;maxInclusive value="100"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="gaugeBorderWidthStyle" default="deep">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *             &lt;enumeration value="deep"/>
     *             &lt;enumeration value="shallow"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="gaugeBorderColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
     *       &lt;attribute name="gaugeBorderBevel" default="round">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *             &lt;enumeration value="round"/>
     *             &lt;enumeration value="flat"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="gaugeBorderRadius" default="50">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *             &lt;minInclusive value="0"/>
     *             &lt;maxInclusive value="100"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class V2DialBorder {

        @XmlAttribute(name = "gaugeBorderHeight")
        protected Float gaugeBorderHeight;
        @XmlAttribute(name = "gaugeBorderWidthStyle")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String gaugeBorderWidthStyle;
        @XmlAttribute(name = "gaugeBorderColor")
        protected String gaugeBorderColor;
        @XmlAttribute(name = "gaugeBorderBevel")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String gaugeBorderBevel;
        @XmlAttribute(name = "gaugeBorderRadius")
        protected Float gaugeBorderRadius;

        /**
         * Gets the value of the gaugeBorderHeight property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public float getGaugeBorderHeight() {
            if (gaugeBorderHeight == null) {
                return  10.0F;
            } else {
                return gaugeBorderHeight;
            }
        }

        /**
         * Sets the value of the gaugeBorderHeight property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setGaugeBorderHeight(Float value) {
            this.gaugeBorderHeight = value;
        }

        /**
         * Gets the value of the gaugeBorderWidthStyle property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getGaugeBorderWidthStyle() {
            if (gaugeBorderWidthStyle == null) {
                return "deep";
            } else {
                return gaugeBorderWidthStyle;
            }
        }

        /**
         * Sets the value of the gaugeBorderWidthStyle property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setGaugeBorderWidthStyle(String value) {
            this.gaugeBorderWidthStyle = value;
        }

        /**
         * Gets the value of the gaugeBorderColor property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getGaugeBorderColor() {
            if (gaugeBorderColor == null) {
                return "black";
            } else {
                return gaugeBorderColor;
            }
        }

        /**
         * Sets the value of the gaugeBorderColor property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setGaugeBorderColor(String value) {
            this.gaugeBorderColor = value;
        }

        /**
         * Gets the value of the gaugeBorderBevel property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getGaugeBorderBevel() {
            if (gaugeBorderBevel == null) {
                return "round";
            } else {
                return gaugeBorderBevel;
            }
        }

        /**
         * Sets the value of the gaugeBorderBevel property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setGaugeBorderBevel(String value) {
            this.gaugeBorderBevel = value;
        }

        /**
         * Gets the value of the gaugeBorderRadius property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public float getGaugeBorderRadius() {
            if (gaugeBorderRadius == null) {
                return  50.0F;
            } else {
                return gaugeBorderRadius;
            }
        }

        /**
         * Sets the value of the gaugeBorderRadius property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setGaugeBorderRadius(Float value) {
            this.gaugeBorderRadius = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_fillEffect"/>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class V2DialFace {

        @XmlElement(name = "v2_fillEffect", required = true)
        protected V2FillEffect v2FillEffect;

        /**
         * Gets the value of the v2FillEffect property.
         * 
         * @return
         *     possible object is
         *     {@link V2FillEffect }
         *     
         */
        public V2FillEffect getV2FillEffect() {
            return v2FillEffect;
        }

        /**
         * Sets the value of the v2FillEffect property.
         * 
         * @param value
         *     allowed object is
         *     {@link V2FillEffect }
         *     
         */
        public void setV2FillEffect(V2FillEffect value) {
            this.v2FillEffect = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="v2_gaugeAxis" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;all>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisRange"/>
     *                   &lt;element name="v2_gaugeAxisLine" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}LineStyleAndColorAttributes2"/>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisTitle" minOccurs="0"/>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisColors" minOccurs="0"/>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisLabels" minOccurs="0"/>
     *                   &lt;element name="v2_gaugeNeedle" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;all>
     *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_solidPalette" minOccurs="0"/>
     *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_conditionalSolidPalette" minOccurs="0"/>
     *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes" minOccurs="0"/>
     *                             &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *                           &lt;/all>
     *                           &lt;attribute name="needleHeight" default="40">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                                 &lt;maxInclusive value="100"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needleHeadLength" default="90">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                                 &lt;maxInclusive value="100"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needleHeadWidth" default="10">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                                 &lt;maxInclusive value="100"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needlePivotWidth" default="10">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                                 &lt;maxInclusive value="100"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needleTailWidth" default="10">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                                 &lt;maxInclusive value="100"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needleTailLength" default="20">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                                 &lt;maxInclusive value="100"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needleHeadStyle" default="round">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                                 &lt;enumeration value="round"/>
     *                                 &lt;enumeration value="flat"/>
     *                                 &lt;enumeration value="triangular"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needleTailStyle" default="round">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                                 &lt;enumeration value="round"/>
     *                                 &lt;enumeration value="flat"/>
     *                                 &lt;enumeration value="triangular"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needleBevelRadius" default="100">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                                 &lt;maxInclusive value="100"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                           &lt;attribute name="needleBevelStyle" default="round">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                                 &lt;enumeration value="round"/>
     *                                 &lt;enumeration value="flat"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="v2_gaugeAxisMajorGridlines" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;attribute name="gridlineLength" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="5pt" />
     *                           &lt;attribute name="gridlineStyle" type="{http://developer.cognos.com/schemas/report/11.0/}LineStyleType2" default="solid" />
     *                           &lt;attribute name="gridlineWeight" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="1px" />
     *                           &lt;attribute name="gridlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="v2_gaugeAxisMinorGridlines" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;attribute name="gridlineLength" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="5pt" />
     *                           &lt;attribute name="gridlineStyle" type="{http://developer.cognos.com/schemas/report/11.0/}LineStyleType2" default="solid" />
     *                           &lt;attribute name="gridlineWeight" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="1px" />
     *                           &lt;attribute name="gridlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *                 &lt;/all>
     *                 &lt;attribute name="numberOfMinorIntervals" default="2">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
     *                       &lt;minInclusive value="2"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="gaugeAxisStartAngle" default="10">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                       &lt;minInclusive value="0"/>
     *                       &lt;maxInclusive value="360"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="gaugeAxisEndAngle" default="360">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                       &lt;minInclusive value="0"/>
     *                       &lt;maxInclusive value="360"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="gaugeAxisDirection" default="clockwise">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                       &lt;enumeration value="clockwise"/>
     *                       &lt;enumeration value="counterclockwise"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="gaugeAxisJustification" default="inside">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                       &lt;enumeration value="inside"/>
     *                       &lt;enumeration value="outside"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="gaugeAxisInnerRadius" default="75">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                       &lt;minInclusive value="0"/>
     *                       &lt;maxInclusive value="100"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="gaugeAxisOuterRadius" default="95">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                       &lt;minInclusive value="0"/>
     *                       &lt;maxInclusive value="100"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="gaugeAxisTextOrientation" default="upright">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *                       &lt;enumeration value="perpendicularInward"/>
     *                       &lt;enumeration value="perpendicularOutward"/>
     *                       &lt;enumeration value="upright"/>
     *                       &lt;enumeration value="tangentialClockwise"/>
     *                       &lt;enumeration value="tangentialCounterClockwise"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "v2GaugeAxis"
    })
    public static class V2GaugeAxes {

        @XmlElement(name = "v2_gaugeAxis", required = true)
        protected List<V2GaugeChart.V2GaugeAxes.V2GaugeAxis> v2GaugeAxis;

        /**
         * Gets the value of the v2GaugeAxis property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the v2GaugeAxis property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getV2GaugeAxis().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis }
         * 
         * 
         */
        public List<V2GaugeChart.V2GaugeAxes.V2GaugeAxis> getV2GaugeAxis() {
            if (v2GaugeAxis == null) {
                v2GaugeAxis = new ArrayList<V2GaugeChart.V2GaugeAxes.V2GaugeAxis>();
            }
            return this.v2GaugeAxis;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;all>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisRange"/>
         *         &lt;element name="v2_gaugeAxisLine" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}LineStyleAndColorAttributes2"/>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisTitle" minOccurs="0"/>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisColors" minOccurs="0"/>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_axisLabels" minOccurs="0"/>
         *         &lt;element name="v2_gaugeNeedle" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;all>
         *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_solidPalette" minOccurs="0"/>
         *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_conditionalSolidPalette" minOccurs="0"/>
         *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes" minOccurs="0"/>
         *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
         *                 &lt;/all>
         *                 &lt;attribute name="needleHeight" default="40">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                       &lt;maxInclusive value="100"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needleHeadLength" default="90">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                       &lt;maxInclusive value="100"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needleHeadWidth" default="10">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                       &lt;maxInclusive value="100"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needlePivotWidth" default="10">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                       &lt;maxInclusive value="100"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needleTailWidth" default="10">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                       &lt;maxInclusive value="100"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needleTailLength" default="20">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                       &lt;maxInclusive value="100"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needleHeadStyle" default="round">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *                       &lt;enumeration value="round"/>
         *                       &lt;enumeration value="flat"/>
         *                       &lt;enumeration value="triangular"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needleTailStyle" default="round">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *                       &lt;enumeration value="round"/>
         *                       &lt;enumeration value="flat"/>
         *                       &lt;enumeration value="triangular"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needleBevelRadius" default="100">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                       &lt;maxInclusive value="100"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *                 &lt;attribute name="needleBevelStyle" default="round">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *                       &lt;enumeration value="round"/>
         *                       &lt;enumeration value="flat"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="v2_gaugeAxisMajorGridlines" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;attribute name="gridlineLength" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="5pt" />
         *                 &lt;attribute name="gridlineStyle" type="{http://developer.cognos.com/schemas/report/11.0/}LineStyleType2" default="solid" />
         *                 &lt;attribute name="gridlineWeight" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="1px" />
         *                 &lt;attribute name="gridlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="v2_gaugeAxisMinorGridlines" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;attribute name="gridlineLength" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="5pt" />
         *                 &lt;attribute name="gridlineStyle" type="{http://developer.cognos.com/schemas/report/11.0/}LineStyleType2" default="solid" />
         *                 &lt;attribute name="gridlineWeight" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="1px" />
         *                 &lt;attribute name="gridlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
         *       &lt;/all>
         *       &lt;attribute name="numberOfMinorIntervals" default="2">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
         *             &lt;minInclusive value="2"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="gaugeAxisStartAngle" default="10">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *             &lt;minInclusive value="0"/>
         *             &lt;maxInclusive value="360"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="gaugeAxisEndAngle" default="360">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *             &lt;minInclusive value="0"/>
         *             &lt;maxInclusive value="360"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="gaugeAxisDirection" default="clockwise">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *             &lt;enumeration value="clockwise"/>
         *             &lt;enumeration value="counterclockwise"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="gaugeAxisJustification" default="inside">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *             &lt;enumeration value="inside"/>
         *             &lt;enumeration value="outside"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="gaugeAxisInnerRadius" default="75">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *             &lt;minInclusive value="0"/>
         *             &lt;maxInclusive value="100"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="gaugeAxisOuterRadius" default="95">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *             &lt;minInclusive value="0"/>
         *             &lt;maxInclusive value="100"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="gaugeAxisTextOrientation" default="upright">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
         *             &lt;enumeration value="perpendicularInward"/>
         *             &lt;enumeration value="perpendicularOutward"/>
         *             &lt;enumeration value="upright"/>
         *             &lt;enumeration value="tangentialClockwise"/>
         *             &lt;enumeration value="tangentialCounterClockwise"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {

        })
        public static class V2GaugeAxis {

            @XmlElement(name = "v2_axisRange", required = true)
            protected V2AxisRange v2AxisRange;
            @XmlElement(name = "v2_gaugeAxisLine")
            protected V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisLine v2GaugeAxisLine;
            @XmlElement(name = "v2_axisTitle")
            protected V2AxisTitle v2AxisTitle;
            @XmlElement(name = "v2_axisColors")
            protected V2AxisColors v2AxisColors;
            @XmlElement(name = "v2_axisLabels")
            protected V2AxisLabels v2AxisLabels;
            @XmlElement(name = "v2_gaugeNeedle")
            protected V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeNeedle v2GaugeNeedle;
            @XmlElement(name = "v2_gaugeAxisMajorGridlines")
            protected V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMajorGridlines v2GaugeAxisMajorGridlines;
            @XmlElement(name = "v2_gaugeAxisMinorGridlines")
            protected V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMinorGridlines v2GaugeAxisMinorGridlines;
            @XmlElement(name = "XMLAttributes")
            protected XMLAttributes xmlAttributes;
            @XmlAttribute(name = "numberOfMinorIntervals")
            protected BigInteger numberOfMinorIntervals;
            @XmlAttribute(name = "gaugeAxisStartAngle")
            protected Float gaugeAxisStartAngle;
            @XmlAttribute(name = "gaugeAxisEndAngle")
            protected Float gaugeAxisEndAngle;
            @XmlAttribute(name = "gaugeAxisDirection")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String gaugeAxisDirection;
            @XmlAttribute(name = "gaugeAxisJustification")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String gaugeAxisJustification;
            @XmlAttribute(name = "gaugeAxisInnerRadius")
            protected Float gaugeAxisInnerRadius;
            @XmlAttribute(name = "gaugeAxisOuterRadius")
            protected Float gaugeAxisOuterRadius;
            @XmlAttribute(name = "gaugeAxisTextOrientation")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String gaugeAxisTextOrientation;

            /**
             * Gets the value of the v2AxisRange property.
             * 
             * @return
             *     possible object is
             *     {@link V2AxisRange }
             *     
             */
            public V2AxisRange getV2AxisRange() {
                return v2AxisRange;
            }

            /**
             * Sets the value of the v2AxisRange property.
             * 
             * @param value
             *     allowed object is
             *     {@link V2AxisRange }
             *     
             */
            public void setV2AxisRange(V2AxisRange value) {
                this.v2AxisRange = value;
            }

            /**
             * Gets the value of the v2GaugeAxisLine property.
             * 
             * @return
             *     possible object is
             *     {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisLine }
             *     
             */
            public V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisLine getV2GaugeAxisLine() {
                return v2GaugeAxisLine;
            }

            /**
             * Sets the value of the v2GaugeAxisLine property.
             * 
             * @param value
             *     allowed object is
             *     {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisLine }
             *     
             */
            public void setV2GaugeAxisLine(V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisLine value) {
                this.v2GaugeAxisLine = value;
            }

            /**
             * Gets the value of the v2AxisTitle property.
             * 
             * @return
             *     possible object is
             *     {@link V2AxisTitle }
             *     
             */
            public V2AxisTitle getV2AxisTitle() {
                return v2AxisTitle;
            }

            /**
             * Sets the value of the v2AxisTitle property.
             * 
             * @param value
             *     allowed object is
             *     {@link V2AxisTitle }
             *     
             */
            public void setV2AxisTitle(V2AxisTitle value) {
                this.v2AxisTitle = value;
            }

            /**
             * Gets the value of the v2AxisColors property.
             * 
             * @return
             *     possible object is
             *     {@link V2AxisColors }
             *     
             */
            public V2AxisColors getV2AxisColors() {
                return v2AxisColors;
            }

            /**
             * Sets the value of the v2AxisColors property.
             * 
             * @param value
             *     allowed object is
             *     {@link V2AxisColors }
             *     
             */
            public void setV2AxisColors(V2AxisColors value) {
                this.v2AxisColors = value;
            }

            /**
             * Gets the value of the v2AxisLabels property.
             * 
             * @return
             *     possible object is
             *     {@link V2AxisLabels }
             *     
             */
            public V2AxisLabels getV2AxisLabels() {
                return v2AxisLabels;
            }

            /**
             * Sets the value of the v2AxisLabels property.
             * 
             * @param value
             *     allowed object is
             *     {@link V2AxisLabels }
             *     
             */
            public void setV2AxisLabels(V2AxisLabels value) {
                this.v2AxisLabels = value;
            }

            /**
             * Gets the value of the v2GaugeNeedle property.
             * 
             * @return
             *     possible object is
             *     {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeNeedle }
             *     
             */
            public V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeNeedle getV2GaugeNeedle() {
                return v2GaugeNeedle;
            }

            /**
             * Sets the value of the v2GaugeNeedle property.
             * 
             * @param value
             *     allowed object is
             *     {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeNeedle }
             *     
             */
            public void setV2GaugeNeedle(V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeNeedle value) {
                this.v2GaugeNeedle = value;
            }

            /**
             * Gets the value of the v2GaugeAxisMajorGridlines property.
             * 
             * @return
             *     possible object is
             *     {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMajorGridlines }
             *     
             */
            public V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMajorGridlines getV2GaugeAxisMajorGridlines() {
                return v2GaugeAxisMajorGridlines;
            }

            /**
             * Sets the value of the v2GaugeAxisMajorGridlines property.
             * 
             * @param value
             *     allowed object is
             *     {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMajorGridlines }
             *     
             */
            public void setV2GaugeAxisMajorGridlines(V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMajorGridlines value) {
                this.v2GaugeAxisMajorGridlines = value;
            }

            /**
             * Gets the value of the v2GaugeAxisMinorGridlines property.
             * 
             * @return
             *     possible object is
             *     {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMinorGridlines }
             *     
             */
            public V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMinorGridlines getV2GaugeAxisMinorGridlines() {
                return v2GaugeAxisMinorGridlines;
            }

            /**
             * Sets the value of the v2GaugeAxisMinorGridlines property.
             * 
             * @param value
             *     allowed object is
             *     {@link V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMinorGridlines }
             *     
             */
            public void setV2GaugeAxisMinorGridlines(V2GaugeChart.V2GaugeAxes.V2GaugeAxis.V2GaugeAxisMinorGridlines value) {
                this.v2GaugeAxisMinorGridlines = value;
            }

            /**
             * Gets the value of the xmlAttributes property.
             * 
             * @return
             *     possible object is
             *     {@link XMLAttributes }
             *     
             */
            public XMLAttributes getXMLAttributes() {
                return xmlAttributes;
            }

            /**
             * Sets the value of the xmlAttributes property.
             * 
             * @param value
             *     allowed object is
             *     {@link XMLAttributes }
             *     
             */
            public void setXMLAttributes(XMLAttributes value) {
                this.xmlAttributes = value;
            }

            /**
             * Gets the value of the numberOfMinorIntervals property.
             * 
             * @return
             *     possible object is
             *     {@link BigInteger }
             *     
             */
            public BigInteger getNumberOfMinorIntervals() {
                if (numberOfMinorIntervals == null) {
                    return new BigInteger("2");
                } else {
                    return numberOfMinorIntervals;
                }
            }

            /**
             * Sets the value of the numberOfMinorIntervals property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigInteger }
             *     
             */
            public void setNumberOfMinorIntervals(BigInteger value) {
                this.numberOfMinorIntervals = value;
            }

            /**
             * Gets the value of the gaugeAxisStartAngle property.
             * 
             * @return
             *     possible object is
             *     {@link Float }
             *     
             */
            public float getGaugeAxisStartAngle() {
                if (gaugeAxisStartAngle == null) {
                    return  10.0F;
                } else {
                    return gaugeAxisStartAngle;
                }
            }

            /**
             * Sets the value of the gaugeAxisStartAngle property.
             * 
             * @param value
             *     allowed object is
             *     {@link Float }
             *     
             */
            public void setGaugeAxisStartAngle(Float value) {
                this.gaugeAxisStartAngle = value;
            }

            /**
             * Gets the value of the gaugeAxisEndAngle property.
             * 
             * @return
             *     possible object is
             *     {@link Float }
             *     
             */
            public float getGaugeAxisEndAngle() {
                if (gaugeAxisEndAngle == null) {
                    return  360.0F;
                } else {
                    return gaugeAxisEndAngle;
                }
            }

            /**
             * Sets the value of the gaugeAxisEndAngle property.
             * 
             * @param value
             *     allowed object is
             *     {@link Float }
             *     
             */
            public void setGaugeAxisEndAngle(Float value) {
                this.gaugeAxisEndAngle = value;
            }

            /**
             * Gets the value of the gaugeAxisDirection property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getGaugeAxisDirection() {
                if (gaugeAxisDirection == null) {
                    return "clockwise";
                } else {
                    return gaugeAxisDirection;
                }
            }

            /**
             * Sets the value of the gaugeAxisDirection property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setGaugeAxisDirection(String value) {
                this.gaugeAxisDirection = value;
            }

            /**
             * Gets the value of the gaugeAxisJustification property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getGaugeAxisJustification() {
                if (gaugeAxisJustification == null) {
                    return "inside";
                } else {
                    return gaugeAxisJustification;
                }
            }

            /**
             * Sets the value of the gaugeAxisJustification property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setGaugeAxisJustification(String value) {
                this.gaugeAxisJustification = value;
            }

            /**
             * Gets the value of the gaugeAxisInnerRadius property.
             * 
             * @return
             *     possible object is
             *     {@link Float }
             *     
             */
            public float getGaugeAxisInnerRadius() {
                if (gaugeAxisInnerRadius == null) {
                    return  75.0F;
                } else {
                    return gaugeAxisInnerRadius;
                }
            }

            /**
             * Sets the value of the gaugeAxisInnerRadius property.
             * 
             * @param value
             *     allowed object is
             *     {@link Float }
             *     
             */
            public void setGaugeAxisInnerRadius(Float value) {
                this.gaugeAxisInnerRadius = value;
            }

            /**
             * Gets the value of the gaugeAxisOuterRadius property.
             * 
             * @return
             *     possible object is
             *     {@link Float }
             *     
             */
            public float getGaugeAxisOuterRadius() {
                if (gaugeAxisOuterRadius == null) {
                    return  95.0F;
                } else {
                    return gaugeAxisOuterRadius;
                }
            }

            /**
             * Sets the value of the gaugeAxisOuterRadius property.
             * 
             * @param value
             *     allowed object is
             *     {@link Float }
             *     
             */
            public void setGaugeAxisOuterRadius(Float value) {
                this.gaugeAxisOuterRadius = value;
            }

            /**
             * Gets the value of the gaugeAxisTextOrientation property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getGaugeAxisTextOrientation() {
                if (gaugeAxisTextOrientation == null) {
                    return "upright";
                } else {
                    return gaugeAxisTextOrientation;
                }
            }

            /**
             * Sets the value of the gaugeAxisTextOrientation property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setGaugeAxisTextOrientation(String value) {
                this.gaugeAxisTextOrientation = value;
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}LineStyleAndColorAttributes2"/>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class V2GaugeAxisLine {

                @XmlAttribute(name = "lineColor")
                protected String lineColor;
                @XmlAttribute(name = "lineStyle")
                protected LineStyleType2 lineStyle;
                @XmlAttribute(name = "lineWeight")
                protected String lineWeight;

                /**
                 * Gets the value of the lineColor property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getLineColor() {
                    if (lineColor == null) {
                        return "black";
                    } else {
                        return lineColor;
                    }
                }

                /**
                 * Sets the value of the lineColor property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setLineColor(String value) {
                    this.lineColor = value;
                }

                /**
                 * Gets the value of the lineStyle property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link LineStyleType2 }
                 *     
                 */
                public LineStyleType2 getLineStyle() {
                    if (lineStyle == null) {
                        return LineStyleType2 .SOLID;
                    } else {
                        return lineStyle;
                    }
                }

                /**
                 * Sets the value of the lineStyle property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link LineStyleType2 }
                 *     
                 */
                public void setLineStyle(LineStyleType2 value) {
                    this.lineStyle = value;
                }

                /**
                 * Gets the value of the lineWeight property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getLineWeight() {
                    if (lineWeight == null) {
                        return "1px";
                    } else {
                        return lineWeight;
                    }
                }

                /**
                 * Sets the value of the lineWeight property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setLineWeight(String value) {
                    this.lineWeight = value;
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attribute name="gridlineLength" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="5pt" />
             *       &lt;attribute name="gridlineStyle" type="{http://developer.cognos.com/schemas/report/11.0/}LineStyleType2" default="solid" />
             *       &lt;attribute name="gridlineWeight" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="1px" />
             *       &lt;attribute name="gridlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class V2GaugeAxisMajorGridlines {

                @XmlAttribute(name = "gridlineLength")
                protected String gridlineLength;
                @XmlAttribute(name = "gridlineStyle")
                protected LineStyleType2 gridlineStyle;
                @XmlAttribute(name = "gridlineWeight")
                protected String gridlineWeight;
                @XmlAttribute(name = "gridlineColor")
                protected String gridlineColor;

                /**
                 * Gets the value of the gridlineLength property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getGridlineLength() {
                    if (gridlineLength == null) {
                        return "5pt";
                    } else {
                        return gridlineLength;
                    }
                }

                /**
                 * Sets the value of the gridlineLength property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setGridlineLength(String value) {
                    this.gridlineLength = value;
                }

                /**
                 * Gets the value of the gridlineStyle property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link LineStyleType2 }
                 *     
                 */
                public LineStyleType2 getGridlineStyle() {
                    if (gridlineStyle == null) {
                        return LineStyleType2 .SOLID;
                    } else {
                        return gridlineStyle;
                    }
                }

                /**
                 * Sets the value of the gridlineStyle property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link LineStyleType2 }
                 *     
                 */
                public void setGridlineStyle(LineStyleType2 value) {
                    this.gridlineStyle = value;
                }

                /**
                 * Gets the value of the gridlineWeight property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getGridlineWeight() {
                    if (gridlineWeight == null) {
                        return "1px";
                    } else {
                        return gridlineWeight;
                    }
                }

                /**
                 * Sets the value of the gridlineWeight property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setGridlineWeight(String value) {
                    this.gridlineWeight = value;
                }

                /**
                 * Gets the value of the gridlineColor property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getGridlineColor() {
                    if (gridlineColor == null) {
                        return "black";
                    } else {
                        return gridlineColor;
                    }
                }

                /**
                 * Sets the value of the gridlineColor property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setGridlineColor(String value) {
                    this.gridlineColor = value;
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attribute name="gridlineLength" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="5pt" />
             *       &lt;attribute name="gridlineStyle" type="{http://developer.cognos.com/schemas/report/11.0/}LineStyleType2" default="solid" />
             *       &lt;attribute name="gridlineWeight" type="{http://developer.cognos.com/schemas/report/11.0/}CSSLength" default="1px" />
             *       &lt;attribute name="gridlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class V2GaugeAxisMinorGridlines {

                @XmlAttribute(name = "gridlineLength")
                protected String gridlineLength;
                @XmlAttribute(name = "gridlineStyle")
                protected LineStyleType2 gridlineStyle;
                @XmlAttribute(name = "gridlineWeight")
                protected String gridlineWeight;
                @XmlAttribute(name = "gridlineColor")
                protected String gridlineColor;

                /**
                 * Gets the value of the gridlineLength property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getGridlineLength() {
                    if (gridlineLength == null) {
                        return "5pt";
                    } else {
                        return gridlineLength;
                    }
                }

                /**
                 * Sets the value of the gridlineLength property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setGridlineLength(String value) {
                    this.gridlineLength = value;
                }

                /**
                 * Gets the value of the gridlineStyle property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link LineStyleType2 }
                 *     
                 */
                public LineStyleType2 getGridlineStyle() {
                    if (gridlineStyle == null) {
                        return LineStyleType2 .SOLID;
                    } else {
                        return gridlineStyle;
                    }
                }

                /**
                 * Sets the value of the gridlineStyle property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link LineStyleType2 }
                 *     
                 */
                public void setGridlineStyle(LineStyleType2 value) {
                    this.gridlineStyle = value;
                }

                /**
                 * Gets the value of the gridlineWeight property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getGridlineWeight() {
                    if (gridlineWeight == null) {
                        return "1px";
                    } else {
                        return gridlineWeight;
                    }
                }

                /**
                 * Sets the value of the gridlineWeight property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setGridlineWeight(String value) {
                    this.gridlineWeight = value;
                }

                /**
                 * Gets the value of the gridlineColor property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getGridlineColor() {
                    if (gridlineColor == null) {
                        return "black";
                    } else {
                        return gridlineColor;
                    }
                }

                /**
                 * Sets the value of the gridlineColor property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setGridlineColor(String value) {
                    this.gridlineColor = value;
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;all>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_solidPalette" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}v2_conditionalSolidPalette" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
             *       &lt;/all>
             *       &lt;attribute name="needleHeight" default="40">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *             &lt;maxInclusive value="100"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needleHeadLength" default="90">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *             &lt;maxInclusive value="100"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needleHeadWidth" default="10">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *             &lt;maxInclusive value="100"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needlePivotWidth" default="10">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *             &lt;maxInclusive value="100"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needleTailWidth" default="10">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *             &lt;maxInclusive value="100"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needleTailLength" default="20">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *             &lt;maxInclusive value="100"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needleHeadStyle" default="round">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
             *             &lt;enumeration value="round"/>
             *             &lt;enumeration value="flat"/>
             *             &lt;enumeration value="triangular"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needleTailStyle" default="round">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
             *             &lt;enumeration value="round"/>
             *             &lt;enumeration value="flat"/>
             *             &lt;enumeration value="triangular"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needleBevelRadius" default="100">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *             &lt;maxInclusive value="100"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *       &lt;attribute name="needleBevelStyle" default="round">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
             *             &lt;enumeration value="round"/>
             *             &lt;enumeration value="flat"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {

            })
            public static class V2GaugeNeedle {

                @XmlElement(name = "v2_solidPalette")
                protected V2SolidPalette v2SolidPalette;
                @XmlElement(name = "v2_conditionalSolidPalette")
                protected V2ConditionalSolidPalette v2ConditionalSolidPalette;
                protected ChartNodes chartNodes;
                @XmlElement(name = "XMLAttributes")
                protected XMLAttributes xmlAttributes;
                @XmlAttribute(name = "needleHeight")
                protected Float needleHeight;
                @XmlAttribute(name = "needleHeadLength")
                protected Float needleHeadLength;
                @XmlAttribute(name = "needleHeadWidth")
                protected Float needleHeadWidth;
                @XmlAttribute(name = "needlePivotWidth")
                protected Float needlePivotWidth;
                @XmlAttribute(name = "needleTailWidth")
                protected Float needleTailWidth;
                @XmlAttribute(name = "needleTailLength")
                protected Float needleTailLength;
                @XmlAttribute(name = "needleHeadStyle")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                protected String needleHeadStyle;
                @XmlAttribute(name = "needleTailStyle")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                protected String needleTailStyle;
                @XmlAttribute(name = "needleBevelRadius")
                protected Float needleBevelRadius;
                @XmlAttribute(name = "needleBevelStyle")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                protected String needleBevelStyle;

                /**
                 * Gets the value of the v2SolidPalette property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link V2SolidPalette }
                 *     
                 */
                public V2SolidPalette getV2SolidPalette() {
                    return v2SolidPalette;
                }

                /**
                 * Sets the value of the v2SolidPalette property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link V2SolidPalette }
                 *     
                 */
                public void setV2SolidPalette(V2SolidPalette value) {
                    this.v2SolidPalette = value;
                }

                /**
                 * Gets the value of the v2ConditionalSolidPalette property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link V2ConditionalSolidPalette }
                 *     
                 */
                public V2ConditionalSolidPalette getV2ConditionalSolidPalette() {
                    return v2ConditionalSolidPalette;
                }

                /**
                 * Sets the value of the v2ConditionalSolidPalette property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link V2ConditionalSolidPalette }
                 *     
                 */
                public void setV2ConditionalSolidPalette(V2ConditionalSolidPalette value) {
                    this.v2ConditionalSolidPalette = value;
                }

                /**
                 * Gets the value of the chartNodes property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link ChartNodes }
                 *     
                 */
                public ChartNodes getChartNodes() {
                    return chartNodes;
                }

                /**
                 * Sets the value of the chartNodes property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link ChartNodes }
                 *     
                 */
                public void setChartNodes(ChartNodes value) {
                    this.chartNodes = value;
                }

                /**
                 * Gets the value of the xmlAttributes property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link XMLAttributes }
                 *     
                 */
                public XMLAttributes getXMLAttributes() {
                    return xmlAttributes;
                }

                /**
                 * Sets the value of the xmlAttributes property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link XMLAttributes }
                 *     
                 */
                public void setXMLAttributes(XMLAttributes value) {
                    this.xmlAttributes = value;
                }

                /**
                 * Gets the value of the needleHeight property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Float }
                 *     
                 */
                public float getNeedleHeight() {
                    if (needleHeight == null) {
                        return  40.0F;
                    } else {
                        return needleHeight;
                    }
                }

                /**
                 * Sets the value of the needleHeight property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Float }
                 *     
                 */
                public void setNeedleHeight(Float value) {
                    this.needleHeight = value;
                }

                /**
                 * Gets the value of the needleHeadLength property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Float }
                 *     
                 */
                public float getNeedleHeadLength() {
                    if (needleHeadLength == null) {
                        return  90.0F;
                    } else {
                        return needleHeadLength;
                    }
                }

                /**
                 * Sets the value of the needleHeadLength property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Float }
                 *     
                 */
                public void setNeedleHeadLength(Float value) {
                    this.needleHeadLength = value;
                }

                /**
                 * Gets the value of the needleHeadWidth property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Float }
                 *     
                 */
                public float getNeedleHeadWidth() {
                    if (needleHeadWidth == null) {
                        return  10.0F;
                    } else {
                        return needleHeadWidth;
                    }
                }

                /**
                 * Sets the value of the needleHeadWidth property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Float }
                 *     
                 */
                public void setNeedleHeadWidth(Float value) {
                    this.needleHeadWidth = value;
                }

                /**
                 * Gets the value of the needlePivotWidth property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Float }
                 *     
                 */
                public float getNeedlePivotWidth() {
                    if (needlePivotWidth == null) {
                        return  10.0F;
                    } else {
                        return needlePivotWidth;
                    }
                }

                /**
                 * Sets the value of the needlePivotWidth property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Float }
                 *     
                 */
                public void setNeedlePivotWidth(Float value) {
                    this.needlePivotWidth = value;
                }

                /**
                 * Gets the value of the needleTailWidth property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Float }
                 *     
                 */
                public float getNeedleTailWidth() {
                    if (needleTailWidth == null) {
                        return  10.0F;
                    } else {
                        return needleTailWidth;
                    }
                }

                /**
                 * Sets the value of the needleTailWidth property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Float }
                 *     
                 */
                public void setNeedleTailWidth(Float value) {
                    this.needleTailWidth = value;
                }

                /**
                 * Gets the value of the needleTailLength property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Float }
                 *     
                 */
                public float getNeedleTailLength() {
                    if (needleTailLength == null) {
                        return  20.0F;
                    } else {
                        return needleTailLength;
                    }
                }

                /**
                 * Sets the value of the needleTailLength property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Float }
                 *     
                 */
                public void setNeedleTailLength(Float value) {
                    this.needleTailLength = value;
                }

                /**
                 * Gets the value of the needleHeadStyle property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getNeedleHeadStyle() {
                    if (needleHeadStyle == null) {
                        return "round";
                    } else {
                        return needleHeadStyle;
                    }
                }

                /**
                 * Sets the value of the needleHeadStyle property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setNeedleHeadStyle(String value) {
                    this.needleHeadStyle = value;
                }

                /**
                 * Gets the value of the needleTailStyle property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getNeedleTailStyle() {
                    if (needleTailStyle == null) {
                        return "round";
                    } else {
                        return needleTailStyle;
                    }
                }

                /**
                 * Sets the value of the needleTailStyle property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setNeedleTailStyle(String value) {
                    this.needleTailStyle = value;
                }

                /**
                 * Gets the value of the needleBevelRadius property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Float }
                 *     
                 */
                public float getNeedleBevelRadius() {
                    if (needleBevelRadius == null) {
                        return  100.0F;
                    } else {
                        return needleBevelRadius;
                    }
                }

                /**
                 * Sets the value of the needleBevelRadius property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Float }
                 *     
                 */
                public void setNeedleBevelRadius(Float value) {
                    this.needleBevelRadius = value;
                }

                /**
                 * Gets the value of the needleBevelStyle property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getNeedleBevelStyle() {
                    if (needleBevelStyle == null) {
                        return "round";
                    } else {
                        return needleBevelStyle;
                    }
                }

                /**
                 * Sets the value of the needleBevelStyle property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setNeedleBevelStyle(String value) {
                    this.needleBevelStyle = value;
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;attribute name="pivotColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
     *       &lt;attribute name="pivotBevelStyle" default="round">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *             &lt;enumeration value="round"/>
     *             &lt;enumeration value="flat"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="pivotHeight" default="20">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *             &lt;minInclusive value="0"/>
     *             &lt;maxInclusive value="100"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="pivotRadius" default="10">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *             &lt;minInclusive value="0"/>
     *             &lt;maxInclusive value="100"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="pivotBevelRadius" default="10">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *             &lt;minInclusive value="0"/>
     *             &lt;maxInclusive value="100"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="pivotPaddingNonFullCircle" default="25">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *             &lt;minInclusive value="0"/>
     *             &lt;maxInclusive value="100"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class V2Pivot {

        @XmlAttribute(name = "pivotColor")
        protected String pivotColor;
        @XmlAttribute(name = "pivotBevelStyle")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String pivotBevelStyle;
        @XmlAttribute(name = "pivotHeight")
        protected Float pivotHeight;
        @XmlAttribute(name = "pivotRadius")
        protected Float pivotRadius;
        @XmlAttribute(name = "pivotBevelRadius")
        protected Float pivotBevelRadius;
        @XmlAttribute(name = "pivotPaddingNonFullCircle")
        protected Float pivotPaddingNonFullCircle;

        /**
         * Gets the value of the pivotColor property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPivotColor() {
            if (pivotColor == null) {
                return "black";
            } else {
                return pivotColor;
            }
        }

        /**
         * Sets the value of the pivotColor property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPivotColor(String value) {
            this.pivotColor = value;
        }

        /**
         * Gets the value of the pivotBevelStyle property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPivotBevelStyle() {
            if (pivotBevelStyle == null) {
                return "round";
            } else {
                return pivotBevelStyle;
            }
        }

        /**
         * Sets the value of the pivotBevelStyle property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPivotBevelStyle(String value) {
            this.pivotBevelStyle = value;
        }

        /**
         * Gets the value of the pivotHeight property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public float getPivotHeight() {
            if (pivotHeight == null) {
                return  20.0F;
            } else {
                return pivotHeight;
            }
        }

        /**
         * Sets the value of the pivotHeight property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setPivotHeight(Float value) {
            this.pivotHeight = value;
        }

        /**
         * Gets the value of the pivotRadius property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public float getPivotRadius() {
            if (pivotRadius == null) {
                return  10.0F;
            } else {
                return pivotRadius;
            }
        }

        /**
         * Sets the value of the pivotRadius property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setPivotRadius(Float value) {
            this.pivotRadius = value;
        }

        /**
         * Gets the value of the pivotBevelRadius property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public float getPivotBevelRadius() {
            if (pivotBevelRadius == null) {
                return  10.0F;
            } else {
                return pivotBevelRadius;
            }
        }

        /**
         * Sets the value of the pivotBevelRadius property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setPivotBevelRadius(Float value) {
            this.pivotBevelRadius = value;
        }

        /**
         * Gets the value of the pivotPaddingNonFullCircle property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public float getPivotPaddingNonFullCircle() {
            if (pivotPaddingNonFullCircle == null) {
                return  25.0F;
            } else {
                return pivotPaddingNonFullCircle;
            }
        }

        /**
         * Sets the value of the pivotPaddingNonFullCircle property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setPivotPaddingNonFullCircle(Float value) {
            this.pivotPaddingNonFullCircle = value;
        }

    }

}
