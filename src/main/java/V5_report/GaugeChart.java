//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.math.BigDecimal;
import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element name="gauges" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes"/>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="indicators" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes"/>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}notes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartSubTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartFooter" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartBody" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartPalette" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalRender" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalChartColors" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}legend" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportDrills" minOccurs="0"/>
 *         &lt;element name="gaugeLabels" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportDrills" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *                 &lt;/all>
 *                 &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CategoryTrunction"/>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}axisTitle" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}defaultChartMeasure" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}masterDetailLinks" minOccurs="0"/>
 *         &lt;element name="gaugeNumericalAxis" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}gridlines" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}minorGridlines" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *                   &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *                 &lt;/all>
 *                 &lt;attribute name="min" type="{http://www.w3.org/2001/XMLSchema}float" />
 *                 &lt;attribute name="max" type="{http://www.w3.org/2001/XMLSchema}float" />
 *                 &lt;attribute name="scaleInterval" type="{http://www.w3.org/2001/XMLSchema}float" />
 *                 &lt;attribute name="scale" default="linear">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                       &lt;enumeration value="linear"/>
 *                       &lt;enumeration value="log"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="sameRangeAllInstances" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *                 &lt;attribute name="includeZeroForAutoScale" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}gaugePalette" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}noDataHandler" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartSuppress" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}alternateText" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appOnSelectSetVariableValues" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appDrills" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appContainerSelect" minOccurs="0"/>
 *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appChartProperties" minOccurs="0"/>
 *       &lt;/all>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}StandardChartAttributes"/>
 *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}BorderProperties"/>
 *       &lt;attribute name="faceColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="white" />
 *       &lt;attribute name="faceTransparency" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="dialOutlineColor" type="{http://developer.cognos.com/schemas/report/11.0/}ColorType" default="black" />
 *       &lt;attribute name="dialOutlineTransparency" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "gaugeChart")
public class GaugeChart {

    protected GaugeChart.Gauges gauges;
    protected GaugeChart.Indicators indicators;
    protected Notes notes;
    protected ChartSubTitle chartSubTitle;
    protected ChartTitle chartTitle;
    protected ChartFooter chartFooter;
    protected ChartBody chartBody;
    protected ChartPalette chartPalette;
    protected Style style;
    protected ConditionalStyles conditionalStyles;
    protected ConditionalStyleRefs conditionalStyleRefs;
    protected ConditionalRender conditionalRender;
    @XmlElement(name = "XMLAttributes")
    protected XMLAttributes xmlAttributes;
    protected ConditionalChartColors conditionalChartColors;
    protected Legend legend;
    protected ReportDrills reportDrills;
    protected GaugeChart.GaugeLabels gaugeLabels;
    protected AxisTitle axisTitle;
    protected ChartMeasureType defaultChartMeasure;
    protected MasterDetailLinks masterDetailLinks;
    protected GaugeChart.GaugeNumericalAxis gaugeNumericalAxis;
    protected GaugePalette gaugePalette;
    protected NoDataHandler noDataHandler;
    protected ChartSuppress chartSuppress;
    protected LocalizedTextType alternateText;
    protected AppOnSelectSetVariableValues appOnSelectSetVariableValues;
    protected AppDrills appDrills;
    protected AppContainerSelect appContainerSelect;
    protected AppChartProperties appChartProperties;
    @XmlAttribute(name = "faceColor")
    protected String faceColor;
    @XmlAttribute(name = "faceTransparency")
    protected BigDecimal faceTransparency;
    @XmlAttribute(name = "dialOutlineColor")
    protected String dialOutlineColor;
    @XmlAttribute(name = "dialOutlineTransparency")
    protected BigDecimal dialOutlineTransparency;
    @XmlAttribute(name = "refQuery", required = true)
    protected String refQuery;
    @XmlAttribute(name = "showTooltips")
    protected Boolean showTooltips;
    @XmlAttribute(name = "maxHotspots")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger maxHotspots;
    @XmlAttribute(name = "displayForOrientation")
    protected String displayForOrientation;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "repeatEveryPage")
    protected Boolean repeatEveryPage;
    @XmlAttribute(name = "renderPageWhenEmpty")
    protected Boolean renderPageWhenEmpty;
    @XmlAttribute(name = "showBorders")
    protected Boolean showBorders;
    @XmlAttribute(name = "borderColor")
    protected String borderColor;
    @XmlAttribute(name = "borderTransparency")
    protected BigDecimal borderTransparency;

    /**
     * Gets the value of the gauges property.
     * 
     * @return
     *     possible object is
     *     {@link GaugeChart.Gauges }
     *     
     */
    public GaugeChart.Gauges getGauges() {
        return gauges;
    }

    /**
     * Sets the value of the gauges property.
     * 
     * @param value
     *     allowed object is
     *     {@link GaugeChart.Gauges }
     *     
     */
    public void setGauges(GaugeChart.Gauges value) {
        this.gauges = value;
    }

    /**
     * Gets the value of the indicators property.
     * 
     * @return
     *     possible object is
     *     {@link GaugeChart.Indicators }
     *     
     */
    public GaugeChart.Indicators getIndicators() {
        return indicators;
    }

    /**
     * Sets the value of the indicators property.
     * 
     * @param value
     *     allowed object is
     *     {@link GaugeChart.Indicators }
     *     
     */
    public void setIndicators(GaugeChart.Indicators value) {
        this.indicators = value;
    }

    /**
     * Gets the value of the notes property.
     * 
     * @return
     *     possible object is
     *     {@link Notes }
     *     
     */
    public Notes getNotes() {
        return notes;
    }

    /**
     * Sets the value of the notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Notes }
     *     
     */
    public void setNotes(Notes value) {
        this.notes = value;
    }

    /**
     * Gets the value of the chartSubTitle property.
     * 
     * @return
     *     possible object is
     *     {@link ChartSubTitle }
     *     
     */
    public ChartSubTitle getChartSubTitle() {
        return chartSubTitle;
    }

    /**
     * Sets the value of the chartSubTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartSubTitle }
     *     
     */
    public void setChartSubTitle(ChartSubTitle value) {
        this.chartSubTitle = value;
    }

    /**
     * Gets the value of the chartTitle property.
     * 
     * @return
     *     possible object is
     *     {@link ChartTitle }
     *     
     */
    public ChartTitle getChartTitle() {
        return chartTitle;
    }

    /**
     * Sets the value of the chartTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartTitle }
     *     
     */
    public void setChartTitle(ChartTitle value) {
        this.chartTitle = value;
    }

    /**
     * Gets the value of the chartFooter property.
     * 
     * @return
     *     possible object is
     *     {@link ChartFooter }
     *     
     */
    public ChartFooter getChartFooter() {
        return chartFooter;
    }

    /**
     * Sets the value of the chartFooter property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartFooter }
     *     
     */
    public void setChartFooter(ChartFooter value) {
        this.chartFooter = value;
    }

    /**
     * Gets the value of the chartBody property.
     * 
     * @return
     *     possible object is
     *     {@link ChartBody }
     *     
     */
    public ChartBody getChartBody() {
        return chartBody;
    }

    /**
     * Sets the value of the chartBody property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartBody }
     *     
     */
    public void setChartBody(ChartBody value) {
        this.chartBody = value;
    }

    /**
     * Gets the value of the chartPalette property.
     * 
     * @return
     *     possible object is
     *     {@link ChartPalette }
     *     
     */
    public ChartPalette getChartPalette() {
        return chartPalette;
    }

    /**
     * Sets the value of the chartPalette property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartPalette }
     *     
     */
    public void setChartPalette(ChartPalette value) {
        this.chartPalette = value;
    }

    /**
     * Gets the value of the style property.
     * 
     * @return
     *     possible object is
     *     {@link Style }
     *     
     */
    public Style getStyle() {
        return style;
    }

    /**
     * Sets the value of the style property.
     * 
     * @param value
     *     allowed object is
     *     {@link Style }
     *     
     */
    public void setStyle(Style value) {
        this.style = value;
    }

    /**
     * Gets the value of the conditionalStyles property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalStyles }
     *     
     */
    public ConditionalStyles getConditionalStyles() {
        return conditionalStyles;
    }

    /**
     * Sets the value of the conditionalStyles property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalStyles }
     *     
     */
    public void setConditionalStyles(ConditionalStyles value) {
        this.conditionalStyles = value;
    }

    /**
     * Gets the value of the conditionalStyleRefs property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public ConditionalStyleRefs getConditionalStyleRefs() {
        return conditionalStyleRefs;
    }

    /**
     * Sets the value of the conditionalStyleRefs property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalStyleRefs }
     *     
     */
    public void setConditionalStyleRefs(ConditionalStyleRefs value) {
        this.conditionalStyleRefs = value;
    }

    /**
     * Gets the value of the conditionalRender property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalRender }
     *     
     */
    public ConditionalRender getConditionalRender() {
        return conditionalRender;
    }

    /**
     * Sets the value of the conditionalRender property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalRender }
     *     
     */
    public void setConditionalRender(ConditionalRender value) {
        this.conditionalRender = value;
    }

    /**
     * Gets the value of the xmlAttributes property.
     * 
     * @return
     *     possible object is
     *     {@link XMLAttributes }
     *     
     */
    public XMLAttributes getXMLAttributes() {
        return xmlAttributes;
    }

    /**
     * Sets the value of the xmlAttributes property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLAttributes }
     *     
     */
    public void setXMLAttributes(XMLAttributes value) {
        this.xmlAttributes = value;
    }

    /**
     * Gets the value of the conditionalChartColors property.
     * 
     * @return
     *     possible object is
     *     {@link ConditionalChartColors }
     *     
     */
    public ConditionalChartColors getConditionalChartColors() {
        return conditionalChartColors;
    }

    /**
     * Sets the value of the conditionalChartColors property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionalChartColors }
     *     
     */
    public void setConditionalChartColors(ConditionalChartColors value) {
        this.conditionalChartColors = value;
    }

    /**
     * Gets the value of the legend property.
     * 
     * @return
     *     possible object is
     *     {@link Legend }
     *     
     */
    public Legend getLegend() {
        return legend;
    }

    /**
     * Sets the value of the legend property.
     * 
     * @param value
     *     allowed object is
     *     {@link Legend }
     *     
     */
    public void setLegend(Legend value) {
        this.legend = value;
    }

    /**
     * Gets the value of the reportDrills property.
     * 
     * @return
     *     possible object is
     *     {@link ReportDrills }
     *     
     */
    public ReportDrills getReportDrills() {
        return reportDrills;
    }

    /**
     * Sets the value of the reportDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReportDrills }
     *     
     */
    public void setReportDrills(ReportDrills value) {
        this.reportDrills = value;
    }

    /**
     * Gets the value of the gaugeLabels property.
     * 
     * @return
     *     possible object is
     *     {@link GaugeChart.GaugeLabels }
     *     
     */
    public GaugeChart.GaugeLabels getGaugeLabels() {
        return gaugeLabels;
    }

    /**
     * Sets the value of the gaugeLabels property.
     * 
     * @param value
     *     allowed object is
     *     {@link GaugeChart.GaugeLabels }
     *     
     */
    public void setGaugeLabels(GaugeChart.GaugeLabels value) {
        this.gaugeLabels = value;
    }

    /**
     * Gets the value of the axisTitle property.
     * 
     * @return
     *     possible object is
     *     {@link AxisTitle }
     *     
     */
    public AxisTitle getAxisTitle() {
        return axisTitle;
    }

    /**
     * Sets the value of the axisTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link AxisTitle }
     *     
     */
    public void setAxisTitle(AxisTitle value) {
        this.axisTitle = value;
    }

    /**
     * Gets the value of the defaultChartMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link ChartMeasureType }
     *     
     */
    public ChartMeasureType getDefaultChartMeasure() {
        return defaultChartMeasure;
    }

    /**
     * Sets the value of the defaultChartMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartMeasureType }
     *     
     */
    public void setDefaultChartMeasure(ChartMeasureType value) {
        this.defaultChartMeasure = value;
    }

    /**
     * Gets the value of the masterDetailLinks property.
     * 
     * @return
     *     possible object is
     *     {@link MasterDetailLinks }
     *     
     */
    public MasterDetailLinks getMasterDetailLinks() {
        return masterDetailLinks;
    }

    /**
     * Sets the value of the masterDetailLinks property.
     * 
     * @param value
     *     allowed object is
     *     {@link MasterDetailLinks }
     *     
     */
    public void setMasterDetailLinks(MasterDetailLinks value) {
        this.masterDetailLinks = value;
    }

    /**
     * Gets the value of the gaugeNumericalAxis property.
     * 
     * @return
     *     possible object is
     *     {@link GaugeChart.GaugeNumericalAxis }
     *     
     */
    public GaugeChart.GaugeNumericalAxis getGaugeNumericalAxis() {
        return gaugeNumericalAxis;
    }

    /**
     * Sets the value of the gaugeNumericalAxis property.
     * 
     * @param value
     *     allowed object is
     *     {@link GaugeChart.GaugeNumericalAxis }
     *     
     */
    public void setGaugeNumericalAxis(GaugeChart.GaugeNumericalAxis value) {
        this.gaugeNumericalAxis = value;
    }

    /**
     * Gets the value of the gaugePalette property.
     * 
     * @return
     *     possible object is
     *     {@link GaugePalette }
     *     
     */
    public GaugePalette getGaugePalette() {
        return gaugePalette;
    }

    /**
     * Sets the value of the gaugePalette property.
     * 
     * @param value
     *     allowed object is
     *     {@link GaugePalette }
     *     
     */
    public void setGaugePalette(GaugePalette value) {
        this.gaugePalette = value;
    }

    /**
     * Gets the value of the noDataHandler property.
     * 
     * @return
     *     possible object is
     *     {@link NoDataHandler }
     *     
     */
    public NoDataHandler getNoDataHandler() {
        return noDataHandler;
    }

    /**
     * Sets the value of the noDataHandler property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoDataHandler }
     *     
     */
    public void setNoDataHandler(NoDataHandler value) {
        this.noDataHandler = value;
    }

    /**
     * Gets the value of the chartSuppress property.
     * 
     * @return
     *     possible object is
     *     {@link ChartSuppress }
     *     
     */
    public ChartSuppress getChartSuppress() {
        return chartSuppress;
    }

    /**
     * Sets the value of the chartSuppress property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChartSuppress }
     *     
     */
    public void setChartSuppress(ChartSuppress value) {
        this.chartSuppress = value;
    }

    /**
     * Gets the value of the alternateText property.
     * 
     * @return
     *     possible object is
     *     {@link LocalizedTextType }
     *     
     */
    public LocalizedTextType getAlternateText() {
        return alternateText;
    }

    /**
     * Sets the value of the alternateText property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalizedTextType }
     *     
     */
    public void setAlternateText(LocalizedTextType value) {
        this.alternateText = value;
    }

    /**
     * Gets the value of the appOnSelectSetVariableValues property.
     * 
     * @return
     *     possible object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public AppOnSelectSetVariableValues getAppOnSelectSetVariableValues() {
        return appOnSelectSetVariableValues;
    }

    /**
     * Sets the value of the appOnSelectSetVariableValues property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppOnSelectSetVariableValues }
     *     
     */
    public void setAppOnSelectSetVariableValues(AppOnSelectSetVariableValues value) {
        this.appOnSelectSetVariableValues = value;
    }

    /**
     * Gets the value of the appDrills property.
     * 
     * @return
     *     possible object is
     *     {@link AppDrills }
     *     
     */
    public AppDrills getAppDrills() {
        return appDrills;
    }

    /**
     * Sets the value of the appDrills property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppDrills }
     *     
     */
    public void setAppDrills(AppDrills value) {
        this.appDrills = value;
    }

    /**
     * Gets the value of the appContainerSelect property.
     * 
     * @return
     *     possible object is
     *     {@link AppContainerSelect }
     *     
     */
    public AppContainerSelect getAppContainerSelect() {
        return appContainerSelect;
    }

    /**
     * Sets the value of the appContainerSelect property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppContainerSelect }
     *     
     */
    public void setAppContainerSelect(AppContainerSelect value) {
        this.appContainerSelect = value;
    }

    /**
     * Gets the value of the appChartProperties property.
     * 
     * @return
     *     possible object is
     *     {@link AppChartProperties }
     *     
     */
    public AppChartProperties getAppChartProperties() {
        return appChartProperties;
    }

    /**
     * Sets the value of the appChartProperties property.
     * 
     * @param value
     *     allowed object is
     *     {@link AppChartProperties }
     *     
     */
    public void setAppChartProperties(AppChartProperties value) {
        this.appChartProperties = value;
    }

    /**
     * Gets the value of the faceColor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFaceColor() {
        if (faceColor == null) {
            return "white";
        } else {
            return faceColor;
        }
    }

    /**
     * Sets the value of the faceColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFaceColor(String value) {
        this.faceColor = value;
    }

    /**
     * Gets the value of the faceTransparency property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getFaceTransparency() {
        if (faceTransparency == null) {
            return new BigDecimal("0");
        } else {
            return faceTransparency;
        }
    }

    /**
     * Sets the value of the faceTransparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFaceTransparency(BigDecimal value) {
        this.faceTransparency = value;
    }

    /**
     * Gets the value of the dialOutlineColor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDialOutlineColor() {
        if (dialOutlineColor == null) {
            return "black";
        } else {
            return dialOutlineColor;
        }
    }

    /**
     * Sets the value of the dialOutlineColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDialOutlineColor(String value) {
        this.dialOutlineColor = value;
    }

    /**
     * Gets the value of the dialOutlineTransparency property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getDialOutlineTransparency() {
        if (dialOutlineTransparency == null) {
            return new BigDecimal("0");
        } else {
            return dialOutlineTransparency;
        }
    }

    /**
     * Sets the value of the dialOutlineTransparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setDialOutlineTransparency(BigDecimal value) {
        this.dialOutlineTransparency = value;
    }

    /**
     * Gets the value of the refQuery property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefQuery() {
        return refQuery;
    }

    /**
     * Sets the value of the refQuery property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefQuery(String value) {
        this.refQuery = value;
    }

    /**
     * Gets the value of the showTooltips property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isShowTooltips() {
        if (showTooltips == null) {
            return false;
        } else {
            return showTooltips;
        }
    }

    /**
     * Sets the value of the showTooltips property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setShowTooltips(Boolean value) {
        this.showTooltips = value;
    }

    /**
     * Gets the value of the maxHotspots property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxHotspots() {
        return maxHotspots;
    }

    /**
     * Sets the value of the maxHotspots property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxHotspots(BigInteger value) {
        this.maxHotspots = value;
    }

    /**
     * Gets the value of the displayForOrientation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayForOrientation() {
        if (displayForOrientation == null) {
            return "both";
        } else {
            return displayForOrientation;
        }
    }

    /**
     * Sets the value of the displayForOrientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayForOrientation(String value) {
        this.displayForOrientation = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the repeatEveryPage property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRepeatEveryPage() {
        if (repeatEveryPage == null) {
            return false;
        } else {
            return repeatEveryPage;
        }
    }

    /**
     * Sets the value of the repeatEveryPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRepeatEveryPage(Boolean value) {
        this.repeatEveryPage = value;
    }

    /**
     * Gets the value of the renderPageWhenEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRenderPageWhenEmpty() {
        if (renderPageWhenEmpty == null) {
            return true;
        } else {
            return renderPageWhenEmpty;
        }
    }

    /**
     * Sets the value of the renderPageWhenEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRenderPageWhenEmpty(Boolean value) {
        this.renderPageWhenEmpty = value;
    }

    /**
     * Gets the value of the showBorders property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isShowBorders() {
        if (showBorders == null) {
            return false;
        } else {
            return showBorders;
        }
    }

    /**
     * Sets the value of the showBorders property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setShowBorders(Boolean value) {
        this.showBorders = value;
    }

    /**
     * Gets the value of the borderColor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBorderColor() {
        if (borderColor == null) {
            return "black";
        } else {
            return borderColor;
        }
    }

    /**
     * Sets the value of the borderColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBorderColor(String value) {
        this.borderColor = value;
    }

    /**
     * Gets the value of the borderTransparency property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getBorderTransparency() {
        if (borderTransparency == null) {
            return new BigDecimal("0");
        } else {
            return borderTransparency;
        }
    }

    /**
     * Sets the value of the borderTransparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setBorderTransparency(BigDecimal value) {
        this.borderTransparency = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}reportDrills" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CategoryTrunction"/>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class GaugeLabels {

        protected Style style;
        protected ConditionalStyles conditionalStyles;
        protected ConditionalStyleRefs conditionalStyleRefs;
        protected ReportDrills reportDrills;
        @XmlElement(name = "XMLAttributes")
        protected XMLAttributes xmlAttributes;
        @XmlAttribute(name = "categoryitemMaxCharacters")
        @XmlSchemaType(name = "positiveInteger")
        protected BigInteger categoryitemMaxCharacters;
        @XmlAttribute(name = "categoryitemEnableTruncation")
        protected Boolean categoryitemEnableTruncation;
        @XmlAttribute(name = "truncationText")
        protected String truncationText;

        /**
         * Gets the value of the style property.
         * 
         * @return
         *     possible object is
         *     {@link Style }
         *     
         */
        public Style getStyle() {
            return style;
        }

        /**
         * Sets the value of the style property.
         * 
         * @param value
         *     allowed object is
         *     {@link Style }
         *     
         */
        public void setStyle(Style value) {
            this.style = value;
        }

        /**
         * Gets the value of the conditionalStyles property.
         * 
         * @return
         *     possible object is
         *     {@link ConditionalStyles }
         *     
         */
        public ConditionalStyles getConditionalStyles() {
            return conditionalStyles;
        }

        /**
         * Sets the value of the conditionalStyles property.
         * 
         * @param value
         *     allowed object is
         *     {@link ConditionalStyles }
         *     
         */
        public void setConditionalStyles(ConditionalStyles value) {
            this.conditionalStyles = value;
        }

        /**
         * Gets the value of the conditionalStyleRefs property.
         * 
         * @return
         *     possible object is
         *     {@link ConditionalStyleRefs }
         *     
         */
        public ConditionalStyleRefs getConditionalStyleRefs() {
            return conditionalStyleRefs;
        }

        /**
         * Sets the value of the conditionalStyleRefs property.
         * 
         * @param value
         *     allowed object is
         *     {@link ConditionalStyleRefs }
         *     
         */
        public void setConditionalStyleRefs(ConditionalStyleRefs value) {
            this.conditionalStyleRefs = value;
        }

        /**
         * Gets the value of the reportDrills property.
         * 
         * @return
         *     possible object is
         *     {@link ReportDrills }
         *     
         */
        public ReportDrills getReportDrills() {
            return reportDrills;
        }

        /**
         * Sets the value of the reportDrills property.
         * 
         * @param value
         *     allowed object is
         *     {@link ReportDrills }
         *     
         */
        public void setReportDrills(ReportDrills value) {
            this.reportDrills = value;
        }

        /**
         * Gets the value of the xmlAttributes property.
         * 
         * @return
         *     possible object is
         *     {@link XMLAttributes }
         *     
         */
        public XMLAttributes getXMLAttributes() {
            return xmlAttributes;
        }

        /**
         * Sets the value of the xmlAttributes property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLAttributes }
         *     
         */
        public void setXMLAttributes(XMLAttributes value) {
            this.xmlAttributes = value;
        }

        /**
         * Gets the value of the categoryitemMaxCharacters property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getCategoryitemMaxCharacters() {
            if (categoryitemMaxCharacters == null) {
                return new BigInteger("48");
            } else {
                return categoryitemMaxCharacters;
            }
        }

        /**
         * Sets the value of the categoryitemMaxCharacters property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setCategoryitemMaxCharacters(BigInteger value) {
            this.categoryitemMaxCharacters = value;
        }

        /**
         * Gets the value of the categoryitemEnableTruncation property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isCategoryitemEnableTruncation() {
            if (categoryitemEnableTruncation == null) {
                return true;
            } else {
                return categoryitemEnableTruncation;
            }
        }

        /**
         * Sets the value of the categoryitemEnableTruncation property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setCategoryitemEnableTruncation(Boolean value) {
            this.categoryitemEnableTruncation = value;
        }

        /**
         * Gets the value of the truncationText property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getTruncationText() {
            if (truncationText == null) {
                return "...";
            } else {
                return truncationText;
            }
        }

        /**
         * Sets the value of the truncationText property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setTruncationText(String value) {
            this.truncationText = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}gridlines" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}minorGridlines" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
     *       &lt;/all>
     *       &lt;attribute name="min" type="{http://www.w3.org/2001/XMLSchema}float" />
     *       &lt;attribute name="max" type="{http://www.w3.org/2001/XMLSchema}float" />
     *       &lt;attribute name="scaleInterval" type="{http://www.w3.org/2001/XMLSchema}float" />
     *       &lt;attribute name="scale" default="linear">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *             &lt;enumeration value="linear"/>
     *             &lt;enumeration value="log"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="sameRangeAllInstances" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
     *       &lt;attribute name="includeZeroForAutoScale" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class GaugeNumericalAxis {

        protected Gridlines gridlines;
        protected MinorGridlines minorGridlines;
        protected Style style;
        protected ConditionalStyles conditionalStyles;
        protected ConditionalStyleRefs conditionalStyleRefs;
        @XmlAttribute(name = "min")
        protected Float min;
        @XmlAttribute(name = "max")
        protected Float max;
        @XmlAttribute(name = "scaleInterval")
        protected Float scaleInterval;
        @XmlAttribute(name = "scale")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String scale;
        @XmlAttribute(name = "sameRangeAllInstances")
        protected Boolean sameRangeAllInstances;
        @XmlAttribute(name = "includeZeroForAutoScale")
        protected Boolean includeZeroForAutoScale;

        /**
         * Gets the value of the gridlines property.
         * 
         * @return
         *     possible object is
         *     {@link Gridlines }
         *     
         */
        public Gridlines getGridlines() {
            return gridlines;
        }

        /**
         * Sets the value of the gridlines property.
         * 
         * @param value
         *     allowed object is
         *     {@link Gridlines }
         *     
         */
        public void setGridlines(Gridlines value) {
            this.gridlines = value;
        }

        /**
         * Gets the value of the minorGridlines property.
         * 
         * @return
         *     possible object is
         *     {@link MinorGridlines }
         *     
         */
        public MinorGridlines getMinorGridlines() {
            return minorGridlines;
        }

        /**
         * Sets the value of the minorGridlines property.
         * 
         * @param value
         *     allowed object is
         *     {@link MinorGridlines }
         *     
         */
        public void setMinorGridlines(MinorGridlines value) {
            this.minorGridlines = value;
        }

        /**
         * Gets the value of the style property.
         * 
         * @return
         *     possible object is
         *     {@link Style }
         *     
         */
        public Style getStyle() {
            return style;
        }

        /**
         * Sets the value of the style property.
         * 
         * @param value
         *     allowed object is
         *     {@link Style }
         *     
         */
        public void setStyle(Style value) {
            this.style = value;
        }

        /**
         * Gets the value of the conditionalStyles property.
         * 
         * @return
         *     possible object is
         *     {@link ConditionalStyles }
         *     
         */
        public ConditionalStyles getConditionalStyles() {
            return conditionalStyles;
        }

        /**
         * Sets the value of the conditionalStyles property.
         * 
         * @param value
         *     allowed object is
         *     {@link ConditionalStyles }
         *     
         */
        public void setConditionalStyles(ConditionalStyles value) {
            this.conditionalStyles = value;
        }

        /**
         * Gets the value of the conditionalStyleRefs property.
         * 
         * @return
         *     possible object is
         *     {@link ConditionalStyleRefs }
         *     
         */
        public ConditionalStyleRefs getConditionalStyleRefs() {
            return conditionalStyleRefs;
        }

        /**
         * Sets the value of the conditionalStyleRefs property.
         * 
         * @param value
         *     allowed object is
         *     {@link ConditionalStyleRefs }
         *     
         */
        public void setConditionalStyleRefs(ConditionalStyleRefs value) {
            this.conditionalStyleRefs = value;
        }

        /**
         * Gets the value of the min property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public Float getMin() {
            return min;
        }

        /**
         * Sets the value of the min property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setMin(Float value) {
            this.min = value;
        }

        /**
         * Gets the value of the max property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public Float getMax() {
            return max;
        }

        /**
         * Sets the value of the max property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setMax(Float value) {
            this.max = value;
        }

        /**
         * Gets the value of the scaleInterval property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public Float getScaleInterval() {
            return scaleInterval;
        }

        /**
         * Sets the value of the scaleInterval property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setScaleInterval(Float value) {
            this.scaleInterval = value;
        }

        /**
         * Gets the value of the scale property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getScale() {
            if (scale == null) {
                return "linear";
            } else {
                return scale;
            }
        }

        /**
         * Sets the value of the scale property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setScale(String value) {
            this.scale = value;
        }

        /**
         * Gets the value of the sameRangeAllInstances property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isSameRangeAllInstances() {
            if (sameRangeAllInstances == null) {
                return true;
            } else {
                return sameRangeAllInstances;
            }
        }

        /**
         * Sets the value of the sameRangeAllInstances property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setSameRangeAllInstances(Boolean value) {
            this.sameRangeAllInstances = value;
        }

        /**
         * Gets the value of the includeZeroForAutoScale property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isIncludeZeroForAutoScale() {
            if (includeZeroForAutoScale == null) {
                return true;
            } else {
                return includeZeroForAutoScale;
            }
        }

        /**
         * Sets the value of the includeZeroForAutoScale property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setIncludeZeroForAutoScale(Boolean value) {
            this.includeZeroForAutoScale = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes"/>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class Gauges {

        @XmlElement(required = true)
        protected ChartNodes chartNodes;

        /**
         * Gets the value of the chartNodes property.
         * 
         * @return
         *     possible object is
         *     {@link ChartNodes }
         *     
         */
        public ChartNodes getChartNodes() {
            return chartNodes;
        }

        /**
         * Sets the value of the chartNodes property.
         * 
         * @param value
         *     allowed object is
         *     {@link ChartNodes }
         *     
         */
        public void setChartNodes(ChartNodes value) {
            this.chartNodes = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}chartNodes"/>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class Indicators {

        @XmlElement(required = true)
        protected ChartNodes chartNodes;

        /**
         * Gets the value of the chartNodes property.
         * 
         * @return
         *     possible object is
         *     {@link ChartNodes }
         *     
         */
        public ChartNodes getChartNodes() {
            return chartNodes;
        }

        /**
         * Sets the value of the chartNodes property.
         * 
         * @param value
         *     allowed object is
         *     {@link ChartNodes }
         *     
         */
        public void setChartNodes(ChartNodes value) {
            this.chartNodes = value;
        }

    }

}
