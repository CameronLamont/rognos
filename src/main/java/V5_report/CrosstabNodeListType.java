//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.28 at 01:59:17 PM AEDT 
//


package V5_report;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CrosstabNodeListType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CrosstabNodeListType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="crosstabNode" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element name="crosstabNodeMembers">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;choice maxOccurs="unbounded">
 *                               &lt;element name="crosstabNodeMember">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;all>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}factCell" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}sortList" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabNodeMemberProperties" minOccurs="0"/>
 *                                         &lt;element name="indentation" minOccurs="0">
 *                                           &lt;complexType>
 *                                             &lt;complexContent>
 *                                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                                 &lt;attribute name="type" use="required">
 *                                                   &lt;simpleType>
 *                                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                                       &lt;enumeration value="level"/>
 *                                                       &lt;enumeration value="relative"/>
 *                                                     &lt;/restriction>
 *                                                   &lt;/simpleType>
 *                                                 &lt;/attribute>
 *                                                 &lt;attribute name="outdent" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *                                                 &lt;attribute name="indentationLength" use="required">
 *                                                   &lt;simpleType>
 *                                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *                                                       &lt;minInclusive value="0"/>
 *                                                     &lt;/restriction>
 *                                                   &lt;/simpleType>
 *                                                 &lt;/attribute>
 *                                                 &lt;attribute name="indentationUnits" default="px">
 *                                                   &lt;simpleType>
 *                                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                                       &lt;enumeration value="px"/>
 *                                                       &lt;enumeration value="in"/>
 *                                                       &lt;enumeration value="cm"/>
 *                                                       &lt;enumeration value="mm"/>
 *                                                       &lt;enumeration value="pt"/>
 *                                                       &lt;enumeration value="pc"/>
 *                                                       &lt;enumeration value="em"/>
 *                                                       &lt;enumeration value="ex"/>
 *                                                     &lt;/restriction>
 *                                                   &lt;/simpleType>
 *                                                 &lt;/attribute>
 *                                                 &lt;attribute name="startLevel" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
 *                                               &lt;/restriction>
 *                                             &lt;/complexContent>
 *                                           &lt;/complexType>
 *                                         &lt;/element>
 *                                       &lt;/all>
 *                                       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}KeepWithNextPrevAttributes"/>
 *                                       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
 *                                       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}SolveOrderAttributes"/>
 *                                       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CrosstabEdgeLocation"/>
 *                                       &lt;attribute name="refDataItem" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="crosstabSpacer">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;all>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}factCell" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
 *                                         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabNodeMemberProperties" minOccurs="0"/>
 *                                       &lt;/all>
 *                                       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
 *                                       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CrosstabEdgeLocation"/>
 *                                       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}KeepWithNextPrevAttributes"/>
 *                                       &lt;attribute name="renderFactCells" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabSummary"/>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="crosstabNestedNodes" type="{http://developer.cognos.com/schemas/report/11.0/}CrosstabNodeListType" minOccurs="0"/>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CrosstabNodeListType", propOrder = {
    "crosstabNode"
})
public class CrosstabNodeListType {

    @XmlElement(required = true)
    protected List<CrosstabNodeListType.CrosstabNode> crosstabNode;

    /**
     * Gets the value of the crosstabNode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the crosstabNode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCrosstabNode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CrosstabNodeListType.CrosstabNode }
     * 
     * 
     */
    public List<CrosstabNodeListType.CrosstabNode> getCrosstabNode() {
        if (crosstabNode == null) {
            crosstabNode = new ArrayList<CrosstabNodeListType.CrosstabNode>();
        }
        return this.crosstabNode;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element name="crosstabNodeMembers">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;choice maxOccurs="unbounded">
     *                     &lt;element name="crosstabNodeMember">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;all>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}factCell" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}sortList" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabNodeMemberProperties" minOccurs="0"/>
     *                               &lt;element name="indentation" minOccurs="0">
     *                                 &lt;complexType>
     *                                   &lt;complexContent>
     *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                                       &lt;attribute name="type" use="required">
     *                                         &lt;simpleType>
     *                                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                                             &lt;enumeration value="level"/>
     *                                             &lt;enumeration value="relative"/>
     *                                           &lt;/restriction>
     *                                         &lt;/simpleType>
     *                                       &lt;/attribute>
     *                                       &lt;attribute name="outdent" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
     *                                       &lt;attribute name="indentationLength" use="required">
     *                                         &lt;simpleType>
     *                                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
     *                                             &lt;minInclusive value="0"/>
     *                                           &lt;/restriction>
     *                                         &lt;/simpleType>
     *                                       &lt;/attribute>
     *                                       &lt;attribute name="indentationUnits" default="px">
     *                                         &lt;simpleType>
     *                                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                                             &lt;enumeration value="px"/>
     *                                             &lt;enumeration value="in"/>
     *                                             &lt;enumeration value="cm"/>
     *                                             &lt;enumeration value="mm"/>
     *                                             &lt;enumeration value="pt"/>
     *                                             &lt;enumeration value="pc"/>
     *                                             &lt;enumeration value="em"/>
     *                                             &lt;enumeration value="ex"/>
     *                                           &lt;/restriction>
     *                                         &lt;/simpleType>
     *                                       &lt;/attribute>
     *                                       &lt;attribute name="startLevel" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
     *                                     &lt;/restriction>
     *                                   &lt;/complexContent>
     *                                 &lt;/complexType>
     *                               &lt;/element>
     *                             &lt;/all>
     *                             &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}KeepWithNextPrevAttributes"/>
     *                             &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
     *                             &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}SolveOrderAttributes"/>
     *                             &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CrosstabEdgeLocation"/>
     *                             &lt;attribute name="refDataItem" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                     &lt;element name="crosstabSpacer">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;all>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}factCell" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
     *                               &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabNodeMemberProperties" minOccurs="0"/>
     *                             &lt;/all>
     *                             &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
     *                             &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CrosstabEdgeLocation"/>
     *                             &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}KeepWithNextPrevAttributes"/>
     *                             &lt;attribute name="renderFactCells" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabSummary"/>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="crosstabNestedNodes" type="{http://developer.cognos.com/schemas/report/11.0/}CrosstabNodeListType" minOccurs="0"/>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class CrosstabNode {

        @XmlElement(required = true)
        protected CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers crosstabNodeMembers;
        protected CrosstabNodeListType crosstabNestedNodes;

        /**
         * Gets the value of the crosstabNodeMembers property.
         * 
         * @return
         *     possible object is
         *     {@link CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers }
         *     
         */
        public CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers getCrosstabNodeMembers() {
            return crosstabNodeMembers;
        }

        /**
         * Sets the value of the crosstabNodeMembers property.
         * 
         * @param value
         *     allowed object is
         *     {@link CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers }
         *     
         */
        public void setCrosstabNodeMembers(CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers value) {
            this.crosstabNodeMembers = value;
        }

        /**
         * Gets the value of the crosstabNestedNodes property.
         * 
         * @return
         *     possible object is
         *     {@link CrosstabNodeListType }
         *     
         */
        public CrosstabNodeListType getCrosstabNestedNodes() {
            return crosstabNestedNodes;
        }

        /**
         * Sets the value of the crosstabNestedNodes property.
         * 
         * @param value
         *     allowed object is
         *     {@link CrosstabNodeListType }
         *     
         */
        public void setCrosstabNestedNodes(CrosstabNodeListType value) {
            this.crosstabNestedNodes = value;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;choice maxOccurs="unbounded">
         *           &lt;element name="crosstabNodeMember">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;all>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}factCell" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}sortList" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabNodeMemberProperties" minOccurs="0"/>
         *                     &lt;element name="indentation" minOccurs="0">
         *                       &lt;complexType>
         *                         &lt;complexContent>
         *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                             &lt;attribute name="type" use="required">
         *                               &lt;simpleType>
         *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *                                   &lt;enumeration value="level"/>
         *                                   &lt;enumeration value="relative"/>
         *                                 &lt;/restriction>
         *                               &lt;/simpleType>
         *                             &lt;/attribute>
         *                             &lt;attribute name="outdent" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
         *                             &lt;attribute name="indentationLength" use="required">
         *                               &lt;simpleType>
         *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
         *                                   &lt;minInclusive value="0"/>
         *                                 &lt;/restriction>
         *                               &lt;/simpleType>
         *                             &lt;/attribute>
         *                             &lt;attribute name="indentationUnits" default="px">
         *                               &lt;simpleType>
         *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *                                   &lt;enumeration value="px"/>
         *                                   &lt;enumeration value="in"/>
         *                                   &lt;enumeration value="cm"/>
         *                                   &lt;enumeration value="mm"/>
         *                                   &lt;enumeration value="pt"/>
         *                                   &lt;enumeration value="pc"/>
         *                                   &lt;enumeration value="em"/>
         *                                   &lt;enumeration value="ex"/>
         *                                 &lt;/restriction>
         *                               &lt;/simpleType>
         *                             &lt;/attribute>
         *                             &lt;attribute name="startLevel" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
         *                           &lt;/restriction>
         *                         &lt;/complexContent>
         *                       &lt;/complexType>
         *                     &lt;/element>
         *                   &lt;/all>
         *                   &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}KeepWithNextPrevAttributes"/>
         *                   &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
         *                   &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}SolveOrderAttributes"/>
         *                   &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CrosstabEdgeLocation"/>
         *                   &lt;attribute name="refDataItem" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *           &lt;element name="crosstabSpacer">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;all>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}factCell" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
         *                     &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabNodeMemberProperties" minOccurs="0"/>
         *                   &lt;/all>
         *                   &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
         *                   &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CrosstabEdgeLocation"/>
         *                   &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}KeepWithNextPrevAttributes"/>
         *                   &lt;attribute name="renderFactCells" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *           &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabSummary"/>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "crosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary"
        })
        public static class CrosstabNodeMembers {

            @XmlElements({
                @XmlElement(name = "crosstabNodeMember", type = CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabNodeMember.class),
                @XmlElement(name = "crosstabSpacer", type = CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabSpacer.class),
                @XmlElement(name = "appCrosstabSummary", type = AppCrosstabSummary.class)
            })
            protected List<Object> crosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary;

            /**
             * Gets the value of the crosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the crosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getCrosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabNodeMember }
             * {@link CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabSpacer }
             * {@link AppCrosstabSummary }
             * 
             * 
             */
            public List<Object> getCrosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary() {
                if (crosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary == null) {
                    crosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary = new ArrayList<Object>();
                }
                return this.crosstabNodeMemberOrCrosstabSpacerOrAppCrosstabSummary;
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;all>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}factCell" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}propertyList" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}sortList" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabNodeMemberProperties" minOccurs="0"/>
             *         &lt;element name="indentation" minOccurs="0">
             *           &lt;complexType>
             *             &lt;complexContent>
             *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *                 &lt;attribute name="type" use="required">
             *                   &lt;simpleType>
             *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
             *                       &lt;enumeration value="level"/>
             *                       &lt;enumeration value="relative"/>
             *                     &lt;/restriction>
             *                   &lt;/simpleType>
             *                 &lt;/attribute>
             *                 &lt;attribute name="outdent" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
             *                 &lt;attribute name="indentationLength" use="required">
             *                   &lt;simpleType>
             *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
             *                       &lt;minInclusive value="0"/>
             *                     &lt;/restriction>
             *                   &lt;/simpleType>
             *                 &lt;/attribute>
             *                 &lt;attribute name="indentationUnits" default="px">
             *                   &lt;simpleType>
             *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
             *                       &lt;enumeration value="px"/>
             *                       &lt;enumeration value="in"/>
             *                       &lt;enumeration value="cm"/>
             *                       &lt;enumeration value="mm"/>
             *                       &lt;enumeration value="pt"/>
             *                       &lt;enumeration value="pc"/>
             *                       &lt;enumeration value="em"/>
             *                       &lt;enumeration value="ex"/>
             *                     &lt;/restriction>
             *                   &lt;/simpleType>
             *                 &lt;/attribute>
             *                 &lt;attribute name="startLevel" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
             *               &lt;/restriction>
             *             &lt;/complexContent>
             *           &lt;/complexType>
             *         &lt;/element>
             *       &lt;/all>
             *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}KeepWithNextPrevAttributes"/>
             *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
             *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}SolveOrderAttributes"/>
             *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CrosstabEdgeLocation"/>
             *       &lt;attribute name="refDataItem" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {

            })
            public static class CrosstabNodeMember {

                @XmlElement(required = true)
                protected Contents contents;
                protected Style style;
                protected ConditionalStyles conditionalStyles;
                protected ConditionalStyleRefs conditionalStyleRefs;
                protected FactCell factCell;
                protected PropertyList propertyList;
                protected SortList sortList;
                @XmlElement(name = "XMLAttributes")
                protected XMLAttributes xmlAttributes;
                protected AppCrosstabNodeMemberProperties appCrosstabNodeMemberProperties;
                protected CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabNodeMember.Indentation indentation;
                @XmlAttribute(name = "refDataItem", required = true)
                protected String refDataItem;
                @XmlAttribute(name = "keepWithNext")
                @XmlSchemaType(name = "positiveInteger")
                protected BigInteger keepWithNext;
                @XmlAttribute(name = "keepWithPrevious")
                @XmlSchemaType(name = "positiveInteger")
                protected BigInteger keepWithPrevious;
                @XmlAttribute(name = "repeatEveryPage")
                protected Boolean repeatEveryPage;
                @XmlAttribute(name = "solveOrder")
                protected BigInteger solveOrder;
                @XmlAttribute(name = "edgeLocation")
                protected String edgeLocation;

                /**
                 * Gets the value of the contents property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Contents }
                 *     
                 */
                public Contents getContents() {
                    return contents;
                }

                /**
                 * Sets the value of the contents property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Contents }
                 *     
                 */
                public void setContents(Contents value) {
                    this.contents = value;
                }

                /**
                 * Gets the value of the style property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Style }
                 *     
                 */
                public Style getStyle() {
                    return style;
                }

                /**
                 * Sets the value of the style property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Style }
                 *     
                 */
                public void setStyle(Style value) {
                    this.style = value;
                }

                /**
                 * Gets the value of the conditionalStyles property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link ConditionalStyles }
                 *     
                 */
                public ConditionalStyles getConditionalStyles() {
                    return conditionalStyles;
                }

                /**
                 * Sets the value of the conditionalStyles property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link ConditionalStyles }
                 *     
                 */
                public void setConditionalStyles(ConditionalStyles value) {
                    this.conditionalStyles = value;
                }

                /**
                 * Gets the value of the conditionalStyleRefs property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link ConditionalStyleRefs }
                 *     
                 */
                public ConditionalStyleRefs getConditionalStyleRefs() {
                    return conditionalStyleRefs;
                }

                /**
                 * Sets the value of the conditionalStyleRefs property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link ConditionalStyleRefs }
                 *     
                 */
                public void setConditionalStyleRefs(ConditionalStyleRefs value) {
                    this.conditionalStyleRefs = value;
                }

                /**
                 * Gets the value of the factCell property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link FactCell }
                 *     
                 */
                public FactCell getFactCell() {
                    return factCell;
                }

                /**
                 * Sets the value of the factCell property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link FactCell }
                 *     
                 */
                public void setFactCell(FactCell value) {
                    this.factCell = value;
                }

                /**
                 * Gets the value of the propertyList property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link PropertyList }
                 *     
                 */
                public PropertyList getPropertyList() {
                    return propertyList;
                }

                /**
                 * Sets the value of the propertyList property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link PropertyList }
                 *     
                 */
                public void setPropertyList(PropertyList value) {
                    this.propertyList = value;
                }

                /**
                 * Gets the value of the sortList property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link SortList }
                 *     
                 */
                public SortList getSortList() {
                    return sortList;
                }

                /**
                 * Sets the value of the sortList property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link SortList }
                 *     
                 */
                public void setSortList(SortList value) {
                    this.sortList = value;
                }

                /**
                 * Gets the value of the xmlAttributes property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link XMLAttributes }
                 *     
                 */
                public XMLAttributes getXMLAttributes() {
                    return xmlAttributes;
                }

                /**
                 * Sets the value of the xmlAttributes property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link XMLAttributes }
                 *     
                 */
                public void setXMLAttributes(XMLAttributes value) {
                    this.xmlAttributes = value;
                }

                /**
                 * Gets the value of the appCrosstabNodeMemberProperties property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link AppCrosstabNodeMemberProperties }
                 *     
                 */
                public AppCrosstabNodeMemberProperties getAppCrosstabNodeMemberProperties() {
                    return appCrosstabNodeMemberProperties;
                }

                /**
                 * Sets the value of the appCrosstabNodeMemberProperties property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link AppCrosstabNodeMemberProperties }
                 *     
                 */
                public void setAppCrosstabNodeMemberProperties(AppCrosstabNodeMemberProperties value) {
                    this.appCrosstabNodeMemberProperties = value;
                }

                /**
                 * Gets the value of the indentation property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabNodeMember.Indentation }
                 *     
                 */
                public CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabNodeMember.Indentation getIndentation() {
                    return indentation;
                }

                /**
                 * Sets the value of the indentation property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabNodeMember.Indentation }
                 *     
                 */
                public void setIndentation(CrosstabNodeListType.CrosstabNode.CrosstabNodeMembers.CrosstabNodeMember.Indentation value) {
                    this.indentation = value;
                }

                /**
                 * Gets the value of the refDataItem property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getRefDataItem() {
                    return refDataItem;
                }

                /**
                 * Sets the value of the refDataItem property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setRefDataItem(String value) {
                    this.refDataItem = value;
                }

                /**
                 * Gets the value of the keepWithNext property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                public BigInteger getKeepWithNext() {
                    return keepWithNext;
                }

                /**
                 * Sets the value of the keepWithNext property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                public void setKeepWithNext(BigInteger value) {
                    this.keepWithNext = value;
                }

                /**
                 * Gets the value of the keepWithPrevious property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                public BigInteger getKeepWithPrevious() {
                    return keepWithPrevious;
                }

                /**
                 * Sets the value of the keepWithPrevious property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                public void setKeepWithPrevious(BigInteger value) {
                    this.keepWithPrevious = value;
                }

                /**
                 * Gets the value of the repeatEveryPage property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Boolean }
                 *     
                 */
                public boolean isRepeatEveryPage() {
                    if (repeatEveryPage == null) {
                        return false;
                    } else {
                        return repeatEveryPage;
                    }
                }

                /**
                 * Sets the value of the repeatEveryPage property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Boolean }
                 *     
                 */
                public void setRepeatEveryPage(Boolean value) {
                    this.repeatEveryPage = value;
                }

                /**
                 * Gets the value of the solveOrder property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                public BigInteger getSolveOrder() {
                    return solveOrder;
                }

                /**
                 * Sets the value of the solveOrder property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                public void setSolveOrder(BigInteger value) {
                    this.solveOrder = value;
                }

                /**
                 * Gets the value of the edgeLocation property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getEdgeLocation() {
                    return edgeLocation;
                }

                /**
                 * Sets the value of the edgeLocation property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setEdgeLocation(String value) {
                    this.edgeLocation = value;
                }


                /**
                 * <p>Java class for anonymous complex type.
                 * 
                 * <p>The following schema fragment specifies the expected content contained within this class.
                 * 
                 * <pre>
                 * &lt;complexType>
                 *   &lt;complexContent>
                 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
                 *       &lt;attribute name="type" use="required">
                 *         &lt;simpleType>
                 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
                 *             &lt;enumeration value="level"/>
                 *             &lt;enumeration value="relative"/>
                 *           &lt;/restriction>
                 *         &lt;/simpleType>
                 *       &lt;/attribute>
                 *       &lt;attribute name="outdent" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
                 *       &lt;attribute name="indentationLength" use="required">
                 *         &lt;simpleType>
                 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
                 *             &lt;minInclusive value="0"/>
                 *           &lt;/restriction>
                 *         &lt;/simpleType>
                 *       &lt;/attribute>
                 *       &lt;attribute name="indentationUnits" default="px">
                 *         &lt;simpleType>
                 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
                 *             &lt;enumeration value="px"/>
                 *             &lt;enumeration value="in"/>
                 *             &lt;enumeration value="cm"/>
                 *             &lt;enumeration value="mm"/>
                 *             &lt;enumeration value="pt"/>
                 *             &lt;enumeration value="pc"/>
                 *             &lt;enumeration value="em"/>
                 *             &lt;enumeration value="ex"/>
                 *           &lt;/restriction>
                 *         &lt;/simpleType>
                 *       &lt;/attribute>
                 *       &lt;attribute name="startLevel" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
                 *     &lt;/restriction>
                 *   &lt;/complexContent>
                 * &lt;/complexType>
                 * </pre>
                 * 
                 * 
                 */
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")
                public static class Indentation {

                    @XmlAttribute(name = "type", required = true)
                    protected String type;
                    @XmlAttribute(name = "outdent")
                    protected Boolean outdent;
                    @XmlAttribute(name = "indentationLength", required = true)
                    protected BigDecimal indentationLength;
                    @XmlAttribute(name = "indentationUnits")
                    protected String indentationUnits;
                    @XmlAttribute(name = "startLevel")
                    @XmlSchemaType(name = "positiveInteger")
                    protected BigInteger startLevel;

                    /**
                     * Gets the value of the type property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link String }
                     *     
                     */
                    public String getType() {
                        return type;
                    }

                    /**
                     * Sets the value of the type property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link String }
                     *     
                     */
                    public void setType(String value) {
                        this.type = value;
                    }

                    /**
                     * Gets the value of the outdent property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link Boolean }
                     *     
                     */
                    public boolean isOutdent() {
                        if (outdent == null) {
                            return false;
                        } else {
                            return outdent;
                        }
                    }

                    /**
                     * Sets the value of the outdent property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link Boolean }
                     *     
                     */
                    public void setOutdent(Boolean value) {
                        this.outdent = value;
                    }

                    /**
                     * Gets the value of the indentationLength property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link BigDecimal }
                     *     
                     */
                    public BigDecimal getIndentationLength() {
                        return indentationLength;
                    }

                    /**
                     * Sets the value of the indentationLength property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link BigDecimal }
                     *     
                     */
                    public void setIndentationLength(BigDecimal value) {
                        this.indentationLength = value;
                    }

                    /**
                     * Gets the value of the indentationUnits property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link String }
                     *     
                     */
                    public String getIndentationUnits() {
                        if (indentationUnits == null) {
                            return "px";
                        } else {
                            return indentationUnits;
                        }
                    }

                    /**
                     * Sets the value of the indentationUnits property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link String }
                     *     
                     */
                    public void setIndentationUnits(String value) {
                        this.indentationUnits = value;
                    }

                    /**
                     * Gets the value of the startLevel property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link BigInteger }
                     *     
                     */
                    public BigInteger getStartLevel() {
                        return startLevel;
                    }

                    /**
                     * Sets the value of the startLevel property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link BigInteger }
                     *     
                     */
                    public void setStartLevel(BigInteger value) {
                        this.startLevel = value;
                    }

                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;all>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}contents"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}style" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyles" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}conditionalStyleRefs" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}factCell" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}XMLAttributes" minOccurs="0"/>
             *         &lt;element ref="{http://developer.cognos.com/schemas/report/11.0/}appCrosstabNodeMemberProperties" minOccurs="0"/>
             *       &lt;/all>
             *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}RepeatEveryPageAttributes"/>
             *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}CrosstabEdgeLocation"/>
             *       &lt;attGroup ref="{http://developer.cognos.com/schemas/report/11.0/}KeepWithNextPrevAttributes"/>
             *       &lt;attribute name="renderFactCells" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {

            })
            public static class CrosstabSpacer {

                @XmlElement(required = true)
                protected Contents contents;
                protected Style style;
                protected ConditionalStyles conditionalStyles;
                protected ConditionalStyleRefs conditionalStyleRefs;
                protected FactCell factCell;
                @XmlElement(name = "XMLAttributes")
                protected XMLAttributes xmlAttributes;
                protected AppCrosstabNodeMemberProperties appCrosstabNodeMemberProperties;
                @XmlAttribute(name = "renderFactCells")
                protected Boolean renderFactCells;
                @XmlAttribute(name = "repeatEveryPage")
                protected Boolean repeatEveryPage;
                @XmlAttribute(name = "edgeLocation")
                protected String edgeLocation;
                @XmlAttribute(name = "keepWithNext")
                @XmlSchemaType(name = "positiveInteger")
                protected BigInteger keepWithNext;
                @XmlAttribute(name = "keepWithPrevious")
                @XmlSchemaType(name = "positiveInteger")
                protected BigInteger keepWithPrevious;

                /**
                 * Gets the value of the contents property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Contents }
                 *     
                 */
                public Contents getContents() {
                    return contents;
                }

                /**
                 * Sets the value of the contents property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Contents }
                 *     
                 */
                public void setContents(Contents value) {
                    this.contents = value;
                }

                /**
                 * Gets the value of the style property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Style }
                 *     
                 */
                public Style getStyle() {
                    return style;
                }

                /**
                 * Sets the value of the style property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Style }
                 *     
                 */
                public void setStyle(Style value) {
                    this.style = value;
                }

                /**
                 * Gets the value of the conditionalStyles property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link ConditionalStyles }
                 *     
                 */
                public ConditionalStyles getConditionalStyles() {
                    return conditionalStyles;
                }

                /**
                 * Sets the value of the conditionalStyles property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link ConditionalStyles }
                 *     
                 */
                public void setConditionalStyles(ConditionalStyles value) {
                    this.conditionalStyles = value;
                }

                /**
                 * Gets the value of the conditionalStyleRefs property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link ConditionalStyleRefs }
                 *     
                 */
                public ConditionalStyleRefs getConditionalStyleRefs() {
                    return conditionalStyleRefs;
                }

                /**
                 * Sets the value of the conditionalStyleRefs property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link ConditionalStyleRefs }
                 *     
                 */
                public void setConditionalStyleRefs(ConditionalStyleRefs value) {
                    this.conditionalStyleRefs = value;
                }

                /**
                 * Gets the value of the factCell property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link FactCell }
                 *     
                 */
                public FactCell getFactCell() {
                    return factCell;
                }

                /**
                 * Sets the value of the factCell property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link FactCell }
                 *     
                 */
                public void setFactCell(FactCell value) {
                    this.factCell = value;
                }

                /**
                 * Gets the value of the xmlAttributes property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link XMLAttributes }
                 *     
                 */
                public XMLAttributes getXMLAttributes() {
                    return xmlAttributes;
                }

                /**
                 * Sets the value of the xmlAttributes property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link XMLAttributes }
                 *     
                 */
                public void setXMLAttributes(XMLAttributes value) {
                    this.xmlAttributes = value;
                }

                /**
                 * Gets the value of the appCrosstabNodeMemberProperties property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link AppCrosstabNodeMemberProperties }
                 *     
                 */
                public AppCrosstabNodeMemberProperties getAppCrosstabNodeMemberProperties() {
                    return appCrosstabNodeMemberProperties;
                }

                /**
                 * Sets the value of the appCrosstabNodeMemberProperties property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link AppCrosstabNodeMemberProperties }
                 *     
                 */
                public void setAppCrosstabNodeMemberProperties(AppCrosstabNodeMemberProperties value) {
                    this.appCrosstabNodeMemberProperties = value;
                }

                /**
                 * Gets the value of the renderFactCells property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Boolean }
                 *     
                 */
                public boolean isRenderFactCells() {
                    if (renderFactCells == null) {
                        return false;
                    } else {
                        return renderFactCells;
                    }
                }

                /**
                 * Sets the value of the renderFactCells property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Boolean }
                 *     
                 */
                public void setRenderFactCells(Boolean value) {
                    this.renderFactCells = value;
                }

                /**
                 * Gets the value of the repeatEveryPage property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Boolean }
                 *     
                 */
                public boolean isRepeatEveryPage() {
                    if (repeatEveryPage == null) {
                        return false;
                    } else {
                        return repeatEveryPage;
                    }
                }

                /**
                 * Sets the value of the repeatEveryPage property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Boolean }
                 *     
                 */
                public void setRepeatEveryPage(Boolean value) {
                    this.repeatEveryPage = value;
                }

                /**
                 * Gets the value of the edgeLocation property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getEdgeLocation() {
                    return edgeLocation;
                }

                /**
                 * Sets the value of the edgeLocation property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setEdgeLocation(String value) {
                    this.edgeLocation = value;
                }

                /**
                 * Gets the value of the keepWithNext property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                public BigInteger getKeepWithNext() {
                    return keepWithNext;
                }

                /**
                 * Sets the value of the keepWithNext property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                public void setKeepWithNext(BigInteger value) {
                    this.keepWithNext = value;
                }

                /**
                 * Gets the value of the keepWithPrevious property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                public BigInteger getKeepWithPrevious() {
                    return keepWithPrevious;
                }

                /**
                 * Sets the value of the keepWithPrevious property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                public void setKeepWithPrevious(BigInteger value) {
                    this.keepWithPrevious = value;
                }

            }

        }

    }

}
